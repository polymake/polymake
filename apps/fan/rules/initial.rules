#  Copyright (c) 1997-2021
#  Ewgenij Gawrilow, Michael Joswig, and the polymake team
#  Technische UniversitÃ¤t Berlin, Germany
#  https://polymake.org
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by the
#  Free Software Foundation; either version 2, or (at your option) any
#  later version: http://www.gnu.org/licenses/gpl.txt.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#-------------------------------------------------------------------------------

object PolyhedralFan {

   rule initial : {
      if (defined (my $ic=$this->INPUT_CONES)) {
         if ($ic->rows == 0) {
            my $emptySet = new Array<Set<Int>>();
            my $in_rays = $this->lookup("INPUT_RAYS");
            my $in_lin = $this->lookup("INPUT_LINEALITY");
            my $ambient_dim = (defined($in_rays) && $in_rays->cols) ||
                              (defined($in_lin) && $in_lin->cols) ||
                              $this->lookup("FAN_AMBIENT_DIM") // 0;
            my $empty = new Matrix<Scalar>(0, $ambient_dim);
            my $repl = new Core::BigObject::Replacement(RAYS => $empty, LINEALITY_SPACE => $empty, MAXIMAL_CONES => $emptySet, FAN_DIM => -1, FAN_AMBIENT_DIM => $ambient_dim,
                                                        defined($in_rays) ? (INPUT_RAYS => $in_rays) : (),
                                                        defined($in_lin) ? (INPUT_LINEALITY => $in_lin) : ());
            die $repl;
         }
      }
   }
   precondition : exists(INPUT_CONES);


   rule initial : {
      if($this->INPUT_CONES->cols() > $this->INPUT_RAYS->rows()){
         croak("\ninvalid input: number of rays used in INPUT_CONES exceeds number of INPUT_RAYS");
      }
   }
   precondition : exists(INPUT_CONES);
   precondition : exists(INPUT_RAYS);

}


# Local Variables:
# mode: perl
# perl-indent-level: 3
# indent-tabs-mode:nil
# End:
