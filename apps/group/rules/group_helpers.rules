#  Copyright (c) 1997-2021
#  Ewgenij Gawrilow, Michael Joswig, and the polymake team
#  Technische UniversitÃ¤t Berlin, Germany
#  https://polymake.org
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by the
#  Free Software Foundation; either version 2, or (at your option) any
#  later version: http://www.gnu.org/licenses/gpl.txt.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#-------------------------------------------------------------------------------

# @category Producing a group
# Constructs a group from a string with generators in cyclic notation.
# All numbers in the string are 0-based.
# Example: "(0,2)(1,3)"
# @param String generators the group generators in cyclic notation
# @return Group
# @example The following constructs a group with 2 generators.
# > $g = group_from_cyclic_notation0("(0,2)(1,3),(0,3)");
# > print $g->PERMUTATION_ACTION->GENERATORS;
# | 2 3 0 1
# | 3 1 2 0

user_function group_from_cyclic_notation0($) {
   group_from_cyclic_notation_helper(shift, 0);
}

# @category Producing a group
# Constructs a group from a string with generators in cyclic notation.
# All numbers in the string are 1-based.
# @param String generators the group generators in cyclic notation
# @return Group
# @example The following constructs a group with 2 generators.
# > $g = group_from_cyclic_notation1("(1,3)(2,4),(1,4)");
# > print $g->PERMUTATION_ACTION->GENERATORS;
# | 2 3 0 1
# | 3 1 2 0
user_function group_from_cyclic_notation1($) {
   group_from_cyclic_notation_helper(shift, 1);
}

# Local Variables:
# mode: perl
# cperl-indent-level:3
# indent-tabs-mode:nil
# End:
