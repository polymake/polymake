{"app": "common",
 "inst": [
  {"guard_name": "CORE_WRAPPERS_Vector", "include": ["polymake/Vector.h"], "pkg": "Polymake::common::Vector", "wrapper_file": "include/core-wrappers/polymake/Vector.h"},
  {"class": "Vector<double>", "include": ["polymake/Vector.h"], "pkg": "Polymake::common::Vector__Float"},
  {"class": "Vector<Rational>", "include": ["polymake/Rational.h", "polymake/Vector.h"], "pkg": "Polymake::common::Vector__Rational"},
  {"class": "Vector<Integer>", "include": ["polymake/Integer.h", "polymake/Vector.h"], "pkg": "Polymake::common::Vector__Integer"},
  {"class": "Vector<Int>", "include": ["polymake/Vector.h"], "pkg": "Polymake::common::Vector__Int"},
  {"class": "Vector<UniPolynomial<Rational, Int>>", "include": ["polymake/Rational.h", "polymake/RationalFunction.h", "polymake/Vector.h"], "pkg": "Polymake::common::Vector__UniPolynomial_A_Rational_I_Int_Z"},
  {"class": "Vector<TropicalNumber<Min, Rational>>", "include": ["polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "pkg": "Polymake::common::Vector__TropicalNumber_A_Min_I_Rational_Z"},
  {"args": ["Vector<double>"], "include": ["polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["Vector<Rational>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["Vector<double>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Rational>", "Int(Int)"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.Int"},
  {"args": ["Vector<Int>", "Int(Int)"], "include": ["polymake/Vector.h"], "op": "new", "sig": "new.Int"},
  {"args": ["perl::Canned<const Wary<Vector<Rational>>&>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Vector<double>>&>", "perl::Canned<const Vector<double>&>"], "include": ["polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<Vector<Rational>&>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "_Or", "ret": "lvalue", "sig": "_Or:O.X1.X"},
  {"args": ["perl::Canned<Vector<Int>&>", "Int"], "include": ["polymake/Vector.h"], "op": "_Or", "ret": "lvalue", "sig": "_Or:O.X1.X"},
  {"args": ["Vector<Int>", "perl::Canned<const pm::SameElementSparseVector<pm::Set<Int, pm::operations::cmp> const&, Int const&>&>"], "include": ["polymake/Set.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Vector<Rational>>&>", "perl::Canned<const SparseVector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Vector<TropicalNumber<Min, Rational>>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["Vector<Int>"], "include": ["polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["Vector<Integer>"], "include": ["polymake/Integer.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"class": "Vector<Set<Int>>", "include": ["polymake/Set.h", "polymake/Vector.h"], "pkg": "Polymake::common::Vector__Set__Int"},
  {"class": "Vector<Polynomial<QuadraticExtension<Rational>, Int>>", "include": ["polymake/Polynomial.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "pkg": "Polymake::common::Vector__Polynomial_A_QuadraticExtension__Rational_I_Int_Z"},
  {"class": "Vector<Polynomial<Rational, Int>>", "include": ["polymake/Polynomial.h", "polymake/Rational.h", "polymake/Vector.h"], "pkg": "Polymake::common::Vector__Polynomial_A_Rational_I_Int_Z"},
  {"class": "Vector<QuadraticExtension<Rational>>", "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "pkg": "Polymake::common::Vector__QuadraticExtension__Rational"},
  {"args": ["Vector<Polynomial<QuadraticExtension<Rational>, Int>>"], "include": ["polymake/Polynomial.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const pm::SameElementVector<pm::Rational const&>&>"], "include": ["polymake/Rational.h", "polymake/linalg.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["Vector<Polynomial<Rational, Int>>"], "include": ["polymake/Polynomial.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["Vector<Int>", "perl::Canned<const Array<Int>&>"], "include": ["polymake/Array.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Vector<Int>>&>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<Int, pm::operations::cmp> const, Int const&>&>"], "include": ["polymake/Vector.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"class": "Vector<TropicalNumber<Max, Rational>>", "include": ["polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "pkg": "Polymake::common::Vector__TropicalNumber_A_Max_I_Rational_Z"},
  {"args": ["Vector<TropicalNumber<Max, Rational>>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Wary<Vector<Int>>&>", "perl::Canned<const Vector<Int>&>"], "include": ["polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Vector<Integer>", "Int(Int)"], "include": ["polymake/Integer.h", "polymake/Vector.h"], "op": "new", "sig": "new.Int"},
  {"args": ["perl::Canned<const Wary<Vector<Integer>>&>", "perl::Canned<const Vector<Integer>&>"], "include": ["polymake/Integer.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Vector<Integer>", "perl::Canned<const Vector<Int>&>"], "include": ["polymake/Integer.h", "polymake/Vector.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Vector<Rational>", "perl::Canned<const Vector<TropicalNumber<Max, Rational>>&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Rational>", "perl::Canned<const Vector<TropicalNumber<Min, Rational>>&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::SameElementVector<pm::Rational const&>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<TropicalNumber<Min, Rational>>", "perl::Canned<const Vector<TropicalNumber<Min, Rational>>&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<TropicalNumber<Max, Rational>>", "perl::Canned<const Vector<TropicalNumber<Max, Rational>>&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Vector<TropicalNumber<Min, Rational>>>&>", "perl::Canned<const Vector<TropicalNumber<Min, Rational>>&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Vector<TropicalNumber<Max, Rational>>>&>", "perl::Canned<const Vector<TropicalNumber<Max, Rational>>&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::Canned<const Wary<Vector<Rational>>&>", "perl::Canned<const Vector<Integer>&>"], "include": ["polymake/Integer.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "_ne", "sig": "_ne:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Vector<Rational>>&>", "perl::Canned<const pm::SameElementVector<pm::Rational const&>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<Int, pm::operations::cmp> const, pm::Rational const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer>&>, pm::Series<Int, false> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<Int>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const Vector<Int>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const Vector<double>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"class": "Vector<PuiseuxFraction<Max, Rational, Rational>>", "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "pkg": "Polymake::common::Vector__PuiseuxFraction_A_Max_I_Rational_I_Rational_Z"},
  {"class": "Vector<PuiseuxFraction<Min, Rational, Rational>>", "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "pkg": "Polymake::common::Vector__PuiseuxFraction_A_Min_I_Rational_I_Rational_Z"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<Int>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const pm::SameElementVector<Int const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer>&>, pm::Series<Int, false> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::QuadraticExtension<pm::Rational> >&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::QuadraticExtension<pm::Rational> >&>, pm::Series<Int, true> const, mlist<> >, pm::Series<Int, true> const&, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Set.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Vector<QuadraticExtension<Rational>>", "perl::Canned<const SparseVector<QuadraticExtension<Rational>>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Vector<Rational>", "perl::Canned<const SparseVector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::Canned<const Wary<Vector<QuadraticExtension<Rational>>>&>", "perl::Canned<const Vector<QuadraticExtension<Rational>>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Vector<Integer>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix<pm::Integer> const&>, pm::Series<Int, false> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<PuiseuxFraction<Min, Rational, Rational>>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Wary<Vector<PuiseuxFraction<Min, Rational, Rational>>>&>", "perl::Canned<const Vector<PuiseuxFraction<Min, Rational, Rational>>&>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Vector<QuadraticExtension<Rational>>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Wary<Vector<Integer>>&>", "perl::Canned<const Vector<Int>&>"], "include": ["polymake/Integer.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Vector<Integer>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const Vector<Integer>&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Vector<Integer>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Integer.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::VectorChain<mlist<pm::SameElementVector<pm::Integer> const, pm::Vector<pm::Integer> const> >&>"], "include": ["polymake/Integer.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Vector<Integer>>&>", "perl::Canned<const SparseVector<Integer>&>"], "include": ["polymake/Integer.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const Wary<Vector<Rational>>&>", "perl::Canned<const pm::VectorChain<mlist<pm::SameElementVector<pm::Integer> const, pm::Vector<pm::Integer> const> >&>"], "include": ["polymake/Integer.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Vector<Integer>", "perl::Canned<const pm::VectorChain<mlist<pm::SameElementVector<pm::Integer> const, pm::Vector<pm::Integer> const> >&>"], "include": ["polymake/Integer.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Vector<PuiseuxFraction<Max, Rational, Rational>>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Wary<Vector<PuiseuxFraction<Max, Rational, Rational>>>&>", "perl::Canned<const Vector<PuiseuxFraction<Max, Rational, Rational>>&>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Vector<PuiseuxFraction<Max, Rational, Rational>>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::PuiseuxFraction<pm::Max, pm::Rational, pm::Rational> > const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<double>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["perl::Canned<const Wary<Vector<Rational>>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, false> const, mlist<> >>&>", "perl::Canned<const pm::SameElementVector<pm::Rational const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Vector<QuadraticExtension<Rational>>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Vector<QuadraticExtension<Rational>>", "Int(Int)"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.Int"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const Vector<double>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Vector<double>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["pm::IndexedSlice<pm::Vector<pm::Rational>&, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Vector<Integer>", "perl::Canned<const Array<Integer>&>"], "include": ["polymake/Array.h", "polymake/Integer.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<double>", "Int(Int)"], "include": ["polymake/Vector.h"], "op": "new", "sig": "new.Int"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<Int, pm::operations::cmp> const, double const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Vector<Integer>", "perl::Canned<const SparseVector<Integer>&>"], "include": ["polymake/Integer.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::QuadraticExtension<pm::Rational> > const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Set.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["Vector<double>", "perl::Canned<const Vector<QuadraticExtension<Rational>>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Integer>", "perl::Canned<const Array<Int>&>"], "include": ["polymake/Array.h", "polymake/Integer.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Vector<Integer>>&>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<Int, pm::operations::cmp> const, pm::Integer const&>&>"], "include": ["polymake/Integer.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::Canned<const pm::IndexedSlice<pm::Vector<double>&, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/Set.h", "polymake/Vector.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["Vector<double>", "perl::Canned<const SparseVector<double>&>"], "include": ["polymake/SparseVector.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Integer>", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer> const&>, pm::Series<Int, true> const, mlist<> >, pm::Series<Int, true> const&, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Set.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Vector<Integer>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<Int>&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Vector<Integer>", "perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<Int, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/SparseMatrix.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Vector<Integer>", "perl::Canned<const Vector<Integer>&>"], "include": ["polymake/Integer.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Set<Int>>"], "include": ["polymake/Set.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::VectorChain<mlist<pm::Vector<pm::Rational> const&, pm::Vector<pm::Rational> const&> >&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::VectorChain<mlist<pm::Vector<pm::Rational> const&, pm::Vector<pm::Rational> const> >&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<TropicalNumber<Max, Rational>>", "Int(Int)"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new.Int"},
  {"args": ["Vector<TropicalNumber<Min, Rational>>", "Int(Int)"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new.Int"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<Int, pm::operations::cmp> const, pm::Rational const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Rational>", "perl::Canned<const Vector<Integer>&>"], "include": ["polymake/Integer.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<PuiseuxFraction<Min, Rational, Rational>>", "Int(Int)"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new.Int"},
  {"args": ["Vector<PuiseuxFraction<Min, Rational, Rational>>", "perl::Canned<const Vector<PuiseuxFraction<Min, Rational, Rational>>&>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<PuiseuxFraction<Min, Rational, Rational>>", "perl::Canned<const SparseVector<PuiseuxFraction<Min, Rational, Rational>>&>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"class": "Vector<std::pair<double, double>>", "include": ["polymake/Vector.h", "polymake/client.h"], "pkg": "Polymake::common::Vector__Pair_A_Float_I_Float_Z"},
  {"args": ["Vector<double>", "perl::Canned<const pm::VectorChain<mlist<pm::SameElementVector<double> const, pm::Vector<double> const&> >&>"], "include": ["polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<QuadraticExtension<Rational>>", "perl::Canned<const Array<Int>&>"], "include": ["polymake/Array.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<QuadraticExtension<Rational>>", "perl::Canned<const Array<QuadraticExtension<Rational>>&>"], "include": ["polymake/Array.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<double>", "perl::Canned<const pm::VectorChain<mlist<pm::SameElementVector<double> const, pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double>&>, pm::Series<Int, true> const, mlist<> > const&> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<Rational>&>>", "perl::AnchorArg<perl::Canned<const Rational&>>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>"], "include": ["polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<const Wary<Matrix<Rational>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<Wary<pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::Rational const&> > const, pm::Matrix<pm::Rational> const&>, std::integral_constant<bool, false> >>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<Wary<pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Array<Int> const&, pm::all_selector const&>>>>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<double const&>>>", "perl::AnchorArg<perl::Canned<const Wary<Matrix<double>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<double const&>>>", "perl::AnchorArg<perl::Canned<Wary<pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<double const&> > const, pm::Matrix<double> const&>, std::integral_constant<bool, false> >>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<double>&>>", "perl::AnchorArg<perl::Canned<const Wary<Matrix<double>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "div", "sig": "div:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<const pm::SameElementVector<double const&>&>>", "perl::AnchorArg<perl::Canned<Wary<pm::BlockMatrix<mlist<pm::Matrix<double> const&, pm::RepeatedRow<pm::Vector<double> const&> const>, std::integral_constant<bool, true> >>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["Int", "perl::AnchorArg<perl::Canned<const Vector<double>&>>"], "include": ["polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<double>&>>", "perl::AnchorArg<perl::Canned<Wary<pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<double const&> > const, pm::Matrix<double> const&>, std::integral_constant<bool, false> >>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "div", "sig": "div:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<Wary<pm::DiagMatrix<pm::SameElementVector<pm::Rational const&>, true>>>>"], "include": ["polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<Wary<Matrix<Rational>>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::IndexedSlice<pm::Vector<pm::Rational> const&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const&, mlist<> >>>", "perl::AnchorArg<perl::Canned<Wary<Matrix<Rational>>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<Vector<Rational>>>", "perl::AnchorArg<perl::Canned<Wary<Matrix<Rational>>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<Rational>&>>", "perl::AnchorArg<perl::Canned<Wary<Matrix<Rational>>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Integer const&>>>", "perl::AnchorArg<perl::Canned<Wary<Matrix<Integer>>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["Int", "perl::AnchorArg<perl::Canned<Vector<Rational>>>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["Int", "perl::AnchorArg<perl::Canned<Vector<Integer>>>"], "include": ["polymake/Integer.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<Wary<pm::RepeatedRow<pm::SameElementVector<pm::Rational const&> >>>>"], "include": ["polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<Rational>&>>", "perl::AnchorArg<perl::Canned<Wary<Matrix<Rational>>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "div", "sig": "div:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::QuadraticExtension<pm::Rational> const&>>>", "perl::AnchorArg<perl::Canned<const Wary<Matrix<QuadraticExtension<Rational>>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::QuadraticExtension<pm::Rational> const&>>>", "perl::AnchorArg<perl::Canned<Wary<pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<pm::QuadraticExtension<pm::Rational> const&> > const, pm::Matrix<pm::QuadraticExtension<pm::Rational> > const&>, std::integral_constant<bool, false> >>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, true> >>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, true> >>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<Rational>&>>", "perl::AnchorArg<perl::Canned<Wary<pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::all_selector const&, pm::Series<Int, true> const>>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<Rational>&>>", "perl::AnchorArg<perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::all_selector const&, pm::Series<Int, true> const> const, pm::DiagMatrix<pm::SameElementVector<pm::Rational const&>, true> const>, std::integral_constant<bool, true> >>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["Int", "perl::AnchorArg<perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double>&>, pm::Series<Int, true> const, mlist<> >&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<double const&>>>", "perl::AnchorArg<perl::Canned<const Wary<pm::DiagMatrix<pm::Vector<double> const&, true>>&>>"], "include": ["polymake/SparseMatrix.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<double>&>>", "perl::AnchorArg<perl::Canned<Wary<pm::BlockMatrix<mlist<pm::RepeatedCol<pm::SameElementVector<double const&> > const, pm::DiagMatrix<pm::Vector<double> const&, true> const&>, std::integral_constant<bool, false> >>>>"], "include": ["polymake/SparseMatrix.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "div", "sig": "div:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<const pm::SameElementVector<double const&>&>>", "perl::AnchorArg<perl::Canned<const Wary<Matrix<double>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["Int", "perl::AnchorArg<perl::Canned<const Vector<Rational>&>>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<Rational>&>>", "perl::AnchorArg<perl::Canned<const Vector<Rational>&>>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<Rational>&>>", "perl::AnchorArg<perl::Canned<Vector<Rational>>>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["perl::AnchorArg<perl::Canned<Vector<Int>>>", "perl::AnchorArg<perl::Canned<const Wary<Matrix<Int>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<Vector<Int>>>", "perl::AnchorArg<perl::Canned<Wary<Matrix<Int>>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<const pm::SameElementVector<pm::Rational const&>&>>", "perl::AnchorArg<perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::RepeatedRow<pm::Vector<pm::Rational> const&> const, pm::Matrix<pm::Rational> const&>, std::integral_constant<bool, true> >>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<Int>&>>", "perl::AnchorArg<perl::Canned<const Wary<Matrix<Int>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >, pm::Series<Int, true> const&, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<Wary<SparseMatrix<Rational, NonSymmetric>>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["Vector<double>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<Int, pm::operations::cmp> const, double const&>&>"], "include": ["polymake/Vector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<PuiseuxFraction<Min, Rational, Rational>>", "perl::Canned<const SparseVector<PuiseuxFraction<Min, Rational, Rational>>&>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<const Wary<pm::MatrixMinor<pm::Matrix<pm::Rational>&, pm::all_selector const&, pm::Series<Int, true> const>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["Vector<Rational>", "perl::Canned<const SparseVector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Vector<double>", "perl::Canned<const SparseVector<double>&>"], "include": ["polymake/SparseVector.h", "polymake/Vector.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const Vector<Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::VectorChain<mlist<pm::SameElementVector<pm::Rational> const, pm::SparseVector<pm::Rational> const> >&>"], "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::VectorChain<mlist<pm::SameElementVector<pm::Rational> const, pm::SameElementSparseVector<pm::SingleElementSetCmp<Int, pm::operations::cmp> const, pm::Rational const&> const> >&>"], "include": ["polymake/Rational.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<Rational>&>>", "perl::AnchorArg<perl::Canned<const Wary<Matrix<Rational>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "div", "sig": "div:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<Integer>>", "perl::AnchorArg<perl::Canned<Vector<Integer>>>"], "include": ["polymake/Integer.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["perl::Canned<const Wary<pm::VectorChain<mlist<pm::SameElementVector<pm::Integer> const, pm::Vector<pm::Integer> const> >>&>", "perl::Canned<const pm::SameElementVector<pm::Rational const&>&>"], "include": ["polymake/Integer.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<Rational>&>>", "perl::AnchorArg<perl::Canned<const Wary<pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const&, pm::Series<Int, true> const>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::AnchorArg<perl::Canned<const pm::SameElementVector<Int const&>&>>", "perl::AnchorArg<perl::Canned<const Wary<Matrix<Int>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["Vector<Integer>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Vector<double>&>"], "include": ["polymake/Vector.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["perl::Canned<const Wary<pm::SameElementVector<pm::Rational const&>>&>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<const Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, true> >>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<Int, pm::operations::cmp> const, pm::Rational const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_ne", "sig": "_ne:O.X4.X"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::SameElementVector<pm::Rational const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<Rational>&>>", "perl::AnchorArg<perl::Canned<const Wary<Matrix<Rational>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["Int", "perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>"], "include": ["polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["Vector<Rational>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Int>", "perl::Canned<const pm::IndexedSlice<pm::Vector<pm::Rational> const&, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::VectorChain<mlist<pm::SameElementVector<pm::Rational> const, pm::SameElementVector<pm::Rational const&> const> >&>"], "include": ["polymake/Rational.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Array<Int> const&, mlist<> >&>"], "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Vector<Integer>", "perl::Canned<const SparseVector<Integer>&>"], "include": ["polymake/Integer.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Int>", "perl::Canned<const SparseVector<Int>&>"], "include": ["polymake/SparseVector.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix<pm::Rational>&>, pm::Series<Int, false> const, mlist<> >>&>", "perl::Canned<const pm::SameElementVector<pm::Rational const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_eq", "sig": "_eq:O.X4.X"},
  {"args": ["Vector<Int>", "perl::Canned<const Vector<Integer>&>"], "include": ["polymake/Integer.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<Vector<Rational>>&>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "sub", "sig": "sub:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::Vector<pm::Rational>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer>&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const Rational&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<Integer>>&>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Integer.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "sub", "sig": "sub:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<Rational>>&>", "perl::Canned<const Matrix<Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<double>>&>", "double"], "include": ["polymake/Vector.h"], "op": "div", "sig": "div:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<double>>&>", "perl::Canned<const Vector<double>&>"], "include": ["polymake/Vector.h"], "op": "sub", "sig": "sub:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<double>>&>", "perl::Canned<const Vector<double>&>"], "include": ["polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["double", "perl::Canned<const Wary<Vector<double>>&>"], "include": ["polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::QuadraticExtension<pm::Rational> > const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::QuadraticExtension<pm::Rational> > const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Set.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer>&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer>&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer>&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer>&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "op": "sub", "sig": "sub:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::SameElementVector<pm::Rational const&>>&>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h", "polymake/linalg.h"], "op": "div", "sig": "div:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer> const&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "add", "sig": "add:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<Rational>>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "sub", "sig": "sub:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<Rational>>&>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<Rational>>&>", "perl::Canned<const Matrix<Rational>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<double>>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double>&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double>&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double>&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "op": "sub", "sig": "sub:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double>&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const Vector<double>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "add", "sig": "add:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<double>>&>", "perl::Canned<const Vector<double>&>"], "include": ["polymake/Vector.h"], "op": "add", "sig": "add:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<double>>&>", "double(Int)"], "include": ["polymake/Vector.h"], "op": "div", "sig": "div:O.X4.X16"},
  {"args": ["Int", "perl::Canned<const Wary<Vector<Rational>>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::Vector<pm::Rational>&, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::Vector<pm::Rational>&, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<Rational>>&>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "add", "sig": "add:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<Integer>>&>", "perl::Canned<const pm::SameElementVector<pm::Integer const&>&>"], "include": ["polymake/Integer.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<Wary<Vector<Rational>>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "Add", "ret": "lvalue", "sig": "Add:O.X5.X16"},
  {"args": ["perl::Canned<Wary<Vector<Rational>>&>", "Int"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "Div", "ret": "lvalue", "sig": "Div:O.X5.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "sub", "sig": "sub:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Integer>&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Set.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["double", "perl::Canned<const Wary<pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Series<Int, true> const, mlist<> >>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Set.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Set.h"], "op": "sub", "sig": "sub:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "add", "sig": "add:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<Integer>>&>", "perl::Canned<const Vector<Integer>&>"], "include": ["polymake/Integer.h", "polymake/Vector.h"], "op": "sub", "sig": "sub:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >, pm::Series<Int, true> const&, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >, pm::Series<Int, true> const&, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "sub", "sig": "sub:O.X4.X16"},
  {"args": ["perl::Canned<Wary<Vector<double>>&>", "double(Int)"], "include": ["polymake/Vector.h"], "op": "Div", "ret": "lvalue", "sig": "Div:O.X5.X16"},
  {"args": ["Int", "perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<long, true> const, mlist<> >>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["Int", "perl::Canned<const Wary<pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<long, true> const, mlist<> > const&, pm::Series<long, true> const, mlist<> >>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["double(Int)", "perl::Canned<const Wary<pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<long, true> const, mlist<> > const&, pm::Series<long, true> const, mlist<> >>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Set.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["Int", "perl::Canned<const Wary<Vector<Int>>&>"], "include": ["polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["Int", "perl::Canned<const Wary<Vector<Integer>>&>"], "include": ["polymake/Integer.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"class": "Vector<GF2>", "include": ["polymake/GF2.h", "polymake/Vector.h"], "pkg": "Polymake::common::Vector__GF2"},
  {"args": ["Vector<GF2>", "perl::Canned<const pm::SameElementVector<pm::GF2 const&>&>"], "include": ["polymake/GF2.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<GF2>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<long, pm::operations::cmp> const, pm::GF2 const&>&>"], "include": ["polymake/GF2.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<pm::SameElementVector<pm::GF2 const&>>&>", "perl::Canned<const pm::SameElementVector<pm::GF2 const&>&>"], "include": ["polymake/GF2.h", "polymake/linalg.h"], "op": "add", "sig": "add:O.X4.X16"},
  {"args": ["Vector<GF2>", "perl::Canned<const Vector<GF2>&>"], "include": ["polymake/GF2.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Wary<pm::SameElementVector<pm::GF2 const&>>&>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<long, pm::operations::cmp> const, pm::GF2 const&>&>"], "include": ["polymake/GF2.h", "polymake/linalg.h"], "op": "add", "sig": "add:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<long, true> const, mlist<> >>&>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<long, pm::operations::cmp> const, pm::Rational const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_ne", "sig": "_ne:O.X4.X"},
  {"args": ["Vector<GF2>"], "include": ["polymake/GF2.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["Vector<TropicalNumber<Max, Rational>>", "perl::Canned<const pm::SameElementVector<pm::Rational const&>&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<Wary<pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, true> >>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<long, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<long, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "add", "sig": "add:O.X4.X16"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::QuadraticExtension<pm::Rational> >&>, pm::Series<long, true> const, mlist<> >", "perl::Canned<const Vector<QuadraticExtension<Rational>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::QuadraticExtension<pm::Rational> >&>, pm::Series<long, true> const, mlist<> >", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<long, pm::operations::cmp> const, pm::QuadraticExtension<pm::Rational> const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/linalg.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::PuiseuxFraction<pm::Max, pm::Rational, pm::Rational> >&>, pm::Series<long, true> const, mlist<> >", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::PuiseuxFraction<pm::Max, pm::Rational, pm::Rational> > const&>, pm::Series<long, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::Canned<const Wary<pm::VectorChain<mlist<pm::SameElementVector<pm::Rational> const, pm::SameElementVector<pm::Rational const&> const> >>&>", "perl::Canned<const Vector<Integer>&>"], "include": ["polymake/Integer.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::AnchorArg<perl::Canned<const Rational&>>", "perl::AnchorArg<perl::Canned<Vector<Rational>>>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X11"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::VectorChain<mlist<pm::SameElementVector<pm::Rational const&> const, pm::Vector<pm::Rational> const> >&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Int>", "perl::Canned<const Vector<Int>&>"], "include": ["polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<long, true> const, mlist<> >", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<long, false> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<long, true> const, mlist<> >>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<long, false> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["Int", "perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<long, true> const, mlist<> >>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["perl::Canned<const Wary<Vector<Rational>>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<long, false> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["Vector<Rational>", "perl::Canned<const Vector<Int>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<pm::SameElementVector<pm::Rational const&>>>", "perl::AnchorArg<perl::Canned<const Wary<SparseMatrix<Rational, NonSymmetric>>&>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/linalg.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::SameElementVector<pm::Integer const&>&>"], "include": ["polymake/Integer.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<long, pm::operations::cmp> const, pm::Rational const&>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::SameElementSparseVector<pm::SingleElementSetCmp<long, pm::operations::cmp>, pm::Rational const&>&>"], "include": ["polymake/Rational.h", "polymake/Vector.h", "polymake/linalg.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::Series<long, true>&>"], "include": ["polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["perl::AnchorArg<perl::Canned<const Vector<Int>&>>", "perl::AnchorArg<perl::Canned<Wary<Matrix<Int>>>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "_or", "sig": "_or:O.X11.X15"},
  {"args": ["Vector<TropicalNumber<Min, Rational>>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<long, false> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<PuiseuxFraction<Max, Rational, Rational>>", "perl::Canned<const SparseVector<PuiseuxFraction<Max, Rational, Rational>>&>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<PuiseuxFraction<Max, Rational, Rational>>", "perl::Canned<const SparseVector<PuiseuxFraction<Max, Rational, Rational>>&>"], "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h", "polymake/Vector.h"], "op": "convert", "ret": "empty", "sig": "convert:O"},
  {"args": ["Vector<Rational>", "perl::Canned<const pm::Series<long, true>&>"], "include": ["polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<QuadraticExtension<Rational>>", "perl::Canned<const Vector<Rational>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Int", "perl::Canned<const Wary<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::QuadraticExtension<pm::Rational> > const&>, pm::Series<long, true> const, mlist<> >>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X4.X16"},
  {"args": ["Vector<QuadraticExtension<Rational>>", "perl::Canned<const Vector<QuadraticExtension<Rational>>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::QuadraticExtension<pm::Rational> >&>, pm::Series<long, true> const, mlist<> >", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::QuadraticExtension<pm::Rational> > const&>, pm::Series<long, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["Vector<QuadraticExtension<Rational>>", "perl::Canned<const Vector<Int>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<QuadraticExtension<Rational>>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::QuadraticExtension<pm::Rational> > const&>, pm::Series<long, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
  {"args": ["Vector<QuadraticExtension<Rational>>", "perl::Canned<const SparseVector<QuadraticExtension<Rational>>&>"], "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/Vector.h"], "op": "new", "sig": "new.X"},
 null ],
"version": 3}
