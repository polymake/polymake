{"app": "common",
 "inst": [
  {"guard_name": "CORE_WRAPPERS_Map", "include": ["polymake/Map.h"], "pkg": "Polymake::common::Map", "wrapper_file": "include/core-wrappers/polymake/Map.h"},
  {"class": "Map<Vector<double>, Int>", "include": ["polymake/Map.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Float_I_Int_Z"},
  {"class": "Map<Int, Rational>", "include": ["polymake/Map.h", "polymake/Rational.h"], "pkg": "Polymake::common::Map_A_Int_I_Rational_Z"},
  {"class": "Map<Rational, Int>", "include": ["polymake/Map.h", "polymake/Rational.h"], "pkg": "Polymake::common::Map_A_Rational_I_Int_Z"},
  {"class": "Map<Int, Int>", "include": ["polymake/Map.h"], "pkg": "Polymake::common::Map_A_Int_I_Int_Z"},
  {"class": "Map<Int, QuadraticExtension<Rational>>", "include": ["polymake/Map.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "pkg": "Polymake::common::Map_A_Int_I_QuadraticExtension__Rational_Z"},
  {"class": "Map<Rational, Rational>", "include": ["polymake/Map.h", "polymake/Rational.h"], "pkg": "Polymake::common::Map_A_Rational_I_Rational_Z"},
  {"args": ["Map<Vector<double>, Int>"], "include": ["polymake/Map.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Vector<double>, Int>&>", "perl::Canned<const Vector<double>&>"], "include": ["polymake/Map.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Vector<double>, Int>&>>", "perl::Canned<const Vector<double>&>"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/Vector.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::Canned<const Map<Vector<double>, Int>&>", "perl::Canned<const Vector<double>&>"], "func": "exists", "include": ["polymake/Map.h", "polymake/Vector.h"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"args": ["perl::Canned<Map<Vector<double>, Int>&>", "perl::Canned<const Vector<double>&>"], "func": "erase", "include": ["polymake/Map.h", "polymake/Vector.h"], "kind": "meth", "sig": "erase:CORE.M1.X"},
  {"args": ["perl::Canned<Map<Vector<double>, Int>&>", "perl::Canned<const Vector<double>&>"], "func": "pm::perl::delayed_erase", "include": ["polymake/Map.h", "polymake/Vector.h", "polymake/perl/assoc.h"], "sig": "assoc_delete.X1.X"},
  {"args": ["Map<Int, Int>"], "include": ["polymake/Map.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Int, Int>&>", "Int"], "include": ["polymake/Map.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<Rational, Int>"], "include": ["polymake/Map.h", "polymake/Rational.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Rational, Int>&>", "perl::Canned<const Rational&>"], "include": ["polymake/Map.h", "polymake/Rational.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<Int, Rational>"], "include": ["polymake/Map.h", "polymake/Rational.h"], "op": "new", "sig": "new"},
  {"args": ["Map<Int, QuadraticExtension<Rational>>"], "include": ["polymake/Map.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "new", "sig": "new"},
  {"class": "Map<std::pair<Int, Int>, Int>", "include": ["polymake/Map.h", "polymake/client.h"], "pkg": "Polymake::common::Map_A_Pair_A_Int_I_Int_Z_I_Int_Z"},
  {"class": "Map<std::pair<Int, Int>, Vector<Rational>>", "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/client.h"], "pkg": "Polymake::common::Map_A_Pair_A_Int_I_Int_Z_I_Vector__Rational_Z"},
  {"class": "Map<Set<Int>, Integer>", "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Set.h"], "pkg": "Polymake::common::Map_A_Set__Int_I_Integer_Z"},
  {"class": "Map<Vector<Int>, Integer>", "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Int_I_Integer_Z"},
  {"class": "Map<Integer, Int>", "include": ["polymake/Integer.h", "polymake/Map.h"], "pkg": "Polymake::common::Map_A_Integer_I_Int_Z"},
  {"class": "Map<std::pair<Int, Int>, Vector<Integer>>", "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Vector.h", "polymake/client.h"], "pkg": "Polymake::common::Map_A_Pair_A_Int_I_Int_Z_I_Vector__Integer_Z"},
  {"class": "Map<Int, std::pair<Int, Int>>", "include": ["polymake/Map.h", "polymake/client.h"], "pkg": "Polymake::common::Map_A_Int_I_Pair_A_Int_I_Int_Z_Z"},
  {"args": ["Map<Vector<Int>, Integer>"], "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["Map<Set<Int>, Integer>"], "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"class": "Map<Set<Int>, Vector<Rational>>", "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Set__Int_I_Vector__Rational_Z"},
  {"class": "Map<Vector<Integer>, Vector<Integer>>", "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Integer_I_Vector__Integer_Z"},
  {"args": ["Map<Set<Int>, Vector<Rational>>"], "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Set<Int>, Vector<Rational>>&>>", "perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&>&>"], "func": "pm::perl::find_element", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::Canned<const Map<Set<Int>, Vector<Rational>>&>", "perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::Canned<Map<Set<Int>, Vector<Rational>>&>", "perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"class": "Map<Int, std::list<Int>>", "include": ["polymake/Map.h", "polymake/list"], "pkg": "Polymake::common::Map_A_Int_I_List__Int_Z"},
  {"class": "Map<Array<Int>, Int>", "include": ["polymake/Array.h", "polymake/Map.h"], "pkg": "Polymake::common::Map_A_Array__Int_I_Int_Z"},
  {"args": ["Map<std::pair<Int, Int>, Int>"], "include": ["polymake/Map.h", "polymake/client.h"], "op": "new", "sig": "new"},
  {"args": ["Map<Array<Int>, Int>"], "include": ["polymake/Array.h", "polymake/Map.h"], "op": "new", "sig": "new"},
  {"class": "Map<Vector<double>, bool>", "include": ["polymake/Map.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Float_I_Bool_Z"},
  {"class": "Map<Vector<Rational>, bool>", "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Rational_I_Bool_Z"},
  {"class": "Map<Vector<double>, Set<Int>>", "include": ["polymake/Map.h", "polymake/Set.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Float_I_Set__Int_Z"},
  {"class": "Map<Vector<Rational>, Int>", "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Rational_I_Int_Z"},
  {"class": "Map<Bitset, hash_map<Bitset, Rational>>", "include": ["polymake/Bitset.h", "polymake/Map.h", "polymake/Rational.h", "polymake/hash_map"], "pkg": "Polymake::common::Map_A_Bitset_I_HashMap_A_Bitset_I_Rational_Z_Z"},
  {"args": ["Map<Vector<double>, Set<Int>>"], "include": ["polymake/Map.h", "polymake/Set.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Vector<double>, Set<Int>>&>", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Set.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::Canned<const Map<Vector<double>, Int>&>", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Series<Int, true> const, mlist<> >&>"], "func": "exists", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Set.h", "polymake/Vector.h"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"args": ["perl::Canned<Map<Vector<double>, Int>&>", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Set.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::Canned<Map<Vector<double>, Int>&>", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Series<Int, true> const, mlist<> >&>"], "func": "erase", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Set.h", "polymake/Vector.h"], "kind": "meth", "sig": "erase:CORE.M1.X"},
  {"args": ["Map<Integer, Int>"], "include": ["polymake/Integer.h", "polymake/Map.h"], "op": "new", "sig": "new"},
  {"args": ["Map<Bitset, hash_map<Bitset, Rational>>"], "include": ["polymake/Bitset.h", "polymake/Map.h", "polymake/Rational.h", "polymake/hash_map"], "op": "new", "sig": "new"},
  {"args": ["Map<Vector<Rational>, bool>"], "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Vector<Rational>, bool>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::Canned<const Map<Vector<Rational>, bool>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "func": "exists", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"args": ["Map<Vector<Rational>, Int>"], "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Vector<Rational>, Int>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Vector<Rational>, Int>&>>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "func": "pm::perl::find_element", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["Map<Vector<double>, bool>"], "include": ["polymake/Map.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Vector<double>, bool>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::Canned<const Map<Vector<double>, bool>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<Int, true> const, mlist<> >&>"], "func": "exists", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Vector.h"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"args": ["perl::Canned<Map<Vector<double>, Int>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<Int, true> const, mlist<> >&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Vector<double>, Int>&>>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<Int, true> const, mlist<> >&>"], "func": "pm::perl::find_element", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Vector.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["Map<Rational, Rational>"], "include": ["polymake/Map.h", "polymake/Rational.h"], "op": "new", "sig": "new"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Int, Int>&>>", "Int"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<std::pair<Int, Int>, Int>&>>", "perl::Canned<const std::pair<Int, Int>&>"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/client.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["Map<std::pair<Int, Int>, Vector<Integer>>"], "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Vector.h", "polymake/client.h"], "op": "new", "sig": "new"},
  {"args": ["Map<std::pair<Int, Int>, Vector<Rational>>"], "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/client.h"], "op": "new", "sig": "new"},
  {"class": "Map<std::string, std::string>", "include": ["polymake/Map.h"], "pkg": "Polymake::common::Map_A_String_I_String_Z"},
  {"args": ["Map<std::string, std::string>"], "include": ["polymake/Map.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<std::string, std::string>&>", "std::string"], "include": ["polymake/Map.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<Set<Int>, Integer>", "perl::Canned<const Map<Set<Int>, Integer>&>"], "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"class": "Map<Set<Int>, Int>", "include": ["polymake/Map.h", "polymake/Set.h"], "pkg": "Polymake::common::Map_A_Set__Int_I_Int_Z"},
  {"class": "Map<Set<Int>, Map<Set<Int>, Int>>", "include": ["polymake/Map.h", "polymake/Set.h"], "pkg": "Polymake::common::Map_A_Set__Int_I_Map_A_Set__Int_I_Int_Z_Z"},
  {"class": "Map<Vector<Integer>, Set<Int>>", "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Set.h", "polymake/Vector.h"], "pkg": "Polymake::common::Map_A_Vector__Integer_I_Set__Int_Z"},
  {"args": ["Map<Vector<Integer>, Set<Int>>"], "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Set.h", "polymake/Vector.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Vector<Integer>, Set<Int>>&>", "perl::Canned<const Vector<Integer>&>"], "include": ["polymake/Integer.h", "polymake/Map.h", "polymake/Set.h", "polymake/Vector.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<Set<Set<Int>>, Matrix<Rational>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"args": ["Map<Set<Int>, Matrix<Rational>>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Set<Int>, Matrix<Rational>>&>", "perl::Canned<const Set<Int>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<Set<Set<Int>>, Int>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Set<Int>, Matrix<Rational>>&>>", "perl::Canned<const Set<Int>&>"], "func": "pm::perl::find_element", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::Canned<Map<Set<Set<Int>>, Int>&>", "perl::Canned<const Set<Set<Int>>&>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Set<Set<Int>>, Int>&>>", "perl::Canned<const Set<Set<Int>>&>"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/Set.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::Canned<Map<Set<Set<Int>>, Matrix<Rational>>&>", "perl::Canned<const Set<Set<Int>>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<Int, Array<Set<Int>>>"], "include": ["polymake/Array.h", "polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Int, Array<Set<Int>>>&>", "Int"], "include": ["polymake/Array.h", "polymake/Map.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Int, Array<Set<Int>>>&>>", "Int"], "func": "pm::perl::find_element", "include": ["polymake/Array.h", "polymake/Map.h", "polymake/Set.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::Canned<const Map<Set<Int>, Matrix<Rational>>&>", "perl::Canned<const Set<Int>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::Canned<const Map<Set<Int>, Matrix<Rational>>&>", "perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"class": "Map<Set<Int>, Matrix<Rational>>", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "pkg": "Polymake::common::Map_A_Set__Int_I_Matrix_A_Rational_I_NonSymmetric_Z_Z"},
  {"class": "Map<Int, Array<Int>>", "include": ["polymake/Array.h", "polymake/Map.h"], "pkg": "Polymake::common::Map_A_Int_I_Array__Int_Z"},
  {"class": "Map<Int, Map<Int, Array<Int>>>", "include": ["polymake/Array.h", "polymake/Map.h"], "pkg": "Polymake::common::Map_A_Int_I_Map_A_Int_I_Array__Int_Z_Z"},
  {"class": "Map<Set<Int>, Set<Int>>", "include": ["polymake/Map.h", "polymake/Set.h"], "pkg": "Polymake::common::Map_A_Set__Int_I_Set__Int_Z"},
  {"args": ["Map<Set<Int>, Set<Int>>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Set<Int>, Set<Int>>&>", "perl::Canned<const Set<Int>&>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Vector<Rational>, Int>&>>", "perl::Canned<const Vector<Rational>&>"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["Map<Set<Int>, Set<Int>>", "perl::Canned<const Map<Set<Int>, Set<Int>>&>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Set<Int>, Set<Int>>&>>", "perl::Canned<const Set<Int>&>"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/Set.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"class": "Map<Bitset, Bitset>", "include": ["polymake/Bitset.h", "polymake/Map.h"], "pkg": "Polymake::common::Map_A_Bitset_I_Bitset_Z"},
  {"class": "Map<Bitset, Int>", "include": ["polymake/Bitset.h", "polymake/Map.h"], "pkg": "Polymake::common::Map_A_Bitset_I_Int_Z"},
  {"args": ["Map<Bitset, Bitset>"], "include": ["polymake/Bitset.h", "polymake/Map.h"], "op": "new", "sig": "new"},
  {"args": ["Map<Bitset, Int>"], "include": ["polymake/Bitset.h", "polymake/Map.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Bitset, Bitset>&>", "perl::Canned<const Bitset&>"], "include": ["polymake/Bitset.h", "polymake/Map.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<Set<Int>, Int>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Set<Int>, Int>&>", "perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["Map<Set<Int>, Int>", "perl::Canned<const Map<Set<Int>, Int>&>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<Map<Set<Int>, Int>&>", "perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Set<Int>, Int>&>>", "perl::Canned<const Set<Int>&>"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/Set.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::Canned<Map<Set<Int>, Int>&>", "perl::Canned<const Set<Int>&>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Vector<Rational>, Int>&>>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >&>"], "func": "pm::perl::find_element", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Set<Int>, Set<Int>>&>>", "perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&>&>"], "func": "pm::perl::find_element", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Set.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::Canned<const Map<std::string, std::string>&>", "std::string"], "func": "exists", "include": ["polymake/Map.h"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"class": "Map<Int, std::string>", "include": ["polymake/Map.h"], "pkg": "Polymake::common::Map_A_Int_I_String_Z"},
  {"args": ["Map<Int, std::string>"], "include": ["polymake/Map.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Int, std::string>&>", "Int"], "include": ["polymake/Map.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<Int, std::string>&>>", "Int"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"args": ["perl::AnchorArg<perl::Canned<const Map<std::string, std::string>&>>", "std::string"], "func": "pm::perl::find_element", "include": ["polymake/Map.h", "polymake/perl/assoc.h"], "sig": "assoc_find.X8.X"},
  {"class": "Map<Set<Int>, Rational>", "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Set.h"], "pkg": "Polymake::common::Map_A_Set__Int_I_Rational_Z"},
  {"args": ["Map<Set<Int>, Rational>"], "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Set.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<Map<Set<Int>, Rational>&>", "perl::Canned<const Set<Int>&>"], "include": ["polymake/Map.h", "polymake/Rational.h", "polymake/Set.h"], "op": "brk", "ret": "lvalue", "sig": "brk:O.X2.X"},
  {"args": ["perl::Canned<const Map<Vector<Rational>, Int>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<long, true> const, mlist<> >&>"], "func": "exists", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Vector.h"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"args": ["perl::Canned<const Map<Vector<double>, Int>&>", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<long, true> const, mlist<> >&>"], "func": "exists", "include": ["polymake/IncidenceMatrix.h", "polymake/Map.h", "polymake/Matrix.h", "polymake/Vector.h"], "kind": "meth", "sig": "exists:CORE.M.X"},
  {"class": "Map<Set<Int>, Set<Set<Int>>>", "include": ["polymake/Map.h", "polymake/Set.h"], "pkg": "Polymake::common::Map_A_Set__Int_I_Set__Set__Int_Z"},
  {"args": ["Map<Set<Int>, Set<Set<Int>>>"], "include": ["polymake/Map.h", "polymake/Set.h"], "op": "new", "sig": "new"},
 null ],
"version": 3}
