{"app": "common",
 "inst": [
  {"args": ["perl::Canned<const Matrix<Rational>&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::QuadraticExtension<pm::Rational> > const&>, pm::Series<Int, true> const, mlist<> >&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::QuadraticExtension<pm::Rational> >&>, pm::Series<Int, true> const, mlist<> >, pm::Series<Int, true> const&, mlist<> >&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Set.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<double> const&>, pm::Series<Int, true> const, mlist<> >&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const Matrix<double>&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::PuiseuxFraction<pm::Min, pm::Rational, pm::Rational> > const&>, pm::Series<Int, true> const, mlist<> >&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const pm::VectorChain<mlist<pm::SameElementVector<pm::Integer> const, pm::Vector<pm::Integer> const> >&>"], "func": "is_zero", "include": ["polymake/Integer.h", "polymake/Vector.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<double, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/SparseMatrix.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::QuadraticExtension<pm::Rational>, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::PuiseuxFraction<pm::Max, pm::Rational, pm::Rational> > const&>, pm::Series<Int, true> const, mlist<> >&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/TropicalNumber.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational>&>, pm::Series<Int, true> const, mlist<> >, pm::Series<Int, true> const&, mlist<> >&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const Matrix<QuadraticExtension<Rational>>&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const Vector<double>&>"], "func": "is_zero", "include": ["polymake/Vector.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<double, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>&>"], "func": "is_zero", "include": ["polymake/IncidenceMatrix.h", "polymake/SparseMatrix.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const UniPolynomial<Rational, Int>&>"], "func": "is_zero", "include": ["polymake/Rational.h", "polymake/RationalFunction.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
  {"args": ["perl::Canned<const Vector<Integer>&>"], "func": "is_zero", "include": ["polymake/Integer.h", "polymake/Vector.h", "polymake/internal/comparators.h"], "sig": "is_zero.X"},
 null ],
"version": 3}
