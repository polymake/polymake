{"app": "common",
 "inst": [
  {"args": ["perl::Canned<const pm::Rows<pm::AdjacencyMatrix<pm::graph::Graph<pm::graph::Directed>, false> >&>"], "func": "size", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::Rows<pm::AdjacencyMatrix<pm::graph::Graph<pm::graph::DirectedMulti>, true> >&>"], "func": "size", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::graph::multi_adjacency_line<pm::AVL::tree<pm::sparse2d::traits<pm::graph::traits_base<pm::graph::DirectedMulti, true, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > >&>"], "func": "size", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::Rows<pm::AdjacencyMatrix<pm::graph::Graph<pm::graph::Undirected>, false> >&>"], "func": "size", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::Rows<pm::AdjacencyMatrix<pm::graph::Graph<pm::graph::UndirectedMulti>, true> >&>"], "func": "size", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::graph::multi_adjacency_line<pm::AVL::tree<pm::sparse2d::traits<pm::graph::traits_base<pm::graph::UndirectedMulti, false, (pm::sparse2d::restriction_kind)0>, true, (pm::sparse2d::restriction_kind)0> > >&>"], "func": "size", "include": ["polymake/Graph.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const Set<Int>&>"], "func": "size", "include": ["polymake/Set.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const Set<Array<Int>>&>"], "func": "size", "include": ["polymake/Array.h", "polymake/Set.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<Int, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const Set<Set<Int>>&>"], "func": "size", "include": ["polymake/Set.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const Set<Vector<Rational>>&>"], "func": "size", "include": ["polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const Set<Matrix<Rational>>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const SparseVector<Int>&>"], "func": "size", "include": ["polymake/SparseVector.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const Set<std::pair<Set<Int>, Set<Int>>>&>"], "func": "size", "include": ["polymake/Set.h", "polymake/client.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, false, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const hash_set<Set<Int>>&>"], "func": "size", "include": ["polymake/Set.h", "polymake/hash_set"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const Set<Vector<Integer>>&>"], "func": "size", "include": ["polymake/Integer.h", "polymake/Set.h", "polymake/Vector.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const Set<std::string>&>"], "func": "size", "include": ["polymake/Set.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Integer, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::QuadraticExtension<pm::Rational>, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const SparseVector<Rational>&>"], "func": "size", "include": ["polymake/Rational.h", "polymake/SparseVector.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const SparseVector<Integer>&>"], "func": "size", "include": ["polymake/Integer.h", "polymake/SparseVector.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<Int, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::QuadraticExtension<pm::Rational>, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&, pm::NonSymmetric>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const SparseVector<double>&>"], "func": "size", "include": ["polymake/SparseVector.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<double, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const SparseVector<PuiseuxFraction<Min, Rational, Rational>>&>"], "func": "size", "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const SparseVector<QuadraticExtension<Rational>>&>"], "func": "size", "include": ["polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseVector.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::PuiseuxFraction<pm::Max, pm::Rational, pm::Rational>, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/TropicalNumber.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Integer, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::TropicalNumber<pm::Max, pm::Rational>, false, true, (pm::sparse2d::restriction_kind)0>, true, (pm::sparse2d::restriction_kind)0> >&, pm::Symmetric>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/TropicalNumber.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::TropicalNumber<pm::Min, pm::Rational>, false, true, (pm::sparse2d::restriction_kind)0>, true, (pm::sparse2d::restriction_kind)0> >&, pm::Symmetric>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/TropicalNumber.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const SparseVector<TropicalNumber<Min, Rational>>&>"], "func": "size", "include": ["polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> >&>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::Series<Int, true>&>"], "func": "size", "include": ["polymake/Set.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const ApproximateSet<double>&>"], "func": "size", "include": ["polymake/ApproximateSet.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const ApproximateSet<Matrix<double>>&>"], "func": "size", "include": ["polymake/ApproximateSet.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const std::list<Int>&>"], "func": "size", "include": ["polymake/list"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const Set<Matrix<double>>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Set.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, false, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const Bitset&>"], "func": "size", "include": ["polymake/Bitset.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const SparseVector<PuiseuxFraction<Max, Rational, Rational>>&>"], "func": "size", "include": ["polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseVector.h", "polymake/TropicalNumber.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Integer, false, true, (pm::sparse2d::restriction_kind)0>, true, (pm::sparse2d::restriction_kind)0> >&, pm::Symmetric>&>"], "func": "size", "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::GF2, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric>&>"], "func": "size", "include": ["polymake/GF2.h", "polymake/IncidenceMatrix.h", "polymake/SparseMatrix.h"], "kind": "meth", "sig": "size:M"},
  {"args": ["perl::Canned<const Set<Set<Set<Int>>>&>"], "func": "size", "include": ["polymake/Set.h"], "kind": "meth", "sig": "size:M"},
 null ],
"version": 3}
