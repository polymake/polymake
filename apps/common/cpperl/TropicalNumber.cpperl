{"app": "common",
 "inst": [
  {"guard_name": "CORE_WRAPPERS_TropicalNumber", "include": ["polymake/TropicalNumber.h"], "pkg": "Polymake::common::TropicalNumber", "wrapper_file": "include/core-wrappers/polymake/TropicalNumber.h"},
  {"class": "TropicalNumber<Min, Int>", "include": ["polymake/TropicalNumber.h"], "pkg": "Polymake::common::TropicalNumber_A_Min_I_Int_Z"},
  {"class": "TropicalNumber<Max, Integer>", "include": ["polymake/Integer.h", "polymake/TropicalNumber.h"], "pkg": "Polymake::common::TropicalNumber_A_Max_I_Integer_Z"},
  {"class": "TropicalNumber<Max, Rational>", "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "pkg": "Polymake::common::TropicalNumber_A_Max_I_Rational_Z"},
  {"class": "TropicalNumber<Min, Rational>", "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "pkg": "Polymake::common::TropicalNumber_A_Min_I_Rational_Z"},
  {"args": ["TropicalNumber<Min, Rational>", "Int"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const TropicalNumber<Min, Rational>&>", "perl::Canned<const UniPolynomial<TropicalNumber<Min, Rational>, Int>&>"], "include": ["polymake/Rational.h", "polymake/RationalFunction.h", "polymake/TropicalNumber.h"], "op": "add", "sig": "add:O.X.X"},
  {"args": ["TropicalNumber<Min, Rational>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new"},
  {"args": ["TropicalNumber<Max, Rational>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new.X"},
  {"args": ["TropicalNumber<Min, Rational>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const TropicalNumber<Max, Rational>&>", "perl::Canned<const TropicalNumber<Max, Rational>&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"args": ["perl::Canned<const TropicalNumber<Min, Rational>&>", "perl::Canned<const TropicalNumber<Min, Rational>&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"args": ["TropicalNumber<Max, Rational>", "Int"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const TropicalNumber<Max, Rational>&>", "perl::Canned<const UniPolynomial<TropicalNumber<Max, Rational>, Int>&>"], "include": ["polymake/Rational.h", "polymake/RationalFunction.h", "polymake/TropicalNumber.h"], "op": "mul", "sig": "mul:O.X.X"},
  {"args": ["perl::Canned<const TropicalNumber<Min, Rational>&>", "perl::Canned<const TropicalNumber<Min, Rational>&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "add", "sig": "add:O.X.X"},
  {"args": ["perl::Canned<const TropicalNumber<Min, Rational>&>", "perl::Canned<const TropicalNumber<Min, Rational>&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "mul", "sig": "mul:O.X.X"},
  {"args": ["TropicalNumber<Max, Integer>", "Int"], "include": ["polymake/Integer.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new.X"},
  {"args": ["TropicalNumber<Max, Integer>"], "include": ["polymake/Integer.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const TropicalNumber<Max, Integer>&>", "perl::Canned<const TropicalNumber<Max, Integer>&>"], "include": ["polymake/Integer.h", "polymake/TropicalNumber.h"], "op": "add", "sig": "add:O.X.X"},
  {"args": ["perl::Canned<const TropicalNumber<Max, Integer>&>", "perl::Canned<const TropicalNumber<Max, Integer>&>"], "include": ["polymake/Integer.h", "polymake/TropicalNumber.h"], "op": "mul", "sig": "mul:O.X.X"},
  {"args": ["perl::Canned<TropicalNumber<Max, Rational>&>", "perl::Canned<const TropicalNumber<Max, Rational>&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "Mul", "ret": "lvalue", "sig": "Mul:O.X1.X"},
  {"args": ["perl::Canned<TropicalNumber<Min, Rational>&>", "perl::Canned<const TropicalNumber<Min, Rational>&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "Mul", "ret": "lvalue", "sig": "Mul:O.X1.X"},
  {"args": ["perl::Canned<const TropicalNumber<Max, Rational>&>", "perl::Canned<const TropicalNumber<Max, Rational>&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "mul", "sig": "mul:O.X.X"},
  {"args": ["TropicalNumber<Max, Rational>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "new", "sig": "new"},
  {"args": ["TropicalNumber<Min, Rational>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "assign", "ret": "empty", "sig": "assign:O"},
  {"args": ["perl::Canned<const TropicalNumber<Min, Rational>&>", "perl::Canned<const Polynomial<TropicalNumber<Min, Rational>, Int>&>"], "include": ["polymake/Polynomial.h", "polymake/Rational.h", "polymake/TropicalNumber.h"], "op": "add", "sig": "add:O.X.X"},
 null ],
"version": 3}
