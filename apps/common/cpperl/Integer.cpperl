{"app": "common",
 "inst": [
  {"class": "Integer", "guard_name": "CORE_WRAPPERS_Integer", "include": ["polymake/Integer.h"], "pkg": "Polymake::common::Integer", "wrapper_file": "include/core-wrappers/polymake/Integer.h"},
  {"args": ["Integer", "Int"], "include": ["polymake/Integer.h"], "op": "new", "sig": "new.X"},
  {"args": ["Integer"], "include": ["polymake/Integer.h"], "op": "new", "sig": "new"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "mod", "sig": "mod:O.X.X16"},
  {"args": ["perl::Canned<Integer&>"], "include": ["polymake/Integer.h"], "op": "inc", "ret": "lvalue", "sig": "inc:O.X1"},
  {"args": ["perl::Canned<Integer&>"], "include": ["polymake/Integer.h"], "op": "dec", "ret": "lvalue", "sig": "dec:O.X1"},
  {"args": ["perl::Canned<const Integer&>", "Int"], "include": ["polymake/Integer.h"], "op": "lsh", "sig": "lsh:O.X.X"},
  {"args": ["perl::Canned<const Integer&>", "Int"], "include": ["polymake/Integer.h"], "op": "rsh", "sig": "rsh:O.X.X"},
  {"args": ["perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "neg", "sig": "neg:O.X"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "_lt", "sig": "_lt:O.X.X"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "_gt", "sig": "_gt:O.X.X"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"args": ["perl::Canned<const Integer&>", "Int"], "include": ["polymake/Integer.h"], "op": "_lt", "sig": "_lt:O.X.X"},
  {"args": ["perl::Canned<const Integer&>", "Int"], "include": ["polymake/Integer.h"], "op": "_gt", "sig": "_gt:O.X.X"},
  {"args": ["Int", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "_lt", "sig": "_lt:O.X.X"},
  {"args": ["Int", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "_gt", "sig": "_gt:O.X.X"},
  {"args": ["perl::Canned<const Integer&>", "Int"], "include": ["polymake/Integer.h"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"args": ["perl::Canned<const Integer&>", "Int"], "include": ["polymake/Integer.h"], "op": "_ne", "sig": "_ne:O.X.X"},
  {"args": ["perl::Canned<Integer&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "Add", "ret": "lvalue", "sig": "Add:O.X1.X16"},
  {"args": ["perl::Canned<Integer&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "Mul", "ret": "lvalue", "sig": "Mul:O.X1.X16"},
  {"args": ["perl::Canned<Integer&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "Sub", "ret": "lvalue", "sig": "Sub:O.X1.X16"},
  {"args": ["perl::Canned<Integer&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "Div", "ret": "lvalue", "sig": "Div:O.X1.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/Integer.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/Integer.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/Integer.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const QuadraticExtension<Rational>&>"], "include": ["polymake/Integer.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Rational&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Rational&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Rational&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Rational&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Rational&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "_lt", "sig": "_lt:O.X.X"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Rational&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "_gt", "sig": "_gt:O.X.X"},
  {"args": ["Integer", "double"], "include": ["polymake/Integer.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const pm::RationalParticle<true, pm::Integer>&>", "perl::Canned<const pm::RationalParticle<false, pm::Integer>&>"], "include": ["polymake/Rational.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const pm::RationalParticle<true, pm::Integer>&>", "perl::Canned<const pm::RationalParticle<false, pm::Integer>&>"], "include": ["polymake/Rational.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["Integer", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "new", "sig": "new.X"},
  {"args": ["Integer", "perl::Canned<const Rational&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["Int", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "_eq", "sig": "_eq:O.X.X"},
  {"args": ["Integer", "perl::Canned<const pm::RationalParticle<true, pm::Integer>&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["Integer", "perl::Canned<const pm::RationalParticle<false, pm::Integer>&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "new", "sig": "new.X"},
  {"args": ["perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "boo", "sig": "boo:O.X"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "_ne", "sig": "_ne:O.X.X"},
  {"args": ["perl::Canned<const pm::sparse_elem_proxy<pm::sparse_proxy_base<pm::sparse2d::line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Integer, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > >, pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::Integer, true, false>, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > > >, pm::Integer>&>", "perl::Canned<const pm::sparse_elem_proxy<pm::sparse_proxy_base<pm::sparse2d::line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Integer, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > >, pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::Integer, true, false>, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > > >, pm::Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/SparseMatrix.h"], "op": "mod", "sig": "mod:O.X.X16"},
  {"args": ["perl::Canned<Integer&>", "perl::Canned<const pm::sparse_elem_proxy<pm::sparse_proxy_base<pm::sparse2d::line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Integer, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > >, pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::Integer, true, false>, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > > >, pm::Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/SparseMatrix.h"], "op": "Mul", "ret": "lvalue", "sig": "Mul:O.X1.X16"},
  {"args": ["perl::Canned<const Integer&>", "Int"], "include": ["polymake/Integer.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["Int", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "add", "sig": "add:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "Int"], "include": ["polymake/Integer.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["Int", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "sub", "sig": "sub:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "Int"], "include": ["polymake/Integer.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["Int", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "Int"], "include": ["polymake/Integer.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["Int", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "div", "sig": "div:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "Int"], "include": ["polymake/Integer.h"], "op": "mod", "sig": "mod:O.X.X16"},
  {"args": ["Int", "perl::Canned<const Integer&>"], "include": ["polymake/Integer.h"], "op": "mod", "sig": "mod:O.X.X16"},
  {"args": ["perl::Canned<pm::RationalParticle<true, pm::Integer>&>", "Int"], "include": ["polymake/Rational.h"], "op": "Add", "ret": "lvalue", "sig": "Add:O.X1.X16"},
  {"args": ["perl::Canned<pm::RationalParticle<false, pm::Integer>&>", "Int"], "include": ["polymake/Rational.h"], "op": "Add", "ret": "lvalue", "sig": "Add:O.X1.X16"},
  {"args": ["perl::Canned<Integer&>", "Int"], "include": ["polymake/Integer.h"], "op": "Mul", "ret": "lvalue", "sig": "Mul:O.X1.X16"},
  {"args": ["perl::Canned<Integer&>", "Int"], "include": ["polymake/Integer.h"], "op": "Add", "ret": "lvalue", "sig": "Add:O.X1.X16"},
  {"args": ["perl::Canned<Integer&>", "Int"], "include": ["polymake/Integer.h"], "op": "Sub", "ret": "lvalue", "sig": "Sub:O.X1.X16"},
  {"args": ["Int", "perl::Canned<const pm::sparse_elem_proxy<pm::sparse_proxy_base<pm::sparse2d::line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Integer, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > >, pm::unary_transform_iterator<pm::AVL::tree_iterator<pm::sparse2d::it_traits<pm::Integer, true, false>, (pm::AVL::link_index)1>, std::pair<pm::BuildUnary<pm::sparse2d::cell_accessor>, pm::BuildUnaryIt<pm::sparse2d::cell_index_accessor> > > >, pm::Integer>&>"], "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/SparseMatrix.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const pm::RationalParticle<false, pm::Integer>&>", "perl::Canned<const Rational&>"], "include": ["polymake/Rational.h"], "op": "mul", "sig": "mul:O.X.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const pm::RationalParticle<false, pm::Integer>&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "mod", "sig": "mod:O.X.X16"},
  {"args": ["perl::Canned<Integer&>", "perl::Canned<const pm::RationalParticle<false, pm::Integer>&>"], "include": ["polymake/Integer.h", "polymake/Rational.h"], "op": "Add", "ret": "lvalue", "sig": "Add:O.X1.X16"},
  {"args": ["perl::Canned<const Integer&>", "perl::Canned<const UniPolynomial<Rational, Int>&>"], "include": ["polymake/Integer.h", "polymake/Rational.h", "polymake/RationalFunction.h"], "op": "mul", "sig": "mul:O.X.X16"},
 null ],
"version": 3}
