{"app": "common",
 "inst": [
  {"args": ["QuadraticExtension<Rational>", "perl::Canned<const Polynomial<Rational, Int>&>"], "func": "convert_to", "include": ["polymake/Polynomial.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const Vector<Rational>&>"], "func": "convert_to", "include": ["polymake/Rational.h", "polymake/Vector.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const Matrix<Rational>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["Rational", "perl::Canned<const Matrix<Integer>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["Rational", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Integer>&, pm::incidence_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::nothing, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&> const&, pm::all_selector const&>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::all_selector const&, pm::Series<Int, true> const>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const SparseMatrix<Rational, NonSymmetric>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const pm::IndexedSlice<pm::sparse_matrix_line<pm::AVL::tree<pm::sparse2d::traits<pm::sparse2d::traits_base<pm::Rational, true, false, (pm::sparse2d::restriction_kind)0>, false, (pm::sparse2d::restriction_kind)0> > const&, pm::NonSymmetric> const&, pm::Series<Int, true> const, mlist<> >&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Rational.h", "polymake/Set.h", "polymake/SparseMatrix.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::QuadraticExtension<pm::Rational> > const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Series<Int, true> const, mlist<> >&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/Set.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["Rational", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Integer> const&, pm::Set<Int, pm::operations::cmp> const&, pm::all_selector const&>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Complement<pm::Set<Int, pm::operations::cmp> const&> const, pm::all_selector const&>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const SparseMatrix<QuadraticExtension<Rational>, NonSymmetric>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h", "polymake/SparseMatrix.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const Matrix<Integer>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Integer.h", "polymake/Matrix.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> >&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const pm::MatrixMinor<pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::all_selector const&, pm::Series<Int, true> const> const&, pm::Array<Int> const&, pm::all_selector const&>&>"], "func": "convert_to", "include": ["polymake/Array.h", "polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const pm::IndexedSlice<pm::Vector<pm::Rational>&, pm::Series<Int, true> const, mlist<> >&>"], "func": "convert_to", "include": ["polymake/Rational.h", "polymake/Set.h", "polymake/Vector.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const pm::IndexedSlice<pm::IndexedSlice<pm::masquerade<pm::ConcatRows, pm::Matrix_base<pm::Rational> const&>, pm::Series<Int, true> const, mlist<> > const&, pm::Series<Int, true> const, mlist<> >&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const pm::IndexedSlice<pm::Vector<pm::Rational>&, pm::Nodes<pm::graph::Graph<pm::graph::Undirected> > const&, mlist<> >&>"], "func": "convert_to", "include": ["polymake/Graph.h", "polymake/Rational.h", "polymake/Vector.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Set<Int, pm::operations::cmp> const, pm::Series<Int, true> const>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const Matrix<QuadraticExtension<Rational>>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/QuadraticExtension.h", "polymake/Rational.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const>, std::integral_constant<bool, true> >&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["double", "perl::Canned<const pm::BlockMatrix<mlist<pm::Matrix<pm::Rational> const&, pm::Matrix<pm::Rational> const&>, std::integral_constant<bool, true> >&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["Rational", "perl::Canned<const Matrix<Int>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["TropicalNumber<Max, Rational>", "perl::Canned<const SparseMatrix<PuiseuxFraction<Max, Rational, Rational>, NonSymmetric>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/PuiseuxFraction.h", "polymake/Rational.h", "polymake/SparseMatrix.h", "polymake/TropicalNumber.h"], "sig": "convert_to:T1.X", "tp": "1"},
  {"args": ["Rational", "perl::Canned<const Matrix<double>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h"], "sig": "convert_to:T1.X", "tp": 1},
  {"args": ["double", "perl::Canned<const pm::MatrixMinor<pm::Matrix<pm::Rational> const&, pm::Set<long, pm::operations::cmp> const&, pm::all_selector const&>&>"], "func": "convert_to", "include": ["polymake/IncidenceMatrix.h", "polymake/Matrix.h", "polymake/Rational.h", "polymake/Set.h"], "sig": "convert_to:T1.X", "tp": 1},
 null ],
"version": 3}
