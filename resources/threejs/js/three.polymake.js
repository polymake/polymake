!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE={})}(this,function(e){"use strict";const t="137";const q=0,Y=1,Z=2;const A=1,R=3,Le=0,Ce=1,Pe=2;const J=0,K=1,Q=2,$=3,ee=4,te=5,re=100,ie=101,ae=102,se=103,oe=104,le=200,he=201,ce=202,ue=203,de=204,pe=205,me=206,fe=207,ge=208,ve=209,ye=210,xe=0,_e=1,Me=2,Ee=3,be=4,we=5,Te=6,Se=7,De=0,b=301,w=302,l=303,h=304,C=306,P=307,k=1e3,Ie=1001,W=1002,Ne=1003,j=1004;const X=1005;const Oe=1006,Ue=1007;const Fe=1008;const Be=1009,s=1010,o=1011,He=1012,c=1013,ze=1014,Ge=1015,Ve=1016,u=1017,d=1018,ke=1020,p=1021,m=1022,We=1023,f=1024,g=1025,je=1026,Xe=1027,v=1028,y=1029,x=1030,T=1031,L=1033,D=33776,I=33777,O=33778,U=33779,F=35840,B=35841,H=35842,z=35843,G=36196,qe=37492,Ye=37496,Ze=37808,Je=37809,Ke=37810,Qe=37811,$e=37812,et=37813,tt=37814,nt=37815,rt=37816,it=37817,at=37818,st=37819,ot=37820,lt=37821,ht=36492,r=2300,i=2301,ct=2400,ut=2401,dt=2402;const pt=3e3,mt=3001,n=3201,ft=0,gt=1;const a=35044,vt=35048;const yt="300 es",xt=1035;class _t{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0!==this._listeners){const n=this._listeners[e];void 0===n||-1!==(e=n.indexOf(t))&&n.splice(e,1)}}dispatchEvent(n){if(void 0!==this._listeners){const e=this._listeners[n.type];if(void 0!==e){n.target=this;const r=e.slice(0);for(let e=0,t=r.length;e<t;e++)r[e].call(this,n);n.target=null}}}}const Mt=[];for(let e=0;e<256;e++)Mt[e]=(e<16?"0":"")+e.toString(16);let Et=1234567;const bt=Math.PI/180,wt=180/Math.PI;function Tt(){var e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;const i=Mt[255&e]+Mt[e>>8&255]+Mt[e>>16&255]+Mt[e>>24&255]+"-"+Mt[255&t]+Mt[t>>8&255]+"-"+Mt[t>>16&15|64]+Mt[t>>24&255]+"-"+Mt[63&n|128]+Mt[n>>8&255]+"-"+Mt[n>>16&255]+Mt[n>>24&255]+Mt[255&r]+Mt[r>>8&255]+Mt[r>>16&255]+Mt[r>>24&255];return i.toUpperCase()}function St(e,t,n){return Math.max(t,Math.min(n,e))}function At(e,t){return(e%t+t)%t}function Rt(e,t,n){return(1-n)*e+n*t}function Lt(e){return 0==(e&e-1)&&0!==e}function Ct(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function Pt(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}var Dt=Object.freeze({__proto__:null,DEG2RAD:bt,RAD2DEG:wt,generateUUID:Tt,clamp:St,euclideanModulo:At,mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:Rt,damp:function(e,t,n,r){return Rt(e,t,1-Math.exp(-n*r))},pingpong:function(e,t=1){return t-Math.abs(At(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:n<=e?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:n<=e?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(Et=e%2147483647),Et=16807*Et%2147483647,(Et-1)/2147483646},degToRad:function(e){return e*bt},radToDeg:function(e){return e*wt},isPowerOfTwo:Lt,ceilPowerOfTwo:Ct,floorPowerOfTwo:Pt,setQuaternionFromProperEuler:function(e,t,c,n,u){const r=Math.cos,i=Math.sin;var a=r(c/2),s=i(c/2),o=r((t+n)/2),l=i((t+n)/2),h=r((t-n)/2),d=i((t-n)/2),p=r((n-t)/2),m=i((n-t)/2);switch(u){case"XYX":e.set(a*l,s*h,s*d,a*o);break;case"YZY":e.set(s*d,a*l,s*h,a*o);break;case"ZXZ":e.set(s*h,s*d,a*l,a*o);break;case"XZX":e.set(a*l,s*m,s*p,a*o);break;case"YXY":e.set(s*p,a*l,s*m,a*o);break;case"ZYZ":e.set(s*m,s*p,a*l,a*o);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+u)}}});class ne{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){var t=this.x,n=this.y,e=e.elements;return this.x=e[0]*t+e[3]*n+e[6],this.y=e[1]*t+e[4]*n+e[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,e=this.y-e.y;return t*t+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){var n=Math.cos(t),t=Math.sin(t),r=this.x-e.x,i=this.y-e.y;return this.x=r*n-i*t+e.x,this.y=r*t+i*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}ne.prototype.isVector2=!0;class It{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,i,a,s,o,l){const h=this.elements;return h[0]=e,h[1]=r,h[2]=s,h[3]=t,h[4]=i,h[5]=o,h[6]=n,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements;e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){e=e.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){e=e.elements,t=t.elements;const n=this.elements;var r=e[0],i=e[3],a=e[6],s=e[1],o=e[4],l=e[7],h=e[2],c=e[5],e=e[8],u=t[0],d=t[3],p=t[6],m=t[1],f=t[4],g=t[7],v=t[2],y=t[5],t=t[8];return n[0]=r*u+i*m+a*v,n[3]=r*d+i*f+a*y,n[6]=r*p+i*g+a*t,n[1]=s*u+o*m+l*v,n[4]=s*d+o*f+l*y,n[7]=s*p+o*g+l*t,n[2]=h*u+c*m+e*v,n[5]=h*d+c*f+e*y,n[8]=h*p+c*g+e*t,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],e=e[8];return t*a*e-t*s*l-n*i*e+n*s*o+r*i*l-r*a*o}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],c=e[8],u=c*a-s*l,d=s*o-c*i,p=l*i-a*o,m=t*u+n*d+r*p;if(0==m)return this.set(0,0,0,0,0,0,0,0,0);var h=1/m;return e[0]=u*h,e[1]=(r*l-c*n)*h,e[2]=(s*n-r*a)*h,e[3]=d*h,e[4]=(c*t-r*o)*h,e[5]=(r*i-s*t)*h,e[6]=p*h,e[7]=(n*o-l*t)*h,e[8]=(a*t-n*i)*h,this}transpose(){var e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,i,a,s){var o=Math.cos(i),i=Math.sin(i);return this.set(n*o,n*i,-n*(o*a+i*s)+a+e,-r*i,r*o,-r*(-i*a+o*s)+s+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){var t=Math.cos(e),e=Math.sin(e);const n=this.elements;var r=n[0],i=n[3],a=n[6],s=n[1],o=n[4],l=n[7];return n[0]=t*r+e*s,n[3]=t*i+e*o,n[6]=t*a+e*l,n[1]=-e*r+t*s,n[4]=-e*i+t*o,n[7]=-e*a+t*l,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){var t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(t,n=0){for(let e=0;e<9;e++)this.elements[e]=t[e+n];return this}toArray(e=[],t=0){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}function Nt(t){for(let e=t.length-1;0<=e;--e)if(65535<t[e])return 1}It.prototype.isMatrix3=!0;const Ot={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Ut(e,t){return new Ot[e](t)}function Ft(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}const Bt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ht={h:0,s:0,l:0},zt={h:0,s:0,l:0};function Gt(e,t,n){return n<0&&(n+=1),1<n&&--n,n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function Vt(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function kt(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class _{constructor(e,t,n){return void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){return e=At(e,1),t=St(t,0,1),n=St(n,0,1),0===t?this.r=this.g=this.b=n:(this.r=Gt(t=2*n-(n=n<=.5?n*(1+t):n+t-n*t),n,e+1/3),this.g=Gt(t,n,e),this.b=Gt(t,n,e-1/3)),this}setStyle(t){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let e;var i,a,s,o=r[1],l=r[2];switch(o){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,n(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,n(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return i=parseFloat(e[1])/360,a=parseInt(e[2],10)/100,s=parseInt(e[3],10)/100,n(e[4]),this.setHSL(i,a,s)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(t)){const e=r[1];o=e.length;if(3===o)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===o)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return t&&0<t.length?this.setColorName(t):this}setColorName(e){var t=Bt[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Vt(e.r),this.g=Vt(e.g),this.b=Vt(e.b),this}copyLinearToSRGB(e){return this.r=kt(e.r),this.g=kt(e.g),this.b=kt(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){var t=this.r,n=this.g,r=this.b,i=Math.max(t,n,r),a=Math.min(t,n,r);let s,o;var l=(a+i)/2;if(a===i)s=0,o=0;else{var h=i-a;switch(o=l<=.5?h/(i+a):h/(2-i-a),i){case t:s=(n-r)/h+(n<r?6:0);break;case n:s=(r-t)/h+2;break;case r:s=(t-n)/h+4}s/=6}return e.h=s,e.s=o,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,n){return this.getHSL(Ht),Ht.h+=e,Ht.s+=t,Ht.l+=n,this.setHSL(Ht.h,Ht.s,Ht.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Ht),e.getHSL(zt);var e=Rt(Ht.h,zt.h,t),n=Rt(Ht.s,zt.s,t),t=Rt(Ht.l,zt.l,t);return this.setHSL(e,n,t),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}_.NAMES=Bt,_.prototype.isColor=!0,_.prototype.r=1,_.prototype.g=1,_.prototype.b=1;let Wt;class jt{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===Wt&&(Wt=Ft("canvas")),Wt.width=e.width,Wt.height=e.height;const n=Wt.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Wt}return 2048<t.width||2048<t.height?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const n=Ft("canvas"),r=(n.width=e.width,n.height=e.height,n.getContext("2d"));r.drawImage(e,0,0,e.width,e.height);var t=r.getImageData(0,0,e.width,e.height);const i=t.data;for(let e=0;e<i.length;e++)i[e]=255*Vt(i[e]/255);return r.putImageData(t,0,0),n}if(e.data){const a=e.data.slice(0);for(let e=0;e<a.length;e++)a instanceof Uint8Array||a instanceof Uint8ClampedArray?a[e]=Math.floor(255*Vt(a[e]/255)):a[e]=Vt(a[e]);return{data:a,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let Xt=0;class qt extends _t{constructor(e=qt.DEFAULT_IMAGE,t=qt.DEFAULT_MAPPING,n=Ie,r=Ie,i=Oe,a=Fe,s=We,o=Be,l=1,h=pt){super(),Object.defineProperty(this,"id",{value:Xt++}),this.uuid=Tt(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new ne(0,0),this.repeat=new ne(1,1),this.center=new ne(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new It,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this}toJSON(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const r=this.image;if(void 0===r.uuid&&(r.uuid=Tt()),!t&&void 0===e.images[r.uuid]){let n;if(Array.isArray(r)){n=[];for(let e=0,t=r.length;e<t;e++)r[e].isDataTexture?n.push(Yt(r[e].image)):n.push(Yt(r[e]))}else n=Yt(r);e.images[r.uuid]={uuid:r.uuid,url:n}}n.image=r.uuid}return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||1<e.x)switch(this.wrapS){case k:e.x=e.x-Math.floor(e.x);break;case Ie:e.x=e.x<0?0:1;break;case W:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||1<e.y)switch(this.wrapT){case k:e.y=e.y-Math.floor(e.y);break;case Ie:e.y=e.y<0?0:1;break;case W:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function Yt(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?jt.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}qt.DEFAULT_IMAGE=void 0,qt.DEFAULT_MAPPING=300,qt.prototype.isTexture=!0;class Zt{constructor(e=0,t=0,n=0,r=1){this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){var t=this.x,n=this.y,r=this.z,i=this.w,e=e.elements;return this.x=e[0]*t+e[4]*n+e[8]*r+e[12]*i,this.y=e[1]*t+e[5]*n+e[9]*r+e[13]*i,this.z=e[2]*t+e[6]*n+e[10]*r+e[14]*i,this.w=e[3]*t+e[7]*n+e[11]*r+e[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let c,t,n,r;var e=e.elements,u=e[0],i=e[4],a=e[8],s=e[1],d=e[5],o=e[9],l=e[2],h=e[6],e=e[10];if(Math.abs(i-s)<.01&&Math.abs(a-l)<.01&&Math.abs(o-h)<.01){if(Math.abs(i+s)<.1&&Math.abs(a+l)<.1&&Math.abs(o+h)<.1&&Math.abs(u+d+e-3)<.1)return this.set(1,0,0,0),this;c=Math.PI;var p=(u+1)/2,m=(d+1)/2,f=(e+1)/2,g=(i+s)/4,v=(a+l)/4,y=(o+h)/4;return m<p&&f<p?r=p<.01?(t=0,n=.707106781):(t=Math.sqrt(p),n=g/t,v/t):f<m?r=m<.01?(t=.707106781,n=0,.707106781):(n=Math.sqrt(m),t=g/n,y/n):f<.01?(t=.707106781,n=.707106781,r=0):(r=Math.sqrt(f),t=v/r,n=y/r),this.set(t,n,r,c),this}let x=Math.sqrt((h-o)*(h-o)+(a-l)*(a-l)+(s-i)*(s-i));return Math.abs(x)<.001&&(x=1),this.x=(h-o)/x,this.y=(a-l)/x,this.z=(s-i)/x,this.w=Math.acos((u+d+e-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Zt.prototype.isVector4=!0;class Jt extends _t{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Zt(0,0,e,t),this.scissorTest=!1,this.viewport=new Zt(0,0,e,t),this.texture=new qt(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:Oe,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}Jt.prototype.isWebGLRenderTarget=!0;class Kt extends Jt{constructor(e,t,n){super(e,t);const r=this.texture;this.texture=[];for(let e=0;e<n;e++)this.texture[e]=r.clone()}setSize(n,r,i=1){if(this.width!==n||this.height!==r||this.depth!==i){this.width=n,this.height=r,this.depth=i;for(let e=0,t=this.texture.length;e<t;e++)this.texture[e].image.width=n,this.texture[e].image.height=r,this.texture[e].image.depth=i;this.dispose()}return this.viewport.set(0,0,n,r),this.scissor.set(0,0,n,r),this}copy(n){this.dispose(),this.width=n.width,this.height=n.height,this.depth=n.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture;for(let e=this.texture.length=0,t=n.texture.length;e<t;e++)this.texture[e]=n.texture[e].clone();return this}}Kt.prototype.isWebGLMultipleRenderTargets=!0;class Qt extends Jt{constructor(e,t,n={}){super(e,t,n),this.samples=4,this.ignoreDepthForMultisampleCopy=void 0===n.ignoreDepth||n.ignoreDepth,this.useRenderToTexture=void 0!==n.useRenderToTexture&&n.useRenderToTexture,this.useRenderbuffer=!1===this.useRenderToTexture}copy(e){return super.copy.call(this,e),this.samples=e.samples,this.useRenderToTexture=e.useRenderToTexture,this.useRenderbuffer=e.useRenderbuffer,this}}Qt.prototype.isWebGLMultisampleRenderTarget=!0;class $t{constructor(e=0,t=0,n=0,r=1){this._x=e,this._y=t,this._z=n,this._w=r}static slerp(e,t,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,r)}static slerpFlat(e,t,n,r,c,i,u){let a=n[r+0],s=n[r+1],o=n[r+2],l=n[r+3];var n=c[i+0],r=c[i+1],d=c[i+2],c=c[i+3];if(0===u)return e[t+0]=a,e[t+1]=s,e[t+2]=o,void(e[t+3]=l);if(1===u)return e[t+0]=n,e[t+1]=r,e[t+2]=d,void(e[t+3]=c);if(l!==c||a!==n||s!==r||o!==d){let e=1-u;var i=a*n+s*r+o*d+l*c,p=0<=i?1:-1,h=1-i*i,i=(h>Number.EPSILON&&(h=Math.sqrt(h),i=Math.atan2(h,i*p),e=Math.sin(e*i)/h,u=Math.sin(u*i)/h),u*p);a=a*e+n*i,s=s*e+r*i,o=o*e+d*i,l=l*e+c*i,e===1-u&&(h=1/Math.sqrt(a*a+s*s+o*o+l*l),a*=h,s*=h,o*=h,l*=h)}e[t]=a,e[t+1]=s,e[t+2]=o,e[t+3]=l}static multiplyQuaternionsFlat(e,t,n,r,i,a){var s=n[r],o=n[r+1],l=n[r+2],n=n[r+3],r=i[a],h=i[a+1],c=i[a+2],i=i[a+3];return e[t]=s*i+n*r+o*c-l*h,e[t+1]=o*i+n*h+l*r-s*c,e[t+2]=l*i+n*c+s*h-o*r,e[t+3]=n*i-s*r-o*h-l*c,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,c){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var t=e._x,u=e._y,d=e._z,p=e._order;const n=Math.cos,r=Math.sin;var i=n(t/2),a=n(u/2),s=n(d/2),o=r(t/2),l=r(u/2),h=r(d/2);switch(p){case"XYZ":this._x=o*a*s+i*l*h,this._y=i*l*s-o*a*h,this._z=i*a*h+o*l*s,this._w=i*a*s-o*l*h;break;case"YXZ":this._x=o*a*s+i*l*h,this._y=i*l*s-o*a*h,this._z=i*a*h-o*l*s,this._w=i*a*s+o*l*h;break;case"ZXY":this._x=o*a*s-i*l*h,this._y=i*l*s+o*a*h,this._z=i*a*h+o*l*s,this._w=i*a*s-o*l*h;break;case"ZYX":this._x=o*a*s-i*l*h,this._y=i*l*s+o*a*h,this._z=i*a*h-o*l*s,this._w=i*a*s+o*l*h;break;case"YZX":this._x=o*a*s+i*l*h,this._y=i*l*s+o*a*h,this._z=i*a*h-o*l*s,this._w=i*a*s-o*l*h;break;case"XZY":this._x=o*a*s-i*l*h,this._y=i*l*s-o*a*h,this._z=i*a*h+o*l*s,this._w=i*a*s+o*l*h;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+p)}return!1!==c&&this._onChangeCallback(),this}setFromAxisAngle(e,t){var t=t/2,n=Math.sin(t);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(t),this._onChangeCallback(),this}setFromRotationMatrix(e){var e=e.elements,t=e[0],n=e[4],r=e[8],i=e[1],a=e[5],s=e[9],o=e[2],l=e[6],e=e[10],h=t+a+e;return 0<h?(h=.5/Math.sqrt(h+1),this._w=.25/h,this._x=(l-s)*h,this._y=(r-o)*h,this._z=(i-n)*h):a<t&&e<t?(h=2*Math.sqrt(1+t-a-e),this._w=(l-s)/h,this._x=.25*h,this._y=(n+i)/h,this._z=(r+o)/h):e<a?(h=2*Math.sqrt(1+a-t-e),this._w=(r-o)/h,this._x=(n+i)/h,this._y=.25*h,this._z=(s+l)/h):(h=2*Math.sqrt(1+e-t-a),this._w=(i-n)/h,this._x=(r+o)/h,this._y=(s+l)/h,this._z=.25*h),this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=n,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(St(this.dot(e),-1,1)))}rotateTowards(e,t){var n=this.angleTo(e);if(0===n)return this;t=Math.min(1,t/n);return this.slerp(e,t),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(this._x=this._x*(e=1/e),this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){var n=e._x,r=e._y,i=e._z,e=e._w,a=t._x,s=t._y,o=t._z,t=t._w;return this._x=n*t+e*a+r*o-i*s,this._y=r*t+e*s+i*a-n*o,this._z=i*t+e*o+n*s-r*a,this._w=e*t-n*a-r*s-i*o,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,r=this._y,i=this._z,a=this._w;let s=a*e._w+n*e._x+r*e._y+i*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),1<=s)return this._w=a,this._x=n,this._y=r,this._z=i,this;e=1-s*s;if(e<=Number.EPSILON)return this._w=(o=1-t)*a+t*this._w,this._x=o*n+t*this._x,this._y=o*r+t*this._y,this._z=o*i+t*this._z,this.normalize(),this._onChangeCallback(),this;var o=Math.sqrt(e),e=Math.atan2(o,s),l=Math.sin((1-t)*e)/o,t=Math.sin(t*e)/o;return this._w=a*l+this._w*t,this._x=n*l+this._x*t,this._y=r*l+this._y*t,this._z=i*l+this._z*t,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){var e=Math.random(),t=Math.sqrt(1-e),e=Math.sqrt(e),n=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(n),e*Math.sin(r),e*Math.cos(r),t*Math.sin(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}$t.prototype.isQuaternion=!0;class Ae{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(tn.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(tn.setFromAxisAngle(e,t))}applyMatrix3(e){var t=this.x,n=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[3]*n+e[6]*r,this.y=e[1]*t+e[4]*n+e[7]*r,this.z=e[2]*t+e[5]*n+e[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){var t=this.x,n=this.y,r=this.z,e=e.elements,i=1/(e[3]*t+e[7]*n+e[11]*r+e[15]);return this.x=(e[0]*t+e[4]*n+e[8]*r+e[12])*i,this.y=(e[1]*t+e[5]*n+e[9]*r+e[13])*i,this.z=(e[2]*t+e[6]*n+e[10]*r+e[14])*i,this}applyQuaternion(e){var t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,s=e.z,e=e.w,o=e*t+a*r-s*n,l=e*n+s*t-i*r,h=e*r+i*n-a*t,t=-i*t-a*n-s*r;return this.x=o*e+t*-i+l*-s-h*-a,this.y=l*e+t*-a+h*-i-o*-s,this.z=h*e+t*-s+o*-a-l*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){var t=this.x,n=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[4]*n+e[8]*r,this.y=e[1]*t+e[5]*n+e[9]*r,this.z=e[2]*t+e[6]*n+e[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){var n=e.x,r=e.y,e=e.z,i=t.x,a=t.y,t=t.z;return this.x=r*t-e*a,this.y=e*i-n*t,this.z=n*a-r*i,this}projectOnVector(e){var t=e.lengthSq();if(0===t)return this.set(0,0,0);t=e.dot(this)/t;return this.copy(e).multiplyScalar(t)}projectOnPlane(e){return en.copy(this).projectOnVector(e),this.sub(en)}reflect(e){return this.sub(en.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;e=this.dot(e)/t;return Math.acos(St(e,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,n=this.y-e.y,e=this.z-e.z;return t*t+n*n+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){var r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){e=e.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),e=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=e,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){var e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}Ae.prototype.isVector3=!0;const en=new Ae,tn=new $t;class nn{constructor(e=new Ae(1/0,1/0,1/0),t=new Ae(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(n){let r=1/0,i=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=n.length;e<t;e+=3){var h=n[e],c=n[e+1],u=n[e+2];h<r&&(r=h),c<i&&(i=c),u<a&&(a=u),h>s&&(s=h),c>o&&(o=c),u>l&&(l=u)}return this.min.set(r,i,a),this.max.set(s,o,l),this}setFromBufferAttribute(n){let r=1/0,i=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=n.count;e<t;e++){var h=n.getX(e),c=n.getY(e),u=n.getZ(e);h<r&&(r=h),c<i&&(i=c),u<a&&(a=u),h>s&&(s=h),c>o&&(o=c),u>l&&(l=u)}return this.min.set(r,i,a),this.max.set(s,o,l),this}setFromPoints(n){this.makeEmpty();for(let e=0,t=n.length;e<t;e++)this.expandByPoint(n[e]);return this}setFromCenterAndSize(e,t){t=an.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(n,r=!1){n.updateWorldMatrix(!1,!1);const e=n.geometry;if(void 0!==e)if(r&&null!=e.attributes&&void 0!==e.attributes.position){var i=e.attributes.position;for(let e=0,t=i.count;e<t;e++)an.fromBufferAttribute(i,e).applyMatrix4(n.matrixWorld),this.expandByPoint(an)}else null===e.boundingBox&&e.computeBoundingBox(),sn.copy(e.boundingBox),sn.applyMatrix4(n.matrixWorld),this.union(sn);var a=n.children;for(let e=0,t=a.length;e<t;e++)this.expandByObject(a[e],r);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,an),an.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return n=0<e.normal.x?(t=e.normal.x*this.min.x,e.normal.x*this.max.x):(t=e.normal.x*this.max.x,e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){return!this.isEmpty()&&(this.getCenter(pn),mn.subVectors(this.max,pn),on.subVectors(e.a,pn),ln.subVectors(e.b,pn),hn.subVectors(e.c,pn),cn.subVectors(ln,on),un.subVectors(hn,ln),dn.subVectors(on,hn),!!vn([0,-cn.z,cn.y,0,-un.z,un.y,0,-dn.z,dn.y,cn.z,0,-cn.x,un.z,0,-un.x,dn.z,0,-dn.x,-cn.y,cn.x,0,-un.y,un.x,0,-dn.y,dn.x,0],on,ln,hn,mn)&&(!!vn([1,0,0,0,1,0,0,0,1],on,ln,hn,mn)&&(fn.crossVectors(cn,un),vn([fn.x,fn.y,fn.z],on,ln,hn,mn))))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=an.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(an).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(rn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),rn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),rn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),rn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),rn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),rn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),rn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),rn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(rn)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}nn.prototype.isBox3=!0;const rn=[new Ae,new Ae,new Ae,new Ae,new Ae,new Ae,new Ae,new Ae],an=new Ae,sn=new nn,on=new Ae,ln=new Ae,hn=new Ae,cn=new Ae,un=new Ae,dn=new Ae,pn=new Ae,mn=new Ae,fn=new Ae,gn=new Ae;function vn(n,r,i,a,s){for(let e=0,t=n.length-3;e<=t;e+=3){gn.fromArray(n,e);var o=s.x*Math.abs(gn.x)+s.y*Math.abs(gn.y)+s.z*Math.abs(gn.z),l=r.dot(gn),h=i.dot(gn),c=a.dot(gn);if(Math.max(-Math.max(l,h,c),Math.min(l,h,c))>o)return!1}return!0}const yn=new nn,xn=new Ae,_n=new Ae,Mn=new Ae;class En{constructor(e=new Ae,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(n,e){const r=this.center;void 0!==e?r.copy(e):yn.setFromPoints(n).getCenter(r);let i=0;for(let e=0,t=n.length;e<t;e++)i=Math.max(i,r.distanceToSquared(n[e]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){var n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Mn.subVectors(e,this.center);var t,e=Mn.lengthSq();return e>this.radius*this.radius&&(t=.5*((e=Math.sqrt(e))-this.radius),this.center.add(Mn.multiplyScalar(t/e)),this.radius+=t),this}union(e){return(!0===this.center.equals(e.center)?_n.set(0,0,1):_n.subVectors(e.center,this.center).normalize()).multiplyScalar(e.radius),this.expandByPoint(xn.copy(e.center).add(_n)),this.expandByPoint(xn.copy(e.center).sub(_n)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const bn=new Ae,wn=new Ae,Tn=new Ae,Sn=new Ae,An=new Ae,Rn=new Ae,Ln=new Ae;class Cn{constructor(e=new Ae,t=new Ae(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,bn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);e=t.dot(this.direction);return e<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(e).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){var t=bn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(bn.copy(this.direction).multiplyScalar(t).add(this.origin),bn.distanceToSquared(e))}distanceSqToSegment(e,t,n,c){wn.copy(e).add(t).multiplyScalar(.5),Tn.copy(t).sub(e).normalize(),Sn.copy(this.origin).sub(wn);var e=.5*e.distanceTo(t),t=-this.direction.dot(Tn),r=Sn.dot(this.direction),i=-Sn.dot(Tn),a=Sn.lengthSq(),s=Math.abs(1-t*t);let o,l,u,h;return u=0<s?(o=t*i-r,l=t*r-i,h=e*s,0<=o?l>=-h?l<=h?(s=1/s,o*=s,l*=s,o*(o+t*l+2*r)+l*(t*o+l+2*i)+a):(l=e,o=Math.max(0,-(t*l+r)),-o*o+l*(l+2*i)+a):(l=-e,o=Math.max(0,-(t*l+r)),-o*o+l*(l+2*i)+a):l<=-h?(o=Math.max(0,-(-t*e+r)),l=0<o?-e:Math.min(Math.max(-e,-i),e),-o*o+l*(l+2*i)+a):l<=h?(o=0,l=Math.min(Math.max(-e,-i),e),l*(l+2*i)+a):(o=Math.max(0,-(t*e+r)),l=0<o?e:Math.min(Math.max(-e,-i),e),-o*o+l*(l+2*i)+a)):(l=0<t?-e:e,o=Math.max(0,-(t*l+r)),-o*o+l*(l+2*i)+a),n&&n.copy(this.direction).multiplyScalar(o).add(this.origin),c&&c.copy(Tn).multiplyScalar(l).add(wn),u}intersectSphere(e,t){bn.subVectors(e.center,this.origin);var n=bn.dot(this.direction),r=bn.dot(bn)-n*n,e=e.radius*e.radius;if(e<r)return null;e=Math.sqrt(e-r),r=n-e,n+=e;return r<0&&n<0?null:r<0?this.at(n,t):this.at(r,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;e=-(this.origin.dot(e.normal)+e.constant)/t;return 0<=e?e:null}intersectPlane(e,t){e=this.distanceToPlane(e);return null===e?null:this.at(e,t)}intersectsPlane(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,c){let t,n,r,i,a,u;var s=1/this.direction.x,o=1/this.direction.y,l=1/this.direction.z,h=this.origin;return n=0<=s?(t=(e.min.x-h.x)*s,(e.max.x-h.x)*s):(t=(e.max.x-h.x)*s,(e.min.x-h.x)*s),i=0<=o?(r=(e.min.y-h.y)*o,(e.max.y-h.y)*o):(r=(e.max.y-h.y)*o,(e.min.y-h.y)*o),t>i||r>n?null:((r>t||t!=t)&&(t=r),(i<n||n!=n)&&(n=i),u=0<=l?(a=(e.min.z-h.z)*l,(e.max.z-h.z)*l):(a=(e.max.z-h.z)*l,(e.min.z-h.z)*l),t>u||a>n?null:((a>t||t!=t)&&(t=a),(u<n||n!=n)&&(n=u),n<0?null:this.at(0<=t?t:n,c)))}intersectsBox(e){return null!==this.intersectBox(e,bn)}intersectTriangle(e,t,n,r,i){An.subVectors(t,e),Rn.subVectors(n,e),Ln.crossVectors(An,Rn);let a=this.direction.dot(Ln),s;if(0<a){if(r)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}Sn.subVectors(this.origin,e);t=s*this.direction.dot(Rn.crossVectors(Sn,Rn));if(t<0)return null;n=s*this.direction.dot(An.cross(Sn));if(n<0)return null;if(t+n>a)return null;r=-s*Sn.dot(Ln);return r<0?null:this.at(r/a,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Re{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,i,a,s,o,l,c,u,d,p,m,f,g){const h=this.elements;return h[0]=e,h[4]=t,h[8]=n,h[12]=r,h[1]=i,h[5]=a,h[9]=s,h[13]=o,h[2]=l,h[6]=c,h[10]=u,h[14]=d,h[3]=p,h[7]=m,h[11]=f,h[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Re).fromArray(this.elements)}copy(e){const t=this.elements;e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){e=e.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements;var n=e.elements,r=1/Pn.setFromMatrixColumn(e,0).length(),i=1/Pn.setFromMatrixColumn(e,1).length(),e=1/Pn.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*i,t[5]=n[5]*i,t[6]=n[6]*i,t[7]=0,t[8]=n[8]*e,t[9]=n[9]*e,t[10]=n[10]*e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(c){c&&c.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements;var t,n,r,u,i=c.x,a=c.y,s=c.z,o=Math.cos(i),i=Math.sin(i),l=Math.cos(a),a=Math.sin(a),h=Math.cos(s),s=Math.sin(s);return"XYZ"===c.order?(r=o*h,n=o*s,t=i*h,u=i*s,e[0]=l*h,e[4]=-l*s,e[8]=a,e[1]=n+t*a,e[5]=r-u*a,e[9]=-i*l,e[2]=u-r*a,e[6]=t+n*a,e[10]=o*l):"YXZ"===c.order?(u=l*h,r=l*s,t=a*h,n=a*s,e[0]=u+n*i,e[4]=t*i-r,e[8]=o*a,e[1]=o*s,e[5]=o*h,e[9]=-i,e[2]=r*i-t,e[6]=n+u*i,e[10]=o*l):"ZXY"===c.order?(r=l*h,t=l*s,n=a*h,u=a*s,e[0]=r-u*i,e[4]=-o*s,e[8]=n+t*i,e[1]=t+n*i,e[5]=o*h,e[9]=u-r*i,e[2]=-o*a,e[6]=i,e[10]=o*l):"ZYX"===c.order?(t=o*h,n=o*s,u=i*h,r=i*s,e[0]=l*h,e[4]=u*a-n,e[8]=t*a+r,e[1]=l*s,e[5]=r*a+t,e[9]=n*a-u,e[2]=-a,e[6]=i*l,e[10]=o*l):"YZX"===c.order?(r=o*l,t=o*a,n=i*l,u=i*a,e[0]=l*h,e[4]=u-r*s,e[8]=n*s+t,e[1]=s,e[5]=o*h,e[9]=-i*h,e[2]=-a*h,e[6]=t*s+n,e[10]=r-u*s):"XZY"===c.order&&(t=o*l,n=o*a,r=i*l,u=i*a,e[0]=l*h,e[4]=-s,e[8]=a*h,e[1]=t*s+u,e[5]=o*h,e[9]=n*s-r,e[2]=r*s-n,e[6]=i*h,e[10]=u*s+t),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(e){return this.compose(In,e,Nn)}lookAt(e,t,n){const r=this.elements;return Fn.subVectors(e,t),0===Fn.lengthSq()&&(Fn.z=1),Fn.normalize(),On.crossVectors(n,Fn),0===On.lengthSq()&&(1===Math.abs(n.z)?Fn.x+=1e-4:Fn.z+=1e-4,Fn.normalize(),On.crossVectors(n,Fn)),On.normalize(),Un.crossVectors(Fn,On),r[0]=On.x,r[4]=Un.x,r[8]=Fn.x,r[1]=On.y,r[5]=Un.y,r[9]=Fn.y,r[2]=On.z,r[6]=Un.z,r[10]=Fn.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){e=e.elements,t=t.elements;const n=this.elements;var r=e[0],i=e[4],a=e[8],s=e[12],o=e[1],l=e[5],h=e[9],c=e[13],u=e[2],d=e[6],p=e[10],m=e[14],f=e[3],g=e[7],v=e[11],e=e[15],y=t[0],x=t[4],_=t[8],M=t[12],E=t[1],b=t[5],w=t[9],T=t[13],S=t[2],A=t[6],R=t[10],L=t[14],C=t[3],P=t[7],D=t[11],t=t[15];return n[0]=r*y+i*E+a*S+s*C,n[4]=r*x+i*b+a*A+s*P,n[8]=r*_+i*w+a*R+s*D,n[12]=r*M+i*T+a*L+s*t,n[1]=o*y+l*E+h*S+c*C,n[5]=o*x+l*b+h*A+c*P,n[9]=o*_+l*w+h*R+c*D,n[13]=o*M+l*T+h*L+c*t,n[2]=u*y+d*E+p*S+m*C,n[6]=u*x+d*b+p*A+m*P,n[10]=u*_+d*w+p*R+m*D,n[14]=u*M+d*T+p*L+m*t,n[3]=f*y+g*E+v*S+e*C,n[7]=f*x+g*b+v*A+e*P,n[11]=f*_+g*w+v*R+e*D,n[15]=f*M+g*T+v*L+e*t,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],s=e[5],o=e[9],l=e[13],h=e[2],c=e[6],u=e[10],d=e[14];return e[3]*(+i*o*c-r*l*c-i*s*u+n*l*u+r*s*d-n*o*d)+e[7]*(+t*o*d-t*l*u+i*a*u-r*a*d+r*l*h-i*o*h)+e[11]*(+t*l*c-t*s*d-i*a*c+n*a*d+i*s*h-n*l*h)+e[15]*(-r*s*h-t*o*c+t*s*u+r*a*c-n*a*u+n*o*h)}transpose(){const e=this.elements;var t=e[1];return e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],c=e[8],u=e[9],d=e[10],p=e[11],m=e[12],f=e[13],g=e[14],v=e[15],y=u*g*l-f*d*l+f*o*p-s*g*p-u*o*v+s*d*v,x=m*d*l-c*g*l-m*o*p+a*g*p+c*o*v-a*d*v,_=c*f*l-m*u*l+m*s*p-a*f*p-c*s*v+a*u*v,M=m*u*o-c*f*o-m*s*d+a*f*d+c*s*g-a*u*g;var h=t*y+n*x+r*_+i*M;if(0==h)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);h=1/h;return e[0]=y*h,e[1]=(f*d*i-u*g*i-f*r*p+n*g*p+u*r*v-n*d*v)*h,e[2]=(s*g*i-f*o*i+f*r*l-n*g*l-s*r*v+n*o*v)*h,e[3]=(u*o*i-s*d*i-u*r*l+n*d*l+s*r*p-n*o*p)*h,e[4]=x*h,e[5]=(c*g*i-m*d*i+m*r*p-t*g*p-c*r*v+t*d*v)*h,e[6]=(m*o*i-a*g*i-m*r*l+t*g*l+a*r*v-t*o*v)*h,e[7]=(a*d*i-c*o*i+c*r*l-t*d*l-a*r*p+t*o*p)*h,e[8]=_*h,e[9]=(m*u*i-c*f*i-m*n*p+t*f*p+c*n*v-t*u*v)*h,e[10]=(a*f*i-m*s*i+m*n*l-t*f*l-a*n*v+t*s*v)*h,e[11]=(c*s*i-a*u*i-c*n*l+t*u*l+a*n*p-t*s*p)*h,e[12]=M*h,e[13]=(c*f*r-m*u*r+m*n*d-t*f*d-c*n*g+t*u*g)*h,e[14]=(m*s*r-a*f*r-m*n*o+t*f*o+a*n*g-t*s*g)*h,e[15]=(a*u*r-c*s*r+c*n*o-t*u*o-a*n*d+t*s*d)*h,this}scale(e){const t=this.elements;var n=e.x,r=e.y,e=e.z;return t[0]*=n,t[4]*=r,t[8]*=e,t[1]*=n,t[5]*=r,t[9]*=e,t[2]*=n,t[6]*=r,t[10]*=e,t[3]*=n,t[7]*=r,t[11]*=e,this}getMaxScaleOnAxis(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,e))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this}makeRotationY(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this}makeRotationZ(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){var n=Math.cos(t),t=Math.sin(t),r=1-n,i=e.x,a=e.y,e=e.z,s=r*i,o=r*a;return this.set(s*i+n,s*a-t*e,s*e+t*a,0,s*a+t*e,o*a+n,o*e-t*i,0,s*e-t*a,o*e+t*i,r*e*e+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,i,a){return this.set(1,n,i,0,e,1,a,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements;var i=t._x,a=t._y,s=t._z,t=t._w,o=i+i,l=a+a,h=s+s,c=i*o,u=i*l,i=i*h,d=a*l,a=a*h,s=s*h,o=t*o,l=t*l,t=t*h,h=n.x,p=n.y,n=n.z;return r[0]=(1-(d+s))*h,r[1]=(u+t)*h,r[2]=(i-l)*h,r[3]=0,r[4]=(u-t)*p,r[5]=(1-(c+s))*p,r[6]=(a+o)*p,r[7]=0,r[8]=(i+l)*n,r[9]=(a-o)*n,r[10]=(1-(c+d))*n,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){var r=this.elements;let i=Pn.set(r[0],r[1],r[2]).length();var a=Pn.set(r[4],r[5],r[6]).length(),s=Pn.set(r[8],r[9],r[10]).length(),e=(this.determinant()<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],Dn.copy(this),1/i),r=1/a,o=1/s;return Dn.elements[0]*=e,Dn.elements[1]*=e,Dn.elements[2]*=e,Dn.elements[4]*=r,Dn.elements[5]*=r,Dn.elements[6]*=r,Dn.elements[8]*=o,Dn.elements[9]*=o,Dn.elements[10]*=o,t.setFromRotationMatrix(Dn),n.x=i,n.y=a,n.z=s,this}makePerspective(e,t,n,r,i,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements;var o=2*i/(n-r),l=(t+e)/(t-e),n=(n+r)/(n-r),r=-(a+i)/(a-i),a=-2*a*i/(a-i);return s[0]=2*i/(t-e),s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=o,s[9]=n,s[13]=0,s[2]=0,s[6]=0,s[10]=r,s[14]=a,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,r,i,a){const s=this.elements;var o=1/(t-e),l=1/(n-r),h=1/(a-i),t=(t+e)*o,e=(n+r)*l,n=(a+i)*h;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-t,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-e,s[2]=0,s[6]=0,s[10]=-2*h,s[14]=-n,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){var t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(t,n=0){for(let e=0;e<16;e++)this.elements[e]=t[e+n];return this}toArray(e=[],t=0){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}Re.prototype.isMatrix4=!0;const Pn=new Ae,Dn=new Re,In=new Ae(0,0,0),Nn=new Ae(1,1,1),On=new Ae,Un=new Ae,Fn=new Ae,Bn=new Re,Hn=new $t;class zn{constructor(e=0,t=0,n=0,r=zn.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,c=this._order,u=!0){var e=e.elements,t=e[0],n=e[4],r=e[8],i=e[1],a=e[5],s=e[9],o=e[2],l=e[6],h=e[10];switch(c){case"XYZ":this._y=Math.asin(St(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(-s,h),this._z=Math.atan2(-n,t)):(this._x=Math.atan2(l,a),this._z=0);break;case"YXZ":this._x=Math.asin(-St(s,-1,1)),Math.abs(s)<.9999999?(this._y=Math.atan2(r,h),this._z=Math.atan2(i,a)):(this._y=Math.atan2(-o,t),this._z=0);break;case"ZXY":this._x=Math.asin(St(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(-o,h),this._z=Math.atan2(-n,a)):(this._y=0,this._z=Math.atan2(i,t));break;case"ZYX":this._y=Math.asin(-St(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(l,h),this._z=Math.atan2(i,t)):(this._x=0,this._z=Math.atan2(-n,a));break;case"YZX":this._z=Math.asin(St(i,-1,1)),Math.abs(i)<.9999999?(this._x=Math.atan2(-s,a),this._y=Math.atan2(-o,t)):(this._x=0,this._y=Math.atan2(r,h));break;case"XZY":this._z=Math.asin(-St(n,-1,1)),Math.abs(n)<.9999999?(this._x=Math.atan2(l,a),this._y=Math.atan2(r,t)):(this._x=Math.atan2(-s,h),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+c)}return this._order=c,!0===u&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Bn.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Bn,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Hn.setFromEuler(this),this.setFromQuaternion(Hn,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new Ae(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}zn.prototype.isEuler=!0,zn.DefaultOrder="XYZ",zn.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Gn{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let Vn=0;const kn=new Ae,Wn=new $t,jn=new Re,Xn=new Ae,qn=new Ae,Yn=new Ae,Zn=new $t,Jn=new Ae(1,0,0),Kn=new Ae(0,1,0),Qn=new Ae(0,0,1),$n={type:"added"},er={type:"removed"};class M extends _t{constructor(){super(),Object.defineProperty(this,"id",{value:Vn++}),this.uuid=Tt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=M.DefaultUp.clone();var e=new Ae;const t=new zn,n=new $t;var r=new Ae(1,1,1);t._onChange(function(){n.setFromEuler(t,!1)}),n._onChange(function(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Re},normalMatrix:{value:new It}}),this.matrix=new Re,this.matrixWorld=new Re,this.matrixAutoUpdate=M.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Gn,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Wn.setFromAxisAngle(e,t),this.quaternion.multiply(Wn),this}rotateOnWorldAxis(e,t){return Wn.setFromAxisAngle(e,t),this.quaternion.premultiply(Wn),this}rotateX(e){return this.rotateOnAxis(Jn,e)}rotateY(e){return this.rotateOnAxis(Kn,e)}rotateZ(e){return this.rotateOnAxis(Qn,e)}translateOnAxis(e,t){return kn.copy(e).applyQuaternion(this.quaternion),this.position.add(kn.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Jn,e)}translateY(e){return this.translateOnAxis(Kn,e)}translateZ(e){return this.translateOnAxis(Qn,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(jn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Xn.copy(e):Xn.set(e,t,n);e=this.parent;this.updateWorldMatrix(!0,!1),qn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?jn.lookAt(qn,Xn,this.up):jn.lookAt(Xn,qn,this.up),this.quaternion.setFromRotationMatrix(jn),e&&(jn.extractRotation(e.matrixWorld),Wn.setFromRotationMatrix(jn),this.quaternion.premultiply(Wn.invert()))}add(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),(e.parent=this).children.push(e),e.dispatchEvent($n)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this}remove(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(er)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(er)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),jn.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),jn.multiply(e.parent.matrixWorld)),e.applyMatrix4(jn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(n,r){if(this[n]===r)return this;for(let e=0,t=this.children.length;e<t;e++){const a=this.children[e];var i=a.getObjectByProperty(n,r);if(void 0!==i)return i}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(qn,e,Yn),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(qn,Zn,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(n){n(this);const r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].traverse(n)}traverseVisible(n){if(!1!==this.visible){n(this);const r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].traverseVisible(n)}}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(n){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||n)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),n=!(this.matrixWorldNeedsUpdate=!1));const r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].updateMatrixWorld(n)}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].updateWorldMatrix(!1,!0)}}toJSON(n){var e,t,c,u,d,r=void 0===n||"string"==typeof n;const i={},a=(r&&(n={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"}),{});function s(e,t){return void 0===e[t.uuid]&&(e[t.uuid]=t.toJSON(n)),t.uuid}if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),!1===this.frustumCulled&&(a.frustumCulled=!1),0!==this.renderOrder&&(a.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),a.layers=this.layers.mask,a.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(a.matrixAutoUpdate=!1),this.isInstancedMesh&&(a.type="InstancedMesh",a.count=this.count,a.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(a.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?a.background=this.background.toJSON():this.background.isTexture&&(a.background=this.background.toJSON(n).uuid)),this.environment&&this.environment.isTexture&&(a.environment=this.environment.toJSON(n).uuid);else if(this.isMesh||this.isLine||this.isPoints){a.geometry=s(n.geometries,this.geometry);var o=this.geometry.parameters;if(void 0!==o&&void 0!==o.shapes){var l=o.shapes;if(Array.isArray(l))for(let e=0,t=l.length;e<t;e++){var p=l[e];s(n.shapes,p)}else s(n.shapes,l)}}if(this.isSkinnedMesh&&(a.bindMode=this.bindMode,a.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(s(n.skeletons,this.skeleton),a.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const f=[];for(let e=0,t=this.material.length;e<t;e++)f.push(s(n.materials,this.material[e]));a.material=f}else a.material=s(n.materials,this.material);if(0<this.children.length){a.children=[];for(let e=0;e<this.children.length;e++)a.children.push(this.children[e].toJSON(n).object)}if(0<this.animations.length){a.animations=[];for(let e=0;e<this.animations.length;e++){var m=this.animations[e];a.animations.push(s(n.animations,m))}}return r&&(o=h(n.geometries),r=h(n.materials),e=h(n.textures),t=h(n.images),c=h(n.shapes),u=h(n.skeletons),d=h(n.animations),0<o.length&&(i.geometries=o),0<r.length&&(i.materials=r),0<e.length&&(i.textures=e),0<t.length&&(i.images=t),0<c.length&&(i.shapes=c),0<u.length&&(i.skeletons=u),0<d.length&&(i.animations=d)),i.object=a,i;function h(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}M.DefaultUp=new Ae(0,1,0),M.DefaultMatrixAutoUpdate=!0,M.prototype.isObject3D=!0;const tr=new Ae,nr=new Ae,rr=new Ae,ir=new Ae,ar=new Ae,sr=new Ae,or=new Ae,lr=new Ae,hr=new Ae,cr=new Ae;class ur{constructor(e=new Ae,t=new Ae,n=new Ae){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),tr.subVectors(e,t),r.cross(tr);n=r.lengthSq();return 0<n?r.multiplyScalar(1/Math.sqrt(n)):r.set(0,0,0)}static getBarycoord(e,t,n,r,i){tr.subVectors(r,t),nr.subVectors(n,t),rr.subVectors(e,t);var r=tr.dot(tr),n=tr.dot(nr),e=tr.dot(rr),t=nr.dot(nr),a=nr.dot(rr),s=r*t-n*n;if(0==s)return i.set(-2,-1,-1);s=1/s,t=(t*e-n*a)*s,r=(r*a-n*e)*s;return i.set(1-t-r,r,t)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,ir),0<=ir.x&&0<=ir.y&&ir.x+ir.y<=1}static getUV(e,t,n,r,i,a,s,o){return this.getBarycoord(e,t,n,r,ir),o.set(0,0),o.addScaledVector(i,ir.x),o.addScaledVector(a,ir.y),o.addScaledVector(s,ir.z),o}static isFrontFacing(e,t,n,r){return tr.subVectors(n,t),nr.subVectors(e,t),tr.cross(nr).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return tr.subVectors(this.c,this.b),nr.subVectors(this.a,this.b),.5*tr.cross(nr).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ur.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ur.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,i){return ur.getUV(e,this.a,this.b,this.c,t,n,r,i)}containsPoint(e){return ur.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ur.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){var n=this.a,c=this.b,r=this.c;let u,i;ar.subVectors(c,n),sr.subVectors(r,n),lr.subVectors(e,n);var a=ar.dot(lr),s=sr.dot(lr);if(a<=0&&s<=0)return t.copy(n);hr.subVectors(e,c);var o=ar.dot(hr),l=sr.dot(hr);if(0<=o&&l<=o)return t.copy(c);var d=a*l-o*s;if(d<=0&&0<=a&&o<=0)return u=a/(a-o),t.copy(n).addScaledVector(ar,u);cr.subVectors(e,r);var e=ar.dot(cr),h=sr.dot(cr);if(0<=h&&e<=h)return t.copy(r);a=e*s-a*h;if(a<=0&&0<=s&&h<=0)return i=s/(s-h),t.copy(n).addScaledVector(sr,i);s=o*h-e*l;if(s<=0&&0<=l-o&&0<=e-h)return or.subVectors(r,c),i=(l-o)/(l-o+(e-h)),t.copy(c).addScaledVector(or,i);r=1/(s+a+d);return u=a*r,i=d*r,t.copy(n).addScaledVector(ar,u).addScaledVector(sr,i)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let dr=0;class pr extends _t{constructor(){super(),Object.defineProperty(this,"id",{value:dr++}),this.uuid=Tt(),this.name="",this.type="Material",this.fog=!0,this.blending=K,this.side=Le,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=de,this.blendDst=pe,this.blendEquation=re,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ee,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){0<this._alphaTest!=0<e&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const n in e){var t=e[n];if(void 0!==t)if("shading"!==n){const r=this[n];void 0!==r?r&&r.isColor?r.set(t):r&&r.isVector3&&t&&t.isVector3?r.copy(t):this[n]=t:console.warn("THREE."+this.type+": '"+n+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t;else console.warn("THREE.Material: '"+n+"' parameter is undefined.")}}toJSON(e){var t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}return n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==K&&(n.blending=this.blending),this.side!==Le&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),0<this.alphaTest&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),1<this.wireframeLinewidth&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t&&(t=r(e.textures),e=r(e.images),0<t.length&&(n.textures=t),0<e.length&&(n.images=e)),n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){var r=t.length;n=new Array(r);for(let e=0;e!==r;++e)n[e]=t[e].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}pr.prototype.isMaterial=!0;class mr extends pr{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new _(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}mr.prototype.isMeshBasicMaterial=!0;const fr=new Ae,gr=new ne;class vr{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=a,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(n,r,i){n*=this.itemSize,i*=r.itemSize;for(let e=0,t=this.itemSize;e<t;e++)this.array[n+e]=r.array[i+e];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(n){const r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",t),e=new _),r[i++]=e.r,r[i++]=e.g,r[i++]=e.b}return this}copyVector2sArray(n){const r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",t),e=new ne),r[i++]=e.x,r[i++]=e.y}return this}copyVector3sArray(n){const r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",t),e=new Ae),r[i++]=e.x,r[i++]=e.y,r[i++]=e.z}return this}copyVector4sArray(n){const r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",t),e=new Zt),r[i++]=e.x,r[i++]=e.y,r[i++]=e.z,r[i++]=e.w}return this}applyMatrix3(n){if(2===this.itemSize)for(let e=0,t=this.count;e<t;e++)gr.fromBufferAttribute(this,e),gr.applyMatrix3(n),this.setXY(e,gr.x,gr.y);else if(3===this.itemSize)for(let e=0,t=this.count;e<t;e++)fr.fromBufferAttribute(this,e),fr.applyMatrix3(n),this.setXYZ(e,fr.x,fr.y,fr.z);return this}applyMatrix4(n){for(let e=0,t=this.count;e<t;e++)fr.x=this.getX(e),fr.y=this.getY(e),fr.z=this.getZ(e),fr.applyMatrix4(n),this.setXYZ(e,fr.x,fr.y,fr.z);return this}applyNormalMatrix(n){for(let e=0,t=this.count;e<t;e++)fr.x=this.getX(e),fr.y=this.getY(e),fr.z=this.getZ(e),fr.applyNormalMatrix(n),this.setXYZ(e,fr.x,fr.y,fr.z);return this}transformDirection(n){for(let e=0,t=this.count;e<t;e++)fr.x=this.getX(e),fr.y=this.getY(e),fr.z=this.getZ(e),fr.transformDirection(n),this.setXYZ(e,fr.x,fr.y,fr.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==a&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}vr.prototype.isBufferAttribute=!0;class yr extends vr{constructor(e,t,n){super(new Int8Array(e),t,n)}}class xr extends vr{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class _r extends vr{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Mr extends vr{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Er extends vr{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class br extends vr{constructor(e,t,n){super(new Int32Array(e),t,n)}}class wr extends vr{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Tr extends vr{constructor(e,t,n){super(new Uint16Array(e),t,n)}}Tr.prototype.isFloat16BufferAttribute=!0;class V extends vr{constructor(e,t,n){super(new Float32Array(e),t,n)}}class Sr extends vr{constructor(e,t,n){super(new Float64Array(e),t,n)}}let Ar=0;const Rr=new Re,Lr=new M,Cr=new Ae,Pr=new nn,Dr=new nn,Ir=new Ae;class S extends _t{constructor(){super(),Object.defineProperty(this,"id",{value:Ar++}),this.uuid=Tt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Nt(e)?wr:Er)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position,n=(void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0),this.attributes.normal);var r;void 0!==n&&(r=(new It).getNormalMatrix(e),n.applyNormalMatrix(r),n.needsUpdate=!0);const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return Rr.makeRotationFromQuaternion(e),this.applyMatrix4(Rr),this}rotateX(e){return Rr.makeRotationX(e),this.applyMatrix4(Rr),this}rotateY(e){return Rr.makeRotationY(e),this.applyMatrix4(Rr),this}rotateZ(e){return Rr.makeRotationZ(e),this.applyMatrix4(Rr),this}translate(e,t,n){return Rr.makeTranslation(e,t,n),this.applyMatrix4(Rr),this}scale(e,t,n){return Rr.makeScale(e,t,n),this.applyMatrix4(Rr),this}lookAt(e){return Lr.lookAt(e),Lr.updateMatrix(),this.applyMatrix4(Lr.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Cr).negate(),this.translate(Cr.x,Cr.y,Cr.z),this}setFromPoints(n){const r=[];for(let e=0,t=n.length;e<t;e++){var i=n[e];r.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new V(r,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new nn);var e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Ae(-1/0,-1/0,-1/0),new Ae(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),n)for(let e=0,t=n.length;e<t;e++){var r=n[e];Pr.setFromBufferAttribute(r),this.morphTargetsRelative?(Ir.addVectors(this.boundingBox.min,Pr.min),this.boundingBox.expandByPoint(Ir),Ir.addVectors(this.boundingBox.max,Pr.max),this.boundingBox.expandByPoint(Ir)):(this.boundingBox.expandByPoint(Pr.min),this.boundingBox.expandByPoint(Pr.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new En);var r=this.attributes.position,i=this.morphAttributes.position;if(r&&r.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Ae,1/0);if(r){const l=this.boundingSphere.center;if(Pr.setFromBufferAttribute(r),i)for(let e=0,t=i.length;e<t;e++){var a=i[e];Dr.setFromBufferAttribute(a),this.morphTargetsRelative?(Ir.addVectors(Pr.min,Dr.min),Pr.expandByPoint(Ir),Ir.addVectors(Pr.max,Dr.max),Pr.expandByPoint(Ir)):(Pr.expandByPoint(Dr.min),Pr.expandByPoint(Dr.max))}Pr.getCenter(l);let n=0;for(let e=0,t=r.count;e<t;e++)Ir.fromBufferAttribute(r,e),n=Math.max(n,l.distanceToSquared(Ir));if(i)for(let e=0,t=i.length;e<t;e++){var s=i[e],o=this.morphTargetsRelative;for(let e=0,t=s.count;e<t;e++)Ir.fromBufferAttribute(s,e),o&&(Cr.fromBufferAttribute(r,e),Ir.add(Cr)),n=Math.max(n,l.distanceToSquared(Ir))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){var t=this.index,e=this.attributes;if(null!==t&&void 0!==e.position&&void 0!==e.normal&&void 0!==e.uv){var r=t.array;const x=e.position.array,_=e.normal.array,M=e.uv.array;var i,a,s,d,p=x.length/3;void 0===e.tangent&&this.setAttribute("tangent",new vr(new Float32Array(4*p),4));const E=e.tangent.array,o=[],l=[];for(let e=0;e<p;e++)o[e]=new Ae,l[e]=new Ae;const b=new Ae,w=new Ae,T=new Ae,S=new ne,h=new ne,c=new ne,A=new Ae,R=new Ae;let n=this.groups;0===n.length&&(n=[{start:0,count:r.length}]);for(let e=0,t=n.length;e<t;++e){var m=n[e],f=m.start;for(let e=f,t=f+m.count;e<t;e+=3)i=r[e+0],a=r[e+1],s=r[e+2],d=void 0,b.fromArray(x,3*i),w.fromArray(x,3*a),T.fromArray(x,3*s),S.fromArray(M,2*i),h.fromArray(M,2*a),c.fromArray(M,2*s),w.sub(b),T.sub(b),h.sub(S),c.sub(S),d=1/(h.x*c.y-c.x*h.y),isFinite(d)&&(A.copy(w).multiplyScalar(c.y).addScaledVector(T,-h.y).multiplyScalar(d),R.copy(T).multiplyScalar(h.x).addScaledVector(w,-c.x).multiplyScalar(d),o[i].add(A),o[a].add(A),o[s].add(A),l[i].add(R),l[a].add(R),l[s].add(R))}const u=new Ae,L=new Ae,C=new Ae,P=new Ae;for(let e=0,t=n.length;e<t;++e){var g=n[e],v=g.start;for(let e=v,t=v+g.count;e<t;e+=3)y(r[e+0]),y(r[e+1]),y(r[e+2])}function y(e){C.fromArray(_,3*e),P.copy(C);var t=o[e],t=(u.copy(t),u.sub(C.multiplyScalar(C.dot(t))).normalize(),L.crossVectors(P,t),L.dot(l[e])),t=t<0?-1:1;E[4*e]=u.x,E[4*e+1]=u.y,E[4*e+2]=u.z,E[4*e+3]=t}}else console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)")}computeVertexNormals(){const r=this.index;var i=this.getAttribute("position");if(void 0!==i){let n=this.getAttribute("normal");if(void 0===n)n=new vr(new Float32Array(3*i.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const a=new Ae,s=new Ae,o=new Ae,l=new Ae,h=new Ae,c=new Ae,u=new Ae,d=new Ae;if(r)for(let e=0,t=r.count;e<t;e+=3){var p=r.getX(e+0),m=r.getX(e+1),f=r.getX(e+2);a.fromBufferAttribute(i,p),s.fromBufferAttribute(i,m),o.fromBufferAttribute(i,f),u.subVectors(o,s),d.subVectors(a,s),u.cross(d),l.fromBufferAttribute(n,p),h.fromBufferAttribute(n,m),c.fromBufferAttribute(n,f),l.add(u),h.add(u),c.add(u),n.setXYZ(p,l.x,l.y,l.z),n.setXYZ(m,h.x,h.y,h.z),n.setXYZ(f,c.x,c.y,c.z)}else for(let e=0,t=i.count;e<t;e+=3)a.fromBufferAttribute(i,e+0),s.fromBufferAttribute(i,e+1),o.fromBufferAttribute(i,e+2),u.subVectors(o,s),d.subVectors(a,s),u.cross(d),n.setXYZ(e+0,u.x,u.y,u.z),n.setXYZ(e+1,u.x,u.y,u.z),n.setXYZ(e+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(e&&e.isBufferGeometry){void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var n=this.attributes;for(const s in n)if(void 0!==e.attributes[s]){const o=n[s].array;var r=e.attributes[s],i=r.array,r=r.itemSize*t,a=Math.min(i.length,o.length-r);for(let e=0,t=r;e<a;e++,t++)o[t]=i[e]}return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)}normalizeNormals(){const n=this.attributes.normal;for(let e=0,t=n.count;e<t;e++)Ir.fromBufferAttribute(n,e),Ir.normalize(),n.setXYZ(e,Ir.x,Ir.y,Ir.z)}toNonIndexed(){function n(n,r){const i=n.array;var a=n.itemSize,e=n.normalized;const s=new i.constructor(r.length*a);let o=0,l=0;for(let e=0,t=r.length;e<t;e++){o=n.isInterleavedBufferAttribute?r[e]*n.data.stride+n.offset:r[e]*a;for(let e=0;e<a;e++)s[l++]=i[o++]}return new vr(s,a,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const r=new S;var i=this.index.array,e=this.attributes;for(const o in e){var c=n(e[o],i);r.setAttribute(o,c)}var t=this.morphAttributes;for(const l in t){const h=[];var a=t[l];for(let e=0,t=a.length;e<t;e++){var u=n(a[e],i);h.push(u)}r.morphAttributes[l]=h}r.morphTargetsRelative=this.morphTargetsRelative;var d=this.groups;for(let e=0,t=d.length;e<t;e++){var s=d[e];r.addGroup(s.start,s.count,s.materialIndex)}return r}toJSON(){const n={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),0<Object.keys(this.userData).length&&(n.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(const s in e)void 0!==e[s]&&(n[s]=e[s]);return n}n.data={attributes:{}};var t=this.index,r=(null!==t&&(n.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)}),this.attributes);for(const o in r){const d=r[o];n.data.attributes[o]=d.toJSON(n.data)}const i={};let c=!1;for(const l in this.morphAttributes){var u=this.morphAttributes[l];const h=[];for(let e=0,t=u.length;e<t;e++){const p=u[e];h.push(p.toJSON(n.data))}0<h.length&&(i[l]=h,c=!0)}c&&(n.data.morphAttributes=i,n.data.morphTargetsRelative=this.morphTargetsRelative);t=this.groups;0<t.length&&(n.data.groups=JSON.parse(JSON.stringify(t)));const a=this.boundingSphere;return null!==a&&(n.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),n}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var n={};this.name=e.name;const t=e.index;null!==t&&this.setIndex(t.clone(n));var r=e.attributes;for(const s in r){const p=r[s];this.setAttribute(s,p.clone(n))}var i=e.morphAttributes;for(const o in i){const l=[],h=i[o];for(let e=0,t=h.length;e<t;e++)l.push(h[e].clone(n));this.morphAttributes[o]=l}this.morphTargetsRelative=e.morphTargetsRelative;var c=e.groups;for(let e=0,t=c.length;e<t;e++){var a=c[e];this.addGroup(a.start,a.count,a.materialIndex)}const u=e.boundingBox,d=(null!==u&&(this.boundingBox=u.clone()),e.boundingSphere);return null!==d&&(this.boundingSphere=d.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}S.prototype.isBufferGeometry=!0;const Nr=new Re,Or=new Cn,Ur=new En,Fr=new Ae,Br=new Ae,Hr=new Ae,zr=new Ae,Gr=new Ae,Vr=new Ae,kr=new Ae,Wr=new Ae,jr=new Ae,Xr=new ne,qr=new ne,Yr=new ne,Zr=new Ae,Jr=new Ae;class Kr extends M{constructor(e=new S,t=new mr){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(0<n.length){var r=t[n[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){var i=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(r,i){const e=this.geometry;var a=this.material,t=this.matrixWorld;if(void 0!==a&&(null===e.boundingSphere&&e.computeBoundingSphere(),Ur.copy(e.boundingSphere),Ur.applyMatrix4(t),!1!==r.ray.intersectsSphere(Ur)&&(Nr.copy(t).invert(),Or.copy(r.ray).applyMatrix4(Nr),null===e.boundingBox||!1!==Or.intersectsBox(e.boundingBox)))){let n;if(e.isBufferGeometry){const u=e.index;var s=e.attributes.position,o=e.morphAttributes.position,d=e.morphTargetsRelative,p=e.attributes.uv,m=e.attributes.uv2,f=e.groups,l=e.drawRange;if(null!==u)if(Array.isArray(a))for(let e=0,t=f.length;e<t;e++){var h=f[e],g=a[h.materialIndex];for(let e=Math.max(h.start,l.start),t=Math.min(u.count,Math.min(h.start+h.count,l.start+l.count));e<t;e+=3){var v=u.getX(e),y=u.getX(e+1),x=u.getX(e+2);n=Qr(this,g,r,Or,s,o,d,p,m,v,y,x),n&&(n.faceIndex=Math.floor(e/3),n.face.materialIndex=h.materialIndex,i.push(n))}}else for(let e=Math.max(0,l.start),t=Math.min(u.count,l.start+l.count);e<t;e+=3){var _=u.getX(e),M=u.getX(e+1),E=u.getX(e+2);n=Qr(this,a,r,Or,s,o,d,p,m,_,M,E),n&&(n.faceIndex=Math.floor(e/3),i.push(n))}else if(void 0!==s)if(Array.isArray(a))for(let e=0,t=f.length;e<t;e++){var c=f[e],b=a[c.materialIndex];for(let e=Math.max(c.start,l.start),t=Math.min(s.count,Math.min(c.start+c.count,l.start+l.count));e<t;e+=3){var w=e,T=e+1,S=e+2;n=Qr(this,b,r,Or,s,o,d,p,m,w,T,S),n&&(n.faceIndex=Math.floor(e/3),n.face.materialIndex=c.materialIndex,i.push(n))}}else for(let e=Math.max(0,l.start),t=Math.min(s.count,l.start+l.count);e<t;e+=3){var A=e,R=e+1,L=e+2;n=Qr(this,a,r,Or,s,o,d,p,m,A,R,L),n&&(n.faceIndex=Math.floor(e/3),i.push(n))}}else e.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function Qr(e,c,u,d,t,n,p,r,i,a,s,o){Fr.fromBufferAttribute(t,a),Br.fromBufferAttribute(t,s),Hr.fromBufferAttribute(t,o);var m=e.morphTargetInfluences;if(n&&m){kr.set(0,0,0),Wr.set(0,0,0),jr.set(0,0,0);for(let e=0,t=n.length;e<t;e++){var l=m[e],f=n[e];0!==l&&(zr.fromBufferAttribute(f,a),Gr.fromBufferAttribute(f,s),Vr.fromBufferAttribute(f,o),p?(kr.addScaledVector(zr,l),Wr.addScaledVector(Gr,l),jr.addScaledVector(Vr,l)):(kr.addScaledVector(zr.sub(Fr),l),Wr.addScaledVector(Gr.sub(Br),l),jr.addScaledVector(Vr.sub(Hr),l)))}Fr.add(kr),Br.add(Wr),Hr.add(jr)}e.isSkinnedMesh&&(e.boneTransform(a,Fr),e.boneTransform(s,Br),e.boneTransform(o,Hr));const h=function(e,t,n,r,i,a,s,o){let l;return l=t.side===Ce?r.intersectTriangle(s,a,i,!0,o):r.intersectTriangle(i,a,s,t.side!==Pe,o),null===l?null:(Jr.copy(o),Jr.applyMatrix4(e.matrixWorld),(r=n.ray.origin.distanceTo(Jr))<n.near||r>n.far?null:{distance:r,point:Jr.clone(),object:e})}(e,c,u,d,Fr,Br,Hr,Zr);return h&&(r&&(Xr.fromBufferAttribute(r,a),qr.fromBufferAttribute(r,s),Yr.fromBufferAttribute(r,o),h.uv=ur.getUV(Zr,Fr,Br,Hr,Xr,qr,Yr,new ne)),i&&(Xr.fromBufferAttribute(i,a),qr.fromBufferAttribute(i,s),Yr.fromBufferAttribute(i,o),h.uv2=ur.getUV(Zr,Fr,Br,Hr,Xr,qr,Yr,new ne)),t={a:a,b:s,c:o,normal:new Ae,materialIndex:0},ur.getNormal(Fr,Br,Hr,t.normal),h.face=t),h}Kr.prototype.isMesh=!0;class $r extends S{constructor(e=1,t=1,n=1,r=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:a};const C=this,A=(r=Math.floor(r),i=Math.floor(i),a=Math.floor(a),[]),P=[],D=[],R=[];let L=0,I=0;function s(n,r,i,c,u,e,t,d,a,s,p){var m=e/a,f=t/s,g=e/2,v=t/2,y=d/2,o=a+1,x=s+1;let _=0,l=0;const h=new Ae;for(let t=0;t<x;t++){var M=t*f-v;for(let e=0;e<o;e++){var E=e*m-g;h[n]=E*c,h[r]=M*u,h[i]=y,P.push(h.x,h.y,h.z),h[n]=0,h[r]=0,h[i]=0<d?1:-1,D.push(h.x,h.y,h.z),R.push(e/a),R.push(1-t/s),_+=1}}for(let t=0;t<s;t++)for(let e=0;e<a;e++){var b=L+e+o*t,w=L+e+o*(t+1),T=L+(e+1)+o*(t+1),S=L+(e+1)+o*t;A.push(b,w,S),A.push(w,T,S),l+=6}C.addGroup(I,l,p),I+=l,L+=_}s("z","y","x",-1,-1,n,t,e,a,i,0),s("z","y","x",1,-1,n,t,-e,a,i,1),s("x","z","y",1,1,e,n,t,r,a,2),s("x","z","y",1,-1,e,n,-t,r,a,3),s("x","y","z",1,-1,e,t,n,r,i,4),s("x","y","z",-1,-1,e,t,-n,r,i,5),this.setIndex(A),this.setAttribute("position",new V(P,3)),this.setAttribute("normal",new V(D,3)),this.setAttribute("uv",new V(R,2))}static fromJSON(e){return new $r(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function ei(e){const t={};for(const n in e){t[n]={};for(const r in e[n]){const i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}}return t}function ti(t){const n={};for(let e=0;e<t.length;e++){var r=ei(t[e]);for(const i in r)n[i]=r[i]}return n}const ni={clone:ei,merge:ti};class ri extends pr{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ei(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const i=this.uniforms[r].value;i&&i.isTexture?t.uniforms[r]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[r]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[r]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[r]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[r]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[r]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[r]={type:"m4",value:i.toArray()}:t.uniforms[r]={value:i}}0<Object.keys(this.defines).length&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const a in this.extensions)!0===this.extensions[a]&&(n[a]=!0);return 0<Object.keys(n).length&&(t.extensions=n),t}}ri.prototype.isShaderMaterial=!0;class ii extends M{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Re,this.projectionMatrix=new Re,this.projectionMatrixInverse=new Re}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}ii.prototype.isCamera=!0;class ai extends ii{constructor(e=50,t=1,n=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){e=.5*this.getFilmHeight()/e;this.fov=2*wt*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){var e=Math.tan(.5*bt*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*wt*Math.atan(Math.tan(.5*bt*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,r,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=this.near;let t=e*Math.tan(.5*bt*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r;var a,s=this.view,o=(null!==this.view&&this.view.enabled&&(o=s.fullWidth,a=s.fullHeight,i+=s.offsetX*r/o,t-=s.offsetY*n/a,r*=s.width/o,n*=s.height/a),this.filmOffset);0!==o&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}ai.prototype.isPerspectiveCamera=!0;class si extends M{constructor(e,t,n){if(super(),this.type="CubeCamera",!0===n.isWebGLCubeRenderTarget){this.renderTarget=n;const r=new ai(90,1,e,t),i=(r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Ae(1,0,0)),this.add(r),new ai(90,1,e,t)),a=(i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new Ae(-1,0,0)),this.add(i),new ai(90,1,e,t)),s=(a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new Ae(0,1,0)),this.add(a),new ai(90,1,e,t)),o=(s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new Ae(0,-1,0)),this.add(s),new ai(90,1,e,t)),l=(o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new Ae(0,0,1)),this.add(o),new ai(90,1,e,t));l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new Ae(0,0,-1)),this.add(l)}else console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.")}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget;var[r,i,a,s,o,l]=this.children,h=e.xr.enabled,c=e.getRenderTarget(),u=(e.xr.enabled=!1,n.texture.generateMipmaps);n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,i),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=u,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(c),e.xr.enabled=h,n.texture.needsPMREMUpdate=!0}}class oi extends qt{constructor(e,t,n,r,i,a,s,o,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:b,n,r,i,a,s,o,l,h),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}oi.prototype.isCubeTexture=!0;class li extends Jt{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),t=t||{},this.texture=new oi(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:Oe}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=We,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;var n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new $r(5,5,5);const i=new ri({name:"CubemapFromEquirect",uniforms:ei(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Ce,blending:J}),a=(i.uniforms.tEquirect.value=t,new Kr(r,i));n=t.minFilter;t.minFilter===Fe&&(t.minFilter=Oe);const s=new si(1,10,this);return s.update(e,a),t.minFilter=n,a.geometry.dispose(),a.material.dispose(),this}clear(t,n,r,i){var e=t.getRenderTarget();for(let e=0;e<6;e++)t.setRenderTarget(this,e),t.clear(n,r,i);t.setRenderTarget(e)}}li.prototype.isWebGLCubeRenderTarget=!0;const hi=new Ae,ci=new Ae,ui=new It;class di{constructor(e=new Ae(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){n=hi.subVectors(n,t).cross(ci.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){var n=e.delta(hi),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;r=-(e.start.dot(this.normal)+this.constant)/r;return r<0||1<r?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){var t=this.distanceToPoint(e.start),e=this.distanceToPoint(e.end);return t<0&&0<e||e<0&&0<t}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){t=t||ui.getNormalMatrix(e);const n=this.coplanarPoint(hi).applyMatrix4(e);e=this.normal.applyMatrix3(t).normalize();return this.constant=-n.dot(e),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}di.prototype.isPlane=!0;const pi=new En,mi=new Ae;class fi{constructor(e=new di,t=new di,n=new di,r=new di,i=new di,a=new di){this.planes=[e,t,n,r,i,a]}set(e,t,n,r,i,a){const s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(r),s[4].copy(i),s[5].copy(a),this}copy(t){const n=this.planes;for(let e=0;e<6;e++)n[e].copy(t.planes[e]);return this}setFromProjectionMatrix(e){const t=this.planes;var e=e.elements,n=e[0],r=e[1],i=e[2],a=e[3],s=e[4],o=e[5],c=e[6],l=e[7],u=e[8],d=e[9],p=e[10],h=e[11],m=e[12],f=e[13],g=e[14],e=e[15];return t[0].setComponents(a-n,l-s,h-u,e-m).normalize(),t[1].setComponents(a+n,l+s,h+u,e+m).normalize(),t[2].setComponents(a+r,l+o,h+d,e+f).normalize(),t[3].setComponents(a-r,l-o,h-d,e-f).normalize(),t[4].setComponents(a-i,l-c,h-p,e-g).normalize(),t[5].setComponents(a+i,l+c,h+p,e+g).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),pi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(pi)}intersectsSprite(e){return pi.center.set(0,0,0),pi.radius=.7071067811865476,pi.applyMatrix4(e.matrixWorld),this.intersectsSphere(pi)}intersectsSphere(e){const t=this.planes;var n=e.center,r=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<r)return!1;return!0}intersectsBox(t){var n=this.planes;for(let e=0;e<6;e++){const r=n[e];if(mi.x=(0<r.normal.x?t.max:t.min).x,mi.y=(0<r.normal.y?t.max:t.min).y,mi.z=(0<r.normal.z?t.max:t.min).z,r.distanceToPoint(mi)<0)return!1}return!0}containsPoint(t){const n=this.planes;for(let e=0;e<6;e++)if(n[e].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function gi(){let n=null,e=!1,r=null,i=null;function a(e,t){r(e,t),i=n.requestAnimationFrame(a)}return{start:function(){!0!==e&&null!==r&&(i=n.requestAnimationFrame(a),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(e){r=e},setContext:function(e){n=e}}}function vi(o,e){const l=e.isWebGL2,h=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),h.get(e)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);var t=h.get(e);t&&(o.deleteBuffer(t.buffer),h.delete(e))},update:function(e,t){if(e.isGLBufferAttribute)(!(n=h.get(e))||n.version<e.version)&&h.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version});else{e.isInterleavedBufferAttribute&&(e=e.data);const i=h.get(e);if(void 0===i)h.set(e,function(e,t){var n=e.array,r=e.usage,i=o.createBuffer();o.bindBuffer(t,i),o.bufferData(t,n,r),e.onUploadCallback();let a=o.FLOAT;return n instanceof Float32Array?a=o.FLOAT:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?e.isFloat16BufferAttribute?l?a=o.HALF_FLOAT:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):a=o.UNSIGNED_SHORT:n instanceof Int16Array?a=o.SHORT:n instanceof Uint32Array?a=o.UNSIGNED_INT:n instanceof Int32Array?a=o.INT:n instanceof Int8Array?a=o.BYTE:(n instanceof Uint8Array||n instanceof Uint8ClampedArray)&&(a=o.UNSIGNED_BYTE),{buffer:i,type:a,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version}}(e,t));else if(i.version<e.version){{var n=i.buffer;var r=e;const a=r.array,s=r.updateRange;o.bindBuffer(t,n),-1===s.count?o.bufferSubData(t,0,a):(l?o.bufferSubData(t,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):o.bufferSubData(t,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1)}i.version=e.version}}}}}class yi extends S{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};var c=e/2,u=t/2,i=Math.floor(n),a=Math.floor(r),s=i+1,d=a+1,p=e/i,m=t/a;const o=[],l=[],f=[],h=[];for(let t=0;t<d;t++){var g=t*m-u;for(let e=0;e<s;e++){var v=e*p-c;l.push(v,-g,0),f.push(0,0,1),h.push(e/i),h.push(1-t/a)}}for(let t=0;t<a;t++)for(let e=0;e<i;e++){var y=e+s*t,x=e+s*(t+1),_=e+1+s*(t+1),M=e+1+s*t;o.push(y,x,M),o.push(x,_,M)}this.setIndex(o),this.setAttribute("position",new V(l,3)),this.setAttribute("normal",new V(f,3)),this.setAttribute("uv",new V(h,2))}static fromJSON(e){return new yi(e.width,e.height,e.widthSegments,e.heightSegments)}}const E={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\treturn texture2D( envMap, uv ).rgb;\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec;\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\t#else\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t\t#endif\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tlightMapIrradiance *= PI;\n\t#endif\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(\t\t0, 1,\t\t0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform vec2 morphTargetsTextureSize;\n\t\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\n\t\t\tfloat texelIndex = float( vertexIndex * stride + offset );\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n\t\t\treturn texture( morphTargetsTexture, morphUV ).xyz;\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\t#ifndef USE_MORPHNORMALS\n\t\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\n\t\t\t#else\n\t\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\n\t\t\t#endif\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(\t1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,\t1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,\t1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},N={common:{diffuse:{value:new _(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new It},uv2Transform:{value:new It},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ne(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new _(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new _(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new It}},sprite:{diffuse:{value:new _(16777215)},opacity:{value:1},center:{value:new ne(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new It}}},xi={basic:{uniforms:ti([N.common,N.specularmap,N.envmap,N.aomap,N.lightmap,N.fog]),vertexShader:E.meshbasic_vert,fragmentShader:E.meshbasic_frag},lambert:{uniforms:ti([N.common,N.specularmap,N.envmap,N.aomap,N.lightmap,N.emissivemap,N.fog,N.lights,{emissive:{value:new _(0)}}]),vertexShader:E.meshlambert_vert,fragmentShader:E.meshlambert_frag},phong:{uniforms:ti([N.common,N.specularmap,N.envmap,N.aomap,N.lightmap,N.emissivemap,N.bumpmap,N.normalmap,N.displacementmap,N.fog,N.lights,{emissive:{value:new _(0)},specular:{value:new _(1118481)},shininess:{value:30}}]),vertexShader:E.meshphong_vert,fragmentShader:E.meshphong_frag},standard:{uniforms:ti([N.common,N.envmap,N.aomap,N.lightmap,N.emissivemap,N.bumpmap,N.normalmap,N.displacementmap,N.roughnessmap,N.metalnessmap,N.fog,N.lights,{emissive:{value:new _(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:E.meshphysical_vert,fragmentShader:E.meshphysical_frag},toon:{uniforms:ti([N.common,N.aomap,N.lightmap,N.emissivemap,N.bumpmap,N.normalmap,N.displacementmap,N.gradientmap,N.fog,N.lights,{emissive:{value:new _(0)}}]),vertexShader:E.meshtoon_vert,fragmentShader:E.meshtoon_frag},matcap:{uniforms:ti([N.common,N.bumpmap,N.normalmap,N.displacementmap,N.fog,{matcap:{value:null}}]),vertexShader:E.meshmatcap_vert,fragmentShader:E.meshmatcap_frag},points:{uniforms:ti([N.points,N.fog]),vertexShader:E.points_vert,fragmentShader:E.points_frag},dashed:{uniforms:ti([N.common,N.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:E.linedashed_vert,fragmentShader:E.linedashed_frag},depth:{uniforms:ti([N.common,N.displacementmap]),vertexShader:E.depth_vert,fragmentShader:E.depth_frag},normal:{uniforms:ti([N.common,N.bumpmap,N.normalmap,N.displacementmap,{opacity:{value:1}}]),vertexShader:E.meshnormal_vert,fragmentShader:E.meshnormal_frag},sprite:{uniforms:ti([N.sprite,N.fog]),vertexShader:E.sprite_vert,fragmentShader:E.sprite_frag},background:{uniforms:{uvTransform:{value:new It},t2D:{value:null}},vertexShader:E.background_vert,fragmentShader:E.background_frag},cube:{uniforms:ti([N.envmap,{opacity:{value:1}}]),vertexShader:E.cube_vert,fragmentShader:E.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:E.equirect_vert,fragmentShader:E.equirect_frag},distanceRGBA:{uniforms:ti([N.common,N.displacementmap,{referencePosition:{value:new Ae},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:E.distanceRGBA_vert,fragmentShader:E.distanceRGBA_frag},shadow:{uniforms:ti([N.lights,N.fog,{color:{value:new _(0)},opacity:{value:1}}]),vertexShader:E.shadow_vert,fragmentShader:E.shadow_frag}};function _i(a,f,n,s,e,r){const o=new _(0);let l=!0===e?0:1,h,c,u=null,d=0,p=null;function m(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,r)}return{getClearColor:function(){return o},setClearColor:function(e,t=1){o.set(e),l=t,m(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(e){l=e,m(o,l)},render:function(e,t){let n=!1,r=!0===t.isScene?t.background:null;r&&r.isTexture&&(r=f.get(r));const i=a.xr;(t=i.getSession&&i.getSession())&&"additive"===t.environmentBlendMode&&(r=null),null===r?m(o,l):r&&r.isColor&&(m(r,1),n=!0),(a.autoClear||n)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),r&&(r.isCubeTexture||r.mapping===C)?(void 0===c&&(c=new Kr(new $r(1,1,1),new ri({name:"BackgroundCubeMaterial",uniforms:ei(xi.cube.uniforms),vertexShader:xi.cube.vertexShader,fragmentShader:xi.cube.fragmentShader,side:Ce,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(c)),c.material.uniforms.envMap.value=r,c.material.uniforms.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,u===r&&d===r.version&&p===a.toneMapping||(c.material.needsUpdate=!0,u=r,d=r.version,p=a.toneMapping),e.unshift(c,c.geometry,c.material,0,0,null)):r&&r.isTexture&&(void 0===h&&(h=new Kr(new yi(2,2),new ri({name:"BackgroundMaterial",uniforms:ei(xi.background.uniforms),vertexShader:xi.background.vertexShader,fragmentShader:xi.background.fragmentShader,side:Le,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(h)),h.material.uniforms.t2D.value=r,!0===r.matrixAutoUpdate&&r.updateMatrix(),h.material.uniforms.uvTransform.value.copy(r.matrix),u===r&&d===r.version&&p===a.toneMapping||(h.material.needsUpdate=!0,u=r,d=r.version,p=a.toneMapping),e.unshift(h,h.geometry,h.material,0,0,null))}}}function Mi(x,_,M,E){const i=x.getParameter(x.MAX_VERTEX_ATTRIBS),d=E.isWebGL2?null:_.get("OES_vertex_array_object"),f=E.isWebGL2||null!==d,p={},e=v(null);let m=e;function g(e){return E.isWebGL2?x.bindVertexArray(e):d.bindVertexArrayOES(e)}function a(e){return E.isWebGL2?x.deleteVertexArray(e):d.deleteVertexArrayOES(e)}function v(e){const t=[],n=[],r=[];for(let e=0;e<i;e++)t[e]=0,n[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function w(){const n=m.newAttributes;for(let e=0,t=n.length;e<t;e++)n[e]=0}function b(e){T(e,0)}function T(e,t){const n=m.newAttributes,r=m.enabledAttributes,i=m.attributeDivisors;if(n[e]=1,0===r[e]&&(x.enableVertexAttribArray(e),r[e]=1),i[e]!==t){const a=E.isWebGL2?x:_.get("ANGLE_instanced_arrays");a[E.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](e,t),i[e]=t}}function S(){var n=m.newAttributes;const r=m.enabledAttributes;for(let e=0,t=r.length;e<t;e++)r[e]!==n[e]&&(x.disableVertexAttribArray(e),r[e]=0)}function A(e,t,n,r,i,a){!0!==E.isWebGL2||n!==x.INT&&n!==x.UNSIGNED_INT?x.vertexAttribPointer(e,t,n,r,i,a):x.vertexAttribIPointer(e,t,n,i,a)}function s(){t(),m!==e&&(m=e,g(m.object))}function t(){e.geometry=null,e.program=null,e.wireframe=!1}return{setup:function(c,e,t,n,r){let i=!1;if(f){var a=function(e,t,n){n=!0===n.wireframe;let r=p[e.id];void 0===r&&(r={},p[e.id]=r);let i=r[t.id];void 0===i&&(i={},r[t.id]=i);let a=i[n];void 0===a&&(a=v(E.isWebGL2?x.createVertexArray():d.createVertexArrayOES()),i[n]=a);return a}(n,t,e);if(m!==a&&(m=a,g(m.object)),i=function(e,t){var n=m.attributes,r=e.attributes;let i=0;for(const o in r){var a=n[o],s=r[o];if(void 0===a)return!0;if(a.attribute!==s)return!0;if(a.data!==s.data)return!0;i++}return m.attributesNum!==i||m.index!==t}(n,r),i){a=r;const s={},o=n.attributes;let e=0;for(const l in o){var u=o[l];const h={};(h.attribute=u).data&&(h.data=u.data),s[l]=h,e++}m.attributes=s,m.attributesNum=e,m.index=a}}else{a=!0===e.wireframe;m.geometry===n.id&&m.program===t.id&&m.wireframe===a||(m.geometry=n.id,m.program=t.id,m.wireframe=a,i=!0)}!0===c.isInstancedMesh&&(i=!0),null!==r&&M.update(r,x.ELEMENT_ARRAY_BUFFER),i&&(function(e,c,u,n){if(!1===E.isWebGL2&&(e.isInstancedMesh||n.isInstancedBufferGeometry)&&null===_.get("ANGLE_instanced_arrays"))return;w();var d=n.attributes,t=u.getAttributes(),p=c.defaultAttributeValues;for(const h in t){var r=t[h];if(0<=r.location){let t=d[h];if(void 0===t&&("instanceMatrix"===h&&e.instanceMatrix&&(t=e.instanceMatrix),"instanceColor"===h&&e.instanceColor&&(t=e.instanceColor)),void 0!==t){var m=t.normalized,i=t.itemSize,a=M.get(t);if(void 0!==a){var f=a.buffer,g=a.type,s=a.bytesPerElement;if(t.isInterleavedBufferAttribute){var o=t.data,v=o.stride,y=t.offset;if(o&&o.isInstancedInterleavedBuffer){for(let e=0;e<r.locationSize;e++)T(r.location+e,o.meshPerAttribute);!0!==e.isInstancedMesh&&void 0===n._maxInstanceCount&&(n._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let e=0;e<r.locationSize;e++)b(r.location+e);x.bindBuffer(x.ARRAY_BUFFER,f);for(let e=0;e<r.locationSize;e++)A(r.location+e,i/r.locationSize,g,m,v*s,(y+i/r.locationSize*e)*s)}else{if(t.isInstancedBufferAttribute){for(let e=0;e<r.locationSize;e++)T(r.location+e,t.meshPerAttribute);!0!==e.isInstancedMesh&&void 0===n._maxInstanceCount&&(n._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let e=0;e<r.locationSize;e++)b(r.location+e);x.bindBuffer(x.ARRAY_BUFFER,f);for(let e=0;e<r.locationSize;e++)A(r.location+e,i/r.locationSize,g,m,i*s,i/r.locationSize*e*s)}}}else if(void 0!==p){var l=p[h];if(void 0!==l)switch(l.length){case 2:x.vertexAttrib2fv(r.location,l);break;case 3:x.vertexAttrib3fv(r.location,l);break;case 4:x.vertexAttrib4fv(r.location,l);break;default:x.vertexAttrib1fv(r.location,l)}}}}S()}(c,e,t,n),null!==r&&x.bindBuffer(x.ELEMENT_ARRAY_BUFFER,M.get(r).buffer))},reset:s,resetDefaultState:t,dispose:function(){s();for(const e in p){const t=p[e];for(const n in t){const r=t[n];for(const i in r)a(r[i].object),delete r[i];delete t[n]}delete p[e]}},releaseStatesOfGeometry:function(e){if(void 0!==p[e.id]){const t=p[e.id];for(const n in t){const r=t[n];for(const i in r)a(r[i].object),delete r[i];delete t[n]}delete p[e.id]}},releaseStatesOfProgram:function(e){for(const t in p){const n=p[t];if(void 0!==n[e.id]){const r=n[e.id];for(const i in r)a(r[i].object),delete r[i];delete n[e.id]}}},initAttributes:w,enableAttribute:b,disableUnusedAttributes:S}}function Ei(a,s,o,e){const l=e.isWebGL2;let h;this.setMode=function(e){h=e},this.render=function(e,t){a.drawArrays(h,e,t),o.update(t,h,1)},this.renderInstances=function(n,r,i){if(0!==i){let e,t;if(l)e=a,t="drawArraysInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawArraysInstancedANGLE",null===e)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](h,n,r,i),o.update(r,h,i)}}}function bi(t,n,e){let r;function i(e){if("highp"===e){if(0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision)return"highp";e="mediump"}return"mediump"===e&&0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision?"mediump":"lowp"}var a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==e.precision?e.precision:"highp";var o=i(s),o=(o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o),a||n.has("WEBGL_draw_buffers")),e=!0===e.logarithmicDepthBuffer,c=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),l=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_TEXTURE_SIZE),d=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),p=t.getParameter(t.MAX_VERTEX_ATTRIBS),m=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),f=t.getParameter(t.MAX_VARYING_VECTORS),g=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),h=0<l,v=a||n.has("OES_texture_float"),y=h&&v,x=a?t.getParameter(t.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:o,getMaxAnisotropy:function(){return void 0!==r||(r=!0===n.has("EXT_texture_filter_anisotropic")?(e=n.get("EXT_texture_filter_anisotropic"),t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT)):0),r;var e},getMaxPrecision:i,precision:s,logarithmicDepthBuffer:e,maxTextures:c,maxVertexTextures:l,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:m,maxVaryings:f,maxFragmentUniforms:g,vertexTextures:h,floatFragmentTextures:v,floatVertexTextures:y,maxSamples:x}}function wi(v){const o=this;let l=null,h=0,c=!1,u=!1;const d=new di,p=new It,m={value:null,needsUpdate:!1};function f(){m.value!==l&&(m.value=l,m.needsUpdate=0<h),o.numPlanes=h,o.numIntersection=0}function g(n,e,r,t){var i=null!==n?n.length:0;let a=null;if(0!==i){if(a=m.value,!0!==t||null===a){var t=r+4*i,s=e.matrixWorldInverse;p.getNormalMatrix(s),(null===a||a.length<t)&&(a=new Float32Array(t));for(let e=0,t=r;e!==i;++e,t+=4)d.copy(n[e]).applyMatrix4(s,p),d.normal.toArray(a,t),a[t+3]=d.constant}m.value=a,m.needsUpdate=!0}return o.numPlanes=i,o.numIntersection=0,a}this.uniform=m,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,n){var r=0!==e.length||t||0!==h||c;return c=t,l=g(e,n,0),h=e.length,r},this.beginShadows=function(){u=!0,g(null)},this.endShadows=function(){u=!1,f()},this.setState=function(e,n,r){var i=e.clippingPlanes,a=e.clipIntersection,t=e.clipShadows;const s=v.get(e);if(!c||null===i||0===i.length||u&&!t)u?g(null):f();else{var e=u?0:h,o=4*e;let t=s.clippingState||null;m.value=t,t=g(i,n,o,r);for(let e=0;e!==o;++e)t[e]=l[e];s.clippingState=t,this.numIntersection=a?this.numPlanes:0,this.numPlanes+=e}}}function Ti(r){let i=new WeakMap;function a(e,t){return t===l?e.mapping=b:t===h&&(e.mapping=w),e}function s(e){const t=e.target,n=(t.removeEventListener("dispose",s),i.get(t));void 0!==n&&(i.delete(t),n.dispose())}return{get:function(e){if(e&&e.isTexture&&!1===e.isRenderTargetTexture){var t=e.mapping;if(t===l||t===h){if(i.has(e))return a(i.get(e).texture,e.mapping);t=e.image;if(t&&0<t.height){const n=new li(t.height/2);return n.fromEquirectangularTexture(r,e),i.set(e,n),e.addEventListener("dispose",s),a(n.texture,e.mapping)}return null}}return e},dispose:function(){i=new WeakMap}}}xi.physical={uniforms:ti([xi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ne(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new _(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ne},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new _(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new _(1,1,1)},specularColorMap:{value:null}}]),vertexShader:E.meshphysical_vert,fragmentShader:E.meshphysical_frag};class Si extends ii{constructor(e=-1,t=1,n=1,r=-1,i=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-e,a=n+e,s=r+t,o=r-t;null!==this.view&&this.view.enabled&&(n=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom,i+=n*this.view.offsetX,a=i+n*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height),this.projectionMatrix.makeOrthographic(i,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}Si.prototype.isOrthographicCamera=!0;class Ai extends ri{constructor(e){super(e),this.type="RawShaderMaterial"}}Ai.prototype.isRawShaderMaterial=!0;const Ri=Math.pow(2,8),Li=[.125,.215,.35,.446,.526,.582],Ci=5+Li.length,Pi=new Si,{_lodPlanes:Di,_sizeLods:Ii,_sigmas:Ni}=Gi(),Oi=new _;let Ui=null;var Fi=(1+Math.sqrt(5))/2,Bi=1/Fi;const Hi=[new Ae(1,1,1),new Ae(-1,1,1),new Ae(1,1,-1),new Ae(-1,1,-1),new Ae(0,Fi,Bi),new Ae(0,Fi,-Bi),new Ae(Bi,0,Fi),new Ae(-Bi,0,Fi),new Ae(Fi,Bi,0),new Ae(-Fi,Bi,0)];class zi{constructor(e){var t,n;this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=(e=20,t=new Float32Array(e),n=new Ae(0,1,0),e=new Ai({name:"SphericalGaussianBlur",defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:Xi(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:J,depthTest:!1,depthWrite:!1})),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){Ui=this._renderer.getRenderTarget();var i=this._allocateTargets();return this._sceneToCubeUV(e,n,r,i),0<t&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=ji(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=Wi(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<Di.length;e++)Di[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Ui),e.scissorTest=!1,ki(e,0,0,e.width,e.height)}_fromTexture(e,t){Ui=this._renderer.getRenderTarget();t=t||this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){var t={magFilter:Oe,minFilter:Oe,generateMipmaps:!1,type:Ve,format:We,encoding:pt,depthBuffer:!1};const n=Vi(t);return n.depthBuffer=!e,null===this._pingPongRenderTarget&&(this._pingPongRenderTarget=Vi(t)),n}_compileMaterial(e){e=new Kr(Di[0],e);this._renderer.compile(e,Pi)}_sceneToCubeUV(t,e,n,c){const r=new ai(90,1,e,n);var i=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1];const s=this._renderer;e=s.autoClear,n=s.toneMapping;s.getClearColor(Oi),s.toneMapping=De,s.autoClear=!1;const o=new mr({name:"PMREM.Background",side:Ce,depthWrite:!1,depthTest:!1}),l=new Kr(new $r,o);let u=!1;var h=t.background;h?h.isColor&&(o.color.copy(h),t.background=null,u=!0):(o.color.copy(Oi),u=!0);for(let e=0;e<6;e++){var d=e%3;0==d?(r.up.set(0,i[e],0),r.lookAt(a[e],0,0)):1==d?(r.up.set(0,0,i[e]),r.lookAt(0,a[e],0)):(r.up.set(0,i[e],0),r.lookAt(0,0,a[e])),ki(c,d*Ri,2<e?Ri:0,Ri,Ri),s.setRenderTarget(c),u&&s.render(l,r),s.render(t,r)}l.geometry.dispose(),l.material.dispose(),s.toneMapping=n,s.autoClear=e,t.background=h}_textureToCubeUV(e,t){const n=this._renderer;var r=e.mapping===b||e.mapping===w,i=(r?(null===this._cubemapShader&&(this._cubemapShader=ji()),this._cubemapShader.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectShader&&(this._equirectShader=Wi()),r?this._cubemapShader:this._equirectShader),a=new Kr(Di[0],i);const s=i.uniforms;s.envMap.value=e,r||s.texelSize.value.set(1/e.image.width,1/e.image.height),ki(t,0,0,3*Ri,2*Ri),n.setRenderTarget(t),n.render(a,Pi)}_applyPMREM(t){const e=this._renderer;var n=e.autoClear;e.autoClear=!1;for(let e=1;e<Ci;e++){var r=Math.sqrt(Ni[e]*Ni[e]-Ni[e-1]*Ni[e-1]),i=Hi[(e-1)%Hi.length];this._blur(t,e-1,e,r,i)}e.autoClear=n}_blur(e,t,n,r,i){var a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,r,"latitudinal",i),this._halfBlur(a,e,n,n,r,"longitudinal",i)}_halfBlur(e,c,u,t,n,r,d){const p=this._renderer;var i=this._blurMaterial,m=("latitudinal"!==r&&"longitudinal"!==r&&console.error("blur direction must be either latitudinal or longitudinal!"),new Kr(Di[t],i));const a=i.uniforms;var i=Ii[u]-1,i=isFinite(n)?Math.PI/(2*i):2*Math.PI/39,f=n/i,s=isFinite(n)?1+Math.floor(3*f):20;20<s&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${s} samples when the maximum is set to 20`);const o=[];let l=0;for(let e=0;e<20;++e){const h=e/f;var g=Math.exp(-h*h/2);o.push(g),0===e?l+=g:e<s&&(l+=2*g)}for(let e=0;e<o.length;e++)o[e]=o[e]/l;a.envMap.value=e.texture,a.samples.value=s,a.weights.value=o,a.latitudinal.value="latitudinal"===r,d&&(a.poleAxis.value=d),a.dTheta.value=i,a.mipInt.value=8-u;n=Ii[t];const h=3*Math.max(0,Ri-2*n);e=(0===t?0:2*Ri)+2*n*(4<t?t-8+4:0);ki(c,h,e,3*n,2*n),p.setRenderTarget(c),p.render(m,Pi)}}function Gi(){const n=[],d=[],p=[];let r=8;for(let t=0;t<Ci;t++){var i=Math.pow(2,r);d.push(i);let e=1/i;4<t?e=Li[t-8+4-1]:0===t&&(e=0),p.push(e);var i=1/(i-1),a=-i/2,i=1+i/2,m=[a,a,i,a,i,i,a,a,i,i,a,i];const l=new Float32Array(108),h=new Float32Array(72),c=new Float32Array(36);for(let e=0;e<6;e++){var s=e%3*2/3-1,o=2<e?0:-1,s=(l.set([s,o,0,s+2/3,o,0,s+2/3,1+o,0,s,o,0,s+2/3,1+o,0,s,1+o,0],18*e),h.set(m,12*e),[e,e,e,e,e,e]);c.set(s,6*e)}const u=new S;u.setAttribute("position",new vr(l,3)),u.setAttribute("uv",new vr(h,2)),u.setAttribute("faceIndex",new vr(c,1)),n.push(u),4<r&&r--}return{_lodPlanes:n,_sizeLods:d,_sigmas:p}}function Vi(e){const t=new Jt(3*Ri,3*Ri,e);return t.texture.mapping=C,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function ki(e,t,n,r,i){e.viewport.set(t,n,r,i),e.scissor.set(t,n,r,i)}function Wi(){var e=new ne(1,1);return new Ai({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e}},vertexShader:Xi(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = texture2D ( envMap, uv ).rgb;
				uv.x += texelSize.x;
				vec3 tr = texture2D ( envMap, uv ).rgb;
				uv.y += texelSize.y;
				vec3 br = texture2D ( envMap, uv ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = texture2D ( envMap, uv ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

			}
		`,blending:J,depthTest:!1,depthWrite:!1})}function ji(){return new Ai({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Xi(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:J,depthTest:!1,depthWrite:!1})}function Xi(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function qi(i){let a=new WeakMap,s=null;function o(e){const t=e.target,n=(t.removeEventListener("dispose",o),a.get(t));void 0!==n&&(a.delete(t),n.dispose())}return{get:function(t){if(t&&t.isTexture){var e,n=t.mapping,r=n===l||n===h,n=n===b||n===w;if(r||n){if(t.isRenderTargetTexture&&!0===t.needsPMREMUpdate){t.needsPMREMUpdate=!1;let e=a.get(t);return null===s&&(s=new zi(i)),e=r?s.fromEquirectangular(t,e):s.fromCubemap(t,e),a.set(t,e),e.texture}return a.has(t)?a.get(t).texture:(e=t.image,r&&e&&0<e.height||n&&e&&function(t){let n=0;for(let e=0;e<6;e++)void 0!==t[e]&&n++;return 6===n}(e)?(null===s&&(s=new zi(i)),n=r?s.fromEquirectangular(t):s.fromCubemap(t),a.set(t,n),t.addEventListener("dispose",o),n.texture):null)}}return t},dispose:function(){a=new WeakMap,null!==s&&(s.dispose(),s=null)}}}function Yi(n){const r={};function i(e){if(void 0!==r[e])return r[e];let t;switch(e){case"WEBGL_depth_texture":t=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":t=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":t=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":t=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:t=n.getExtension(e)}return r[e]=t,t}return{has:function(e){return null!==i(e)},init:function(e){e.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture")},get:function(e){var t=i(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function Zi(s,p,r,i){const a={},m=new WeakMap;function o(e){const t=e.target;null!==t.index&&p.remove(t.index);for(const n in t.attributes)p.remove(t.attributes[n]);t.removeEventListener("dispose",o),delete a[t.id];e=m.get(t);e&&(p.remove(e),m.delete(t)),i.releaseStatesOfGeometry(t),!0===t.isInstancedBufferGeometry&&delete t._maxInstanceCount,r.memory.geometries--}function l(e){const n=[];var r=e.index,t=e.attributes.position;let i=0;if(null!==r){var a=r.array;i=r.version;for(let e=0,t=a.length;e<t;e+=3){var s=a[e+0],o=a[e+1],l=a[e+2];n.push(s,o,o,l,l,s)}}else{r=t.array;i=t.version;for(let e=0,t=r.length/3-1;e<t;e+=3){var h=e+0,c=e+1,u=e+2;n.push(h,c,c,u,u,h)}}const d=new(Nt(n)?wr:Er)(n,1);d.version=i;t=m.get(e);t&&p.remove(t),m.set(e,d)}return{get:function(e,t){return!0===a[t.id]||(t.addEventListener("dispose",o),a[t.id]=!0,r.memory.geometries++),t},update:function(e){var t=e.attributes;for(const i in t)p.update(t[i],s.ARRAY_BUFFER);var n=e.morphAttributes;for(const a in n){var r=n[a];for(let e=0,t=r.length;e<t;e++)p.update(r[e],s.ARRAY_BUFFER)}},getWireframeAttribute:function(e){var t,n=m.get(e);return(!n||null!==(t=e.index)&&n.version<t.version)&&l(e),m.get(e)}}}function Ji(a,s,o,e){const l=e.isWebGL2;let h;let c,u;this.setMode=function(e){h=e},this.setIndex=function(e){c=e.type,u=e.bytesPerElement},this.render=function(e,t){a.drawElements(h,t,c,e*u),o.update(t,h,1)},this.renderInstances=function(n,r,i){if(0!==i){let e,t;if(l)e=a,t="drawElementsInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawElementsInstancedANGLE",null===e)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](h,r,c,n*u,i),o.update(r,h,i)}}}function Ki(r){const i={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:i,programs:null,autoReset:!0,reset:function(){i.frame++,i.calls=0,i.triangles=0,i.points=0,i.lines=0},update:function(e,t,n){switch(i.calls++,t){case r.TRIANGLES:i.triangles+=n*(e/3);break;case r.LINES:i.lines+=n*(e/2);break;case r.LINE_STRIP:i.lines+=n*(e-1);break;case r.LINE_LOOP:i.lines+=n*e;break;case r.POINTS:i.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",t)}}}}class Qi extends qt{constructor(e=null,t=1,n=1,r=1){super(null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=Ne,this.minFilter=Ne,this.wrapR=Ie,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}function $i(e,t){return e[0]-t[0]}function ea(e,t){return Math.abs(t[1])-Math.abs(e[1])}function ta(e,t){let n=1;t=(t.isInterleavedBufferAttribute?t.data:t).array;t instanceof Int8Array?n=127:t instanceof Int16Array?n=32767:t instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",t),e.divideScalar(n)}function na(w,T,n){const S={},A=new Float32Array(8),R=new WeakMap,L=new Ae,C=[];for(let e=0;e<8;e++)C[e]=[e,0];return{update:function(r,i,e,a){var s=r.morphTargetInfluences;if(!0===T.isWebGL2){var o=i.morphAttributes.position.length;let e=R.get(i);if(void 0===e||e.count!==o){void 0!==e&&e.texture.dispose();var p=void 0!==i.morphAttributes.normal,m=i.morphAttributes.position,f=i.morphAttributes.normal||[],r=!0==p?2:1;let t=i.attributes.position.count*r,n=1;t>T.maxTextureSize&&(n=Math.ceil(t/T.maxTextureSize),t=T.maxTextureSize);const u=new Float32Array(t*n*4*o),d=new Qi(u,t,n,o);d.format=We,d.type=Ge,d.needsUpdate=!0;var g=4*r;for(let e=0;e<o;e++){var v=m[e],y=f[e],l=t*n*4*e;for(let e=0;e<v.count;e++){L.fromBufferAttribute(v,e),!0===v.normalized&&ta(L,v);var h=e*g;u[l+h]=L.x,u[l+h+1]=L.y,u[l+h+2]=L.z,!(u[l+h+3]=0)==p&&(L.fromBufferAttribute(y,e),!0===y.normalized&&ta(L,y),u[l+h+4]=L.x,u[l+h+5]=L.y,u[l+h+6]=L.z,u[l+h+7]=0)}}e={count:o,texture:d,size:new ne(t,n)},R.set(i,e),i.addEventListener("dispose",function e(){d.dispose(),R.delete(i),i.removeEventListener("dispose",e)})}let t=0;for(let e=0;e<s.length;e++)t+=s[e];r=i.morphTargetsRelative?1:1-t;a.getUniforms().setValue(w,"morphTargetBaseInfluence",r),a.getUniforms().setValue(w,"morphTargetInfluences",s),a.getUniforms().setValue(w,"morphTargetsTexture",e.texture,n),a.getUniforms().setValue(w,"morphTargetsTextureSize",e.size)}else{var x=void 0===s?0:s.length;let t=S[i.id];if(void 0===t||t.length!==x){t=[];for(let e=0;e<x;e++)t[e]=[e,0];S[i.id]=t}for(let e=0;e<x;e++){const b=t[e];b[0]=e,b[1]=s[e]}t.sort(ea);for(let e=0;e<8;e++)e<x&&t[e][1]?(C[e][0]=t[e][0],C[e][1]=t[e][1]):(C[e][0]=Number.MAX_SAFE_INTEGER,C[e][1]=0);C.sort($i);var _=i.morphAttributes.position,M=i.morphAttributes.normal;let n=0;for(let e=0;e<8;e++){var c=C[e],E=c[0],c=c[1];E!==Number.MAX_SAFE_INTEGER&&c?(_&&i.getAttribute("morphTarget"+e)!==_[E]&&i.setAttribute("morphTarget"+e,_[E]),M&&i.getAttribute("morphNormal"+e)!==M[E]&&i.setAttribute("morphNormal"+e,M[E]),A[e]=c,n+=c):(_&&!0===i.hasAttribute("morphTarget"+e)&&i.deleteAttribute("morphTarget"+e),M&&!0===i.hasAttribute("morphNormal"+e)&&i.deleteAttribute("morphNormal"+e),A[e]=0)}r=i.morphTargetsRelative?1:1-n;a.getUniforms().setValue(w,"morphTargetBaseInfluence",r),a.getUniforms().setValue(w,"morphTargetInfluences",A)}}}}function ra(r,i,a,s){let o=new WeakMap;function l(e){const t=e.target;t.removeEventListener("dispose",l),a.remove(t.instanceMatrix),null!==t.instanceColor&&a.remove(t.instanceColor)}return{update:function(e){var t=s.render.frame,n=e.geometry,n=i.get(e,n);return o.get(n)!==t&&(i.update(n),o.set(n,t)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",l)&&e.addEventListener("dispose",l),a.update(e.instanceMatrix,r.ARRAY_BUFFER),null!==e.instanceColor&&a.update(e.instanceColor,r.ARRAY_BUFFER)),n},dispose:function(){o=new WeakMap}}}Qi.prototype.isDataTexture2DArray=!0;class ia extends qt{constructor(e=null,t=1,n=1,r=1){super(null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=Ne,this.minFilter=Ne,this.wrapR=Ie,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}ia.prototype.isDataTexture3D=!0;const aa=new qt,sa=new Qi,oa=new ia,la=new oi,ha=[],ca=[],ua=new Float32Array(16),da=new Float32Array(9),pa=new Float32Array(4);function ma(n,r,i){const e=n[0];if(e<=0||0<e)return n;var t=r*i;let a=ha[t];if(void 0===a&&(a=new Float32Array(t),ha[t]=a),0!==r){e.toArray(a,0);for(let e=1,t=0;e!==r;++e)t+=i,n[e].toArray(a,t)}return a}function fa(n,r){if(n.length===r.length){for(let e=0,t=n.length;e<t;e++)if(n[e]!==r[e])return;return 1}}function ga(n,r){for(let e=0,t=r.length;e<t;e++)n[e]=r[e]}function va(t,n){let r=ca[n];void 0===r&&(r=new Int32Array(n),ca[n]=r);for(let e=0;e!==n;++e)r[e]=t.allocateTextureUnit();return r}function ya(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function xa(e,t){const n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y):fa(n,t)||(e.uniform2fv(this.addr,t),ga(n,t))}function _a(e,t){const n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z):void 0!==t.r?n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b):fa(n,t)||(e.uniform3fv(this.addr,t),ga(n,t))}function Ma(e,t){const n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w):fa(n,t)||(e.uniform4fv(this.addr,t),ga(n,t))}function Ea(e,t){var n=this.cache,r=t.elements;void 0===r?fa(n,t)||(e.uniformMatrix2fv(this.addr,!1,t),ga(n,t)):fa(n,r)||(pa.set(r),e.uniformMatrix2fv(this.addr,!1,pa),ga(n,r))}function ba(e,t){var n=this.cache,r=t.elements;void 0===r?fa(n,t)||(e.uniformMatrix3fv(this.addr,!1,t),ga(n,t)):fa(n,r)||(da.set(r),e.uniformMatrix3fv(this.addr,!1,da),ga(n,r))}function wa(e,t){var n=this.cache,r=t.elements;void 0===r?fa(n,t)||(e.uniformMatrix4fv(this.addr,!1,t),ga(n,t)):fa(n,r)||(ua.set(r),e.uniformMatrix4fv(this.addr,!1,ua),ga(n,r))}function Ta(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function Sa(e,t){var n=this.cache;fa(n,t)||(e.uniform2iv(this.addr,t),ga(n,t))}function Aa(e,t){var n=this.cache;fa(n,t)||(e.uniform3iv(this.addr,t),ga(n,t))}function Ra(e,t){var n=this.cache;fa(n,t)||(e.uniform4iv(this.addr,t),ga(n,t))}function La(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Ca(e,t){var n=this.cache;fa(n,t)||(e.uniform2uiv(this.addr,t),ga(n,t))}function Pa(e,t){var n=this.cache;fa(n,t)||(e.uniform3uiv(this.addr,t),ga(n,t))}function Da(e,t){var n=this.cache;fa(n,t)||(e.uniform4uiv(this.addr,t),ga(n,t))}function Ia(e,t,n){const r=this.cache;var i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTexture2D(t||aa,i)}function Na(e,t,n){const r=this.cache;var i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(t||oa,i)}function Oa(e,t,n){const r=this.cache;var i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTextureCube(t||la,i)}function Ua(e,t,n){const r=this.cache;var i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(t||sa,i)}function Fa(e,t){e.uniform1fv(this.addr,t)}function Ba(e,t){t=ma(t,this.size,2);e.uniform2fv(this.addr,t)}function Ha(e,t){t=ma(t,this.size,3);e.uniform3fv(this.addr,t)}function za(e,t){t=ma(t,this.size,4);e.uniform4fv(this.addr,t)}function Ga(e,t){t=ma(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,t)}function Va(e,t){t=ma(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,t)}function ka(e,t){t=ma(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,t)}function Wa(e,t){e.uniform1iv(this.addr,t)}function ja(e,t){e.uniform2iv(this.addr,t)}function Xa(e,t){e.uniform3iv(this.addr,t)}function qa(e,t){e.uniform4iv(this.addr,t)}function Ya(e,t){e.uniform1uiv(this.addr,t)}function Za(e,t){e.uniform2uiv(this.addr,t)}function Ja(e,t){e.uniform3uiv(this.addr,t)}function Ka(e,t){e.uniform4uiv(this.addr,t)}function Qa(e,t,n){var r=t.length,i=va(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.safeSetTexture2D(t[e]||aa,i[e])}function $a(e,t,n){var r=t.length,i=va(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.setTexture3D(t[e]||oa,i[e])}function es(e,t,n){var r=t.length,i=va(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.safeSetTextureCube(t[e]||la,i[e])}function ts(e,t,n){var r=t.length,i=va(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.setTexture2DArray(t[e]||sa,i[e])}function ns(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return ya;case 35664:return xa;case 35665:return _a;case 35666:return Ma;case 35674:return Ea;case 35675:return ba;case 35676:return wa;case 5124:case 35670:return Ta;case 35667:case 35671:return Sa;case 35668:case 35672:return Aa;case 35669:case 35673:return Ra;case 5125:return La;case 36294:return Ca;case 36295:return Pa;case 36296:return Da;case 35678:case 36198:case 36298:case 36306:case 35682:return Ia;case 35679:case 36299:case 36307:return Na;case 35680:case 36300:case 36308:case 36293:return Oa;case 36289:case 36303:case 36311:case 36292:return Ua}}(t.type)}function rs(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Fa;case 35664:return Ba;case 35665:return Ha;case 35666:return za;case 35674:return Ga;case 35675:return Va;case 35676:return ka;case 5124:case 35670:return Wa;case 35667:case 35671:return ja;case 35668:case 35672:return Xa;case 35669:case 35673:return qa;case 5125:return Ya;case 36294:return Za;case 36295:return Ja;case 36296:return Ka;case 35678:case 36198:case 36298:case 36306:case 35682:return Qa;case 35679:case 36299:case 36307:return $a;case 35680:case 36300:case 36308:case 36293:return es;case 36289:case 36303:case 36311:case 36292:return ts}}(t.type)}function is(e){this.id=e,this.seq=[],this.map={}}rs.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),ga(t,e)},is.prototype.setValue=function(n,r,i){var a=this.seq;for(let e=0,t=a.length;e!==t;++e){const s=a[e];s.setValue(n,r[s.id],i)}};const as=/(\w+)(\])?(\[|\.)?/g;function ss(e,t){e.seq.push(t),e.map[t.id]=t}function os(t,n){this.seq=[],this.map={};var u=t.getProgramParameter(n,t.ACTIVE_UNIFORMS);for(let e=0;e<u;++e){var r=t.getActiveUniform(n,e),d=t.getUniformLocation(n,r.name),i=(h=p=c=h=l=o=s=a=i=void 0,r),a=d,s=this,o=i.name,l=o.length;for(as.lastIndex=0;;){var h=as.exec(o),c=as.lastIndex;let t=h[1];var p="]"===h[2],h=h[3];if(p&&(t|=0),void 0===h||"["===h&&c+2===l){ss(s,new(void 0===h?ns:rs)(t,i,a));break}{let e=s.map[t];void 0===e&&(e=new is(t),ss(s,e)),s=e}}}}function ls(e,t,n){t=e.createShader(t);return e.shaderSource(t,n),e.compileShader(t),t}os.prototype.setValue=function(e,t,n,r){const i=this.map[t];void 0!==i&&i.setValue(e,n,r)},os.prototype.setOptional=function(e,t,n){t=t[n];void 0!==t&&this.setValue(e,n,t)},os.upload=function(n,r,i,a){for(let e=0,t=r.length;e!==t;++e){const s=r[e],o=i[s.id];!1!==o.needsUpdate&&s.setValue(n,o.value,a)}},os.seqWithValue=function(n,r){const i=[];for(let e=0,t=n.length;e!==t;++e){var a=n[e];a.id in r&&i.push(a)}return i};let hs=0;function cs(e,t,n){var r=e.getShaderParameter(t,e.COMPILE_STATUS),i=e.getShaderInfoLog(t).trim();return r&&""===i?"":n.toUpperCase()+"\n\n"+i+"\n\n"+function(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}(e.getShaderSource(t))}function us(e,t){t=function(e){switch(e){case pt:return["Linear","( value )"];case mt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function ds(e){return""!==e}function ps(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function ms(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const fs=/^[ \t]*#include +<([\w\d./]+)>/gm;function gs(e){return e.replace(fs,vs)}function vs(e,t){var n=E[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return gs(n)}const ys=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,xs=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function _s(e){return e.replace(xs,Es).replace(ys,Ms)}function Ms(e,t,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Es(0,t,n,r)}function Es(e,t,n,r){let i="";for(let e=parseInt(t);e<parseInt(n);e++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function bs(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function ws(t,u,e,d){const n=t.getContext();var p=e.defines,r=e.vertexShader,i=e.fragmentShader,a=function(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===A?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===R&&(t="SHADOWMAP_TYPE_VSM"),t}(e),m=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case b:case w:t="ENVMAP_TYPE_CUBE";break;case C:case P:t="ENVMAP_TYPE_CUBE_UV"}return t}(e),s=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case w:case P:t="ENVMAP_MODE_REFRACTION"}return t}(e),o=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(e);const f=e.isWebGL2?"":function(e){const t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(ds).join("\n")}(e),g=function(e){const t=[];for(const r in e){var n=e[r];!1!==n&&t.push("#define "+r+" "+n)}return t.join("\n")}(p),l=n.createProgram();let h,c,v=e.glslVersion?"#version "+e.glslVersion+"\n":"";e.isRawShaderMaterial?(h=[g].filter(ds).join("\n"),0<h.length&&(h+="\n"),c=[f,g].filter(ds).join("\n"),0<c.length&&(c+="\n")):(h=[bs(e),"#define SHADER_NAME "+e.shaderName,g,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+e.maxBones,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+s:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.useVertexTexture?"#define BONE_TEXTURE":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&!1===e.flatShading?"#define USE_MORPHNORMALS":"",e.morphTargets&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargets&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+a:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(ds).join("\n"),c=[f,bs(e),"#define SHADER_NAME "+e.shaderName,g,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+m:"",e.envMap?"#define "+s:"",e.envMap?"#define "+o:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+a:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==De?"#define TONE_MAPPING":"",e.toneMapping!==De?E.tonemapping_pars_fragment:"",e.toneMapping!==De?function(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.transparent?"":"#define OPAQUE",E.encodings_pars_fragment,us("linearToOutputTexel",e.outputEncoding),e.depthPacking?"#define DEPTH_PACKING "+e.depthPacking:"","\n"].filter(ds).join("\n")),r=ms(ps(gs(r),e),e),i=ms(ps(gs(i),e),e),r=_s(r),i=_s(i),e.isWebGL2&&!0!==e.isRawShaderMaterial&&(v="#version 300 es\n",h=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+h,c=["#define varying in",e.glslVersion===yt?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===yt?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+c);p=v+h+r,m=v+c+i,s=ls(n,n.VERTEX_SHADER,p),o=ls(n,n.FRAGMENT_SHADER,m);if(n.attachShader(l,s),n.attachShader(l,o),void 0!==e.index0AttributeName?n.bindAttribLocation(l,0,e.index0AttributeName):!0===e.morphTargets&&n.bindAttribLocation(l,0,"position"),n.linkProgram(l),t.debug.checkShaderErrors){a=n.getProgramInfoLog(l).trim(),r=n.getShaderInfoLog(s).trim(),i=n.getShaderInfoLog(o).trim();let e=!0,t=!0;!1===n.getProgramParameter(l,n.LINK_STATUS)?(e=!1,p=cs(n,s,"vertex"),m=cs(n,o,"fragment"),console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(l,n.VALIDATE_STATUS)+"\n\nProgram Info Log: "+a+"\n"+p+"\n"+m)):""!==a?console.warn("THREE.WebGLProgram: Program Info Log:",a):""!==r&&""!==i||(t=!1),t&&(this.diagnostics={runnable:e,programLog:a,vertexShader:{log:r,prefix:h},fragmentShader:{log:i,prefix:c}})}n.deleteShader(s),n.deleteShader(o);let y;this.getUniforms=function(){return void 0===y&&(y=new os(n,l)),y};let x;return this.getAttributes=function(){return void 0===x&&(x=function(n,r){const i={};var e=n.getProgramParameter(r,n.ACTIVE_ATTRIBUTES);for(let t=0;t<e;t++){var a=n.getActiveAttrib(r,t),s=a.name;let e=1;a.type===n.FLOAT_MAT2&&(e=2),a.type===n.FLOAT_MAT3&&(e=3),a.type===n.FLOAT_MAT4&&(e=4),i[s]={type:a.type,location:n.getAttribLocation(r,s),locationSize:e}}return i}(n,l)),x},this.destroy=function(){d.releaseStatesOfProgram(this),n.deleteProgram(l),this.program=void 0},this.name=e.shaderName,this.id=hs++,this.cacheKey=u,this.usedTimes=1,this.program=l,this.vertexShader=s,this.fragmentShader=o,this}let Ts=0;class Ss{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){var t=e.vertexShader,n=e.fragmentShader;const r=this._getShaderStage(t),i=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return!1===a.has(r)&&(a.add(r),r.usedTimes++),!1===a.has(i)&&(a.add(i),i.usedTimes++),this}remove(e){for(const t of this.materialCache.get(e))t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return!1===t.has(e)&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;var n;return!1===t.has(e)&&(n=new As,t.set(e,n)),t.get(e)}}class As{constructor(){this.id=Ts++,this.usedTimes=0}}function Rs(g,w,T,v,y,t,x){const a=new Gn,_=new Ss,s=[],M=y.isWebGL2,S=y.logarithmicDepthBuffer,E=y.floatVertexTextures,A=y.maxVertexUniforms,R=y.vertexTextures;let b=y.precision;const L={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(e,t,c,n,r){var i,a=n.fog,n=e.isMeshStandardMaterial?n.environment:null,n=(e.isMeshStandardMaterial?T:w).get(e.envMap||n),s=L[e.type],o=r.isSkinnedMesh?(o=(o=r).skeleton.bones,E?1024:(i=A,i=Math.floor((i-20)/4),(i=Math.min(i,o.length))<o.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+o.length+" bones. This GPU supports "+i+"."),0):i)):0;null!==e.precision&&(b=y.getMaxPrecision(e.precision),b!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",b,"instead."));let l,u,d,p;s?(i=xi[s],l=i.vertexShader,u=i.fragmentShader):(l=e.vertexShader,u=e.fragmentShader,_.update(e),d=_.getVertexShaderID(e),p=_.getFragmentShaderID(e));var m=g.getRenderTarget(),f=0<e.alphaTest,h=0<e.clearcoat;return{isWebGL2:M,shaderID:s,shaderName:e.type,vertexShader:l,fragmentShader:u,defines:e.defines,customVertexShaderID:d,customFragmentShaderID:p,isRawShaderMaterial:!0===e.isRawShaderMaterial,glslVersion:e.glslVersion,precision:b,instancing:!0===r.isInstancedMesh,instancingColor:!0===r.isInstancedMesh&&null!==r.instanceColor,supportsVertexTextures:R,outputEncoding:null===m?g.outputEncoding:!0===m.isXRRenderTarget?m.texture.encoding:pt,map:!!e.map,matcap:!!e.matcap,envMap:!!n,envMapMode:n&&n.mapping,envMapCubeUV:!!n&&(n.mapping===C||n.mapping===P),lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===gt,tangentSpaceNormalMap:e.normalMapType===ft,decodeVideoTexture:!!e.map&&!0===e.map.isVideoTexture&&e.map.encoding===mt,clearcoat:h,clearcoatMap:h&&!!e.clearcoatMap,clearcoatRoughnessMap:h&&!!e.clearcoatRoughnessMap,clearcoatNormalMap:h&&!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,specularIntensityMap:!!e.specularIntensityMap,specularColorMap:!!e.specularColorMap,transparent:e.transparent,alphaMap:!!e.alphaMap,alphaTest:f,gradientMap:!!e.gradientMap,sheen:0<e.sheen,sheenColorMap:!!e.sheenColorMap,sheenRoughnessMap:!!e.sheenRoughnessMap,transmission:0<e.transmission,transmissionMap:!!e.transmissionMap,thicknessMap:!!e.thicknessMap,combine:e.combine,vertexTangents:!!e.normalMap&&!!r.geometry&&!!r.geometry.attributes.tangent,vertexColors:e.vertexColors,vertexAlphas:!0===e.vertexColors&&!!r.geometry&&!!r.geometry.attributes.color&&4===r.geometry.attributes.color.itemSize,vertexUvs:!!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatMap||e.clearcoatRoughnessMap||e.clearcoatNormalMap||e.displacementMap||e.transmissionMap||e.thicknessMap||e.specularIntensityMap||e.specularColorMap||e.sheenColorMap||e.sheenRoughnessMap),uvsVertexOnly:!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||0<e.transmission||e.transmissionMap||e.thicknessMap||e.specularIntensityMap||e.specularColorMap||0<e.sheen||e.sheenColorMap||e.sheenRoughnessMap||!e.displacementMap),fog:!!a,useFog:e.fog,fogExp2:a&&a.isFogExp2,flatShading:!!e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:S,skinning:!0===r.isSkinnedMesh&&0<o,maxBones:o,useVertexTexture:E,morphTargets:!!r.geometry&&!!r.geometry.morphAttributes.position,morphNormals:!!r.geometry&&!!r.geometry.morphAttributes.normal,morphTargetsCount:r.geometry&&r.geometry.morphAttributes.position?r.geometry.morphAttributes.position.length:0,numDirLights:t.directional.length,numPointLights:t.point.length,numSpotLights:t.spot.length,numRectAreaLights:t.rectArea.length,numHemiLights:t.hemi.length,numDirLightShadows:t.directionalShadowMap.length,numPointLightShadows:t.pointShadowMap.length,numSpotLightShadows:t.spotShadowMap.length,numClippingPlanes:x.numPlanes,numClipIntersection:x.numIntersection,dithering:e.dithering,shadowMapEnabled:g.shadowMap.enabled&&0<c.length,shadowMapType:g.shadowMap.type,toneMapping:e.toneMapped?g.toneMapping:De,physicallyCorrectLights:g.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,doubleSided:e.side===Pe,flipSided:e.side===Ce,depthPacking:void 0!==e.depthPacking&&e.depthPacking,index0AttributeName:e.index0AttributeName,extensionDerivatives:e.extensions&&e.extensions.derivatives,extensionFragDepth:e.extensions&&e.extensions.fragDepth,extensionDrawBuffers:e.extensions&&e.extensions.drawBuffers,extensionShaderTextureLOD:e.extensions&&e.extensions.shaderTextureLOD,rendererExtensionFragDepth:M||v.has("EXT_frag_depth"),rendererExtensionDrawBuffers:M||v.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:M||v.has("EXT_shader_texture_lod"),customProgramCacheKey:e.customProgramCacheKey()}},getProgramCacheKey:function(e){const t=[];if(e.shaderID?t.push(e.shaderID):(t.push(e.customVertexShaderID),t.push(e.customFragmentShaderID)),void 0!==e.defines)for(const i in e.defines)t.push(i),t.push(e.defines[i]);var n,r;return!1===e.isRawShaderMaterial&&(n=t,r=e,n.push(r.precision),n.push(r.outputEncoding),n.push(r.envMapMode),n.push(r.combine),n.push(r.vertexUvs),n.push(r.fogExp2),n.push(r.sizeAttenuation),n.push(r.maxBones),n.push(r.morphTargetsCount),n.push(r.numDirLights),n.push(r.numPointLights),n.push(r.numSpotLights),n.push(r.numHemiLights),n.push(r.numRectAreaLights),n.push(r.numDirLightShadows),n.push(r.numPointLightShadows),n.push(r.numSpotLightShadows),n.push(r.shadowMapType),n.push(r.toneMapping),n.push(r.numClippingPlanes),n.push(r.numClipIntersection),n=t,r=e,a.disableAll(),r.isWebGL2&&a.enable(0),r.supportsVertexTextures&&a.enable(1),r.instancing&&a.enable(2),r.instancingColor&&a.enable(3),r.map&&a.enable(4),r.matcap&&a.enable(5),r.envMap&&a.enable(6),r.envMapCubeUV&&a.enable(7),r.lightMap&&a.enable(8),r.aoMap&&a.enable(9),r.emissiveMap&&a.enable(10),r.bumpMap&&a.enable(11),r.normalMap&&a.enable(12),r.objectSpaceNormalMap&&a.enable(13),r.tangentSpaceNormalMap&&a.enable(14),r.clearcoat&&a.enable(15),r.clearcoatMap&&a.enable(16),r.clearcoatRoughnessMap&&a.enable(17),r.clearcoatNormalMap&&a.enable(18),r.displacementMap&&a.enable(19),r.specularMap&&a.enable(20),r.roughnessMap&&a.enable(21),r.metalnessMap&&a.enable(22),r.gradientMap&&a.enable(23),r.alphaMap&&a.enable(24),r.alphaTest&&a.enable(25),r.vertexColors&&a.enable(26),r.vertexAlphas&&a.enable(27),r.vertexUvs&&a.enable(28),r.vertexTangents&&a.enable(29),r.uvsVertexOnly&&a.enable(30),r.fog&&a.enable(31),n.push(a.mask),a.disableAll(),r.useFog&&a.enable(0),r.flatShading&&a.enable(1),r.logarithmicDepthBuffer&&a.enable(2),r.skinning&&a.enable(3),r.useVertexTexture&&a.enable(4),r.morphTargets&&a.enable(5),r.morphNormals&&a.enable(6),r.premultipliedAlpha&&a.enable(7),r.shadowMapEnabled&&a.enable(8),r.physicallyCorrectLights&&a.enable(9),r.doubleSided&&a.enable(10),r.flipSided&&a.enable(11),r.depthPacking&&a.enable(12),r.dithering&&a.enable(13),r.specularIntensityMap&&a.enable(14),r.specularColorMap&&a.enable(15),r.transmission&&a.enable(16),r.transmissionMap&&a.enable(17),r.thicknessMap&&a.enable(18),r.sheen&&a.enable(19),r.sheenColorMap&&a.enable(20),r.sheenRoughnessMap&&a.enable(21),r.decodeVideoTexture&&a.enable(22),r.transparent&&a.enable(23),n.push(a.mask),t.push(g.outputEncoding)),t.push(e.customProgramCacheKey),t.join()},getUniforms:function(e){var t=L[e.type];let n;return n=t?(t=xi[t],ni.clone(t.uniforms)):e.uniforms,n},acquireProgram:function(e,n){let r;for(let e=0,t=s.length;e<t;e++){var i=s[e];if(i.cacheKey===n){r=i,++r.usedTimes;break}}return void 0===r&&(r=new ws(g,n,e,t),s.push(r)),r},releaseProgram:function(e){var t;0==--e.usedTimes&&(t=s.indexOf(e),s[t]=s[s.length-1],s.pop(),e.destroy())},releaseShaderCache:function(e){_.remove(e)},programs:s,dispose:function(){_.dispose()}}}function Ls(){let r=new WeakMap;return{get:function(e){let t=r.get(e);return void 0===t&&(t={},r.set(e,t)),t},remove:function(e){r.delete(e)},update:function(e,t,n){r.get(e)[t]=n},dispose:function(){r=new WeakMap}}}function Cs(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Ps(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Ds(){const o=[];let l=0;const s=[],h=[],c=[];function u(e,t,n,r,i,a){let s=o[l];return void 0===s?(s={id:e.id,object:e,geometry:t,material:n,groupOrder:r,renderOrder:e.renderOrder,z:i,group:a},o[l]=s):(s.id=e.id,s.object=e,s.geometry=t,s.material=n,s.groupOrder=r,s.renderOrder=e.renderOrder,s.z=i,s.group=a),l++,s}return{opaque:s,transmissive:h,transparent:c,init:function(){l=0,s.length=0,h.length=0,c.length=0},push:function(e,t,n,r,i,a){e=u(e,t,n,r,i,a),(0<n.transmission?h:!0===n.transparent?c:s).push(e)},unshift:function(e,t,n,r,i,a){e=u(e,t,n,r,i,a),(0<n.transmission?h:!0===n.transparent?c:s).unshift(e)},finish:function(){for(let e=l,t=o.length;e<t;e++){const n=o[e];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.group=null}},sort:function(e,t){1<s.length&&s.sort(e||Cs),1<h.length&&h.sort(t||Ps),1<c.length&&c.sort(t||Ps)}}}function Is(){let r=new WeakMap;return{get:function(e,t){let n;return!1===r.has(e)?(n=new Ds,r.set(e,[n])):t>=r.get(e).length?(n=new Ds,r.get(e).push(n)):n=r.get(e)[t],n},dispose:function(){r=new WeakMap}}}function Ns(){const n={};return{get:function(e){if(void 0!==n[e.id])return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new Ae,color:new _};break;case"SpotLight":t={position:new Ae,direction:new Ae,color:new _,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new Ae,color:new _,distance:0,decay:0};break;case"HemisphereLight":t={direction:new Ae,skyColor:new _,groundColor:new _};break;case"RectAreaLight":t={color:new _,position:new Ae,halfWidth:new Ae,halfHeight:new Ae}}return n[e.id]=t,t}}}let Os=0;function Us(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Fs(L,C){const P=new Ns,D=function(){const n={};return{get:function(e){if(void 0!==n[e.id])return n[e.id];let t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ne};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ne,shadowCameraNear:1,shadowCameraFar:1e3}}return n[e.id]=t,t}}}(),I={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)I.probe.push(new Ae);const f=new Ae,g=new Re,v=new Re;return{setup:function(u,t){let d=0,p=0,m=0;for(let e=0;e<9;e++)I.probe[e].set(0,0,0);let n=0,r=0,i=0,f=0,g=0,v=0,y=0,x=0;u.sort(Us);var a=!0!==t?Math.PI:1;for(let e=0,t=u.length;e<t;e++){var s=u[e],_=s.color,o=s.intensity,l=s.distance,M=s.shadow&&s.shadow.map?s.shadow.map.texture:null;if(s.isAmbientLight)d+=_.r*o*a,p+=_.g*o*a,m+=_.b*o*a;else if(s.isLightProbe)for(let e=0;e<9;e++)I.probe[e].addScaledVector(s.sh.coefficients[e],o);else if(s.isDirectionalLight){const E=P.get(s);if(E.color.copy(s.color).multiplyScalar(s.intensity*a),s.castShadow){var h=s.shadow;const b=D.get(s);b.shadowBias=h.bias,b.shadowNormalBias=h.normalBias,b.shadowRadius=h.radius,b.shadowMapSize=h.mapSize,I.directionalShadow[n]=b,I.directionalShadowMap[n]=M,I.directionalShadowMatrix[n]=s.shadow.matrix,v++}I.directional[n]=E,n++}else if(s.isSpotLight){const c=P.get(s);if(c.position.setFromMatrixPosition(s.matrixWorld),c.color.copy(_).multiplyScalar(o*a),c.distance=l,c.coneCos=Math.cos(s.angle),c.penumbraCos=Math.cos(s.angle*(1-s.penumbra)),c.decay=s.decay,s.castShadow){h=s.shadow;const w=D.get(s);w.shadowBias=h.bias,w.shadowNormalBias=h.normalBias,w.shadowRadius=h.radius,w.shadowMapSize=h.mapSize,I.spotShadow[i]=w,I.spotShadowMap[i]=M,I.spotShadowMatrix[i]=s.shadow.matrix,x++}I.spot[i]=c,i++}else if(s.isRectAreaLight){const T=P.get(s);T.color.copy(_).multiplyScalar(o),T.halfWidth.set(.5*s.width,0,0),T.halfHeight.set(0,.5*s.height,0),I.rectArea[f]=T,f++}else if(s.isPointLight){const S=P.get(s);if(S.color.copy(s.color).multiplyScalar(s.intensity*a),S.distance=s.distance,S.decay=s.decay,s.castShadow){l=s.shadow;const A=D.get(s);A.shadowBias=l.bias,A.shadowNormalBias=l.normalBias,A.shadowRadius=l.radius,A.shadowMapSize=l.mapSize,A.shadowCameraNear=l.camera.near,A.shadowCameraFar=l.camera.far,I.pointShadow[r]=A,I.pointShadowMap[r]=M,I.pointShadowMatrix[r]=s.shadow.matrix,y++}I.point[r]=S,r++}else if(s.isHemisphereLight){const R=P.get(s);R.skyColor.copy(s.color).multiplyScalar(o*a),R.groundColor.copy(s.groundColor).multiplyScalar(o*a),I.hemi[g]=R,g++}}0<f&&(C.isWebGL2||!0===L.has("OES_texture_float_linear")?(I.rectAreaLTC1=N.LTC_FLOAT_1,I.rectAreaLTC2=N.LTC_FLOAT_2):!0===L.has("OES_texture_half_float_linear")?(I.rectAreaLTC1=N.LTC_HALF_1,I.rectAreaLTC2=N.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),I.ambient[0]=d,I.ambient[1]=p,I.ambient[2]=m;const e=I.hash;e.directionalLength===n&&e.pointLength===r&&e.spotLength===i&&e.rectAreaLength===f&&e.hemiLength===g&&e.numDirectionalShadows===v&&e.numPointShadows===y&&e.numSpotShadows===x||(I.directional.length=n,I.spot.length=i,I.rectArea.length=f,I.point.length=r,I.hemi.length=g,I.directionalShadow.length=v,I.directionalShadowMap.length=v,I.pointShadow.length=y,I.pointShadowMap.length=y,I.spotShadow.length=x,I.spotShadowMap.length=x,I.directionalShadowMatrix.length=v,I.pointShadowMatrix.length=y,I.spotShadowMatrix.length=x,e.directionalLength=n,e.pointLength=r,e.spotLength=i,e.rectAreaLength=f,e.hemiLength=g,e.numDirectionalShadows=v,e.numPointShadows=y,e.numSpotShadows=x,I.version=Os++)},setupView:function(n,e){let r=0,i=0,d=0,p=0,m=0;var a=e.matrixWorldInverse;for(let e=0,t=n.length;e<t;e++){var s=n[e];if(s.isDirectionalLight){const o=I.directional[r];o.direction.setFromMatrixPosition(s.matrixWorld),f.setFromMatrixPosition(s.target.matrixWorld),o.direction.sub(f),o.direction.transformDirection(a),r++}else if(s.isSpotLight){const l=I.spot[d];l.position.setFromMatrixPosition(s.matrixWorld),l.position.applyMatrix4(a),l.direction.setFromMatrixPosition(s.matrixWorld),f.setFromMatrixPosition(s.target.matrixWorld),l.direction.sub(f),l.direction.transformDirection(a),d++}else if(s.isRectAreaLight){const h=I.rectArea[p];h.position.setFromMatrixPosition(s.matrixWorld),h.position.applyMatrix4(a),v.identity(),g.copy(s.matrixWorld),g.premultiply(a),v.extractRotation(g),h.halfWidth.set(.5*s.width,0,0),h.halfHeight.set(0,.5*s.height,0),h.halfWidth.applyMatrix4(v),h.halfHeight.applyMatrix4(v),p++}else if(s.isPointLight){const c=I.point[i];c.position.setFromMatrixPosition(s.matrixWorld),c.position.applyMatrix4(a),i++}else if(s.isHemisphereLight){const u=I.hemi[m];u.direction.setFromMatrixPosition(s.matrixWorld),u.direction.transformDirection(a),u.direction.normalize(),m++}}},state:I}}function Bs(e,t){const n=new Fs(e,t),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(e){n.setup(r,e)},setupLightsView:function(e){n.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){i.push(e)}}}function Hs(r,i){let a=new WeakMap;return{get:function(e,t=0){let n;return!1===a.has(e)?(n=new Bs(r,i),a.set(e,[n])):t>=a.get(e).length?(n=new Bs(r,i),a.get(e).push(n)):n=a.get(e)[t],n},dispose:function(){a=new WeakMap}}}class zs extends pr{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}zs.prototype.isMeshDepthMaterial=!0;class Gs extends pr{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new Ae,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Gs.prototype.isMeshDistanceMaterial=!0;const Vs="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",ks="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";function Ws(f,g,e){let v=new fi;const m=new ne,y=new ne,w=new Zt,h=new zs({depthPacking:n}),c=new Gs,u={},x=e.maxTextureSize,d={0:Ce,1:Le,2:Pe},_=new ri({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ne},radius:{value:4}},vertexShader:Vs,fragmentShader:ks}),M=_.clone(),t=(M.defines.HORIZONTAL_PASS=1,new S),E=(t.setAttribute("position",new vr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3)),new Kr(t,_)),b=this;function T(n,e,r,t,i,a,s){let o=null;n=!0===t.isPointLight?n.customDistanceMaterial:n.customDepthMaterial;if(o=void 0!==n?n:!0===t.isPointLight?c:h,f.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length||r.displacementMap&&0!==r.displacementScale||r.alphaMap&&0<r.alphaTest){var n=o.uuid,l=r.uuid;let e=u[n],t=(void 0===e&&(e={},u[n]=e),e[l]);void 0===t&&(t=o.clone(),e[l]=t),o=t}return o.visible=r.visible,o.wireframe=r.wireframe,s===R?o.side=null!==r.shadowSide?r.shadowSide:r.side:o.side=null!==r.shadowSide?r.shadowSide:d[r.side],o.alphaMap=r.alphaMap,o.alphaTest=r.alphaTest,o.clipShadows=r.clipShadows,o.clippingPlanes=r.clippingPlanes,o.clipIntersection=r.clipIntersection,o.displacementMap=r.displacementMap,o.displacementScale=r.displacementScale,o.displacementBias=r.displacementBias,o.wireframeLinewidth=r.wireframeLinewidth,o.linewidth=r.linewidth,!0===t.isPointLight&&!0===o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(t.matrixWorld),o.nearDistance=i,o.farDistance=a),o}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=A,this.render=function(n,r,i){if(!1!==b.enabled&&(!1!==b.autoUpdate||!1!==b.needsUpdate)&&0!==n.length){var e=f.getRenderTarget(),t=f.getActiveCubeFace(),d=f.getActiveMipmapLevel();const c=f.state;c.setBlending(J),c.buffers.color.setClear(1,1,1,1),c.buffers.depth.setTest(!0),c.setScissorTest(!1);for(let e=0,t=n.length;e<t;e++){var a=n[e];const u=a.shadow;if(void 0!==u){if(!1!==u.autoUpdate||!1!==u.needsUpdate){m.copy(u.mapSize);var s,o,l=u.getFrameExtents(),p=(m.multiply(l),y.copy(u.mapSize),(m.x>x||m.y>x)&&(m.x>x&&(y.x=Math.floor(x/l.x),m.x=y.x*l.x,u.mapSize.x=y.x),m.y>x&&(y.y=Math.floor(x/l.y),m.y=y.y*l.y,u.mapSize.y=y.y)),null!==u.map||u.isPointLightShadow||this.type!==R||(l={minFilter:Oe,magFilter:Oe,format:We},u.map=new Jt(m.x,m.y,l),u.map.texture.name=a.name+".shadowMap",u.mapPass=new Jt(m.x,m.y,l),u.camera.updateProjectionMatrix()),null===u.map&&(l={minFilter:Ne,magFilter:Ne,format:We},u.map=new Jt(m.x,m.y,l),u.map.texture.name=a.name+".shadowMap",u.camera.updateProjectionMatrix()),f.setRenderTarget(u.map),f.clear(),u.getViewportCount());for(let e=0;e<p;e++){var h=u.getViewport(e);w.set(y.x*h.x,y.y*h.y,y.x*h.z,y.y*h.w),c.viewport(w),u.updateMatrices(a,e),v=u.getFrustum(),function d(n,r,i,a,s){if(!1===n.visible)return;const e=n.layers.test(r.layers);if(e&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&s===R)&&(!n.frustumCulled||v.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,n.matrixWorld);const o=g.update(n),l=n.material;if(Array.isArray(l)){const h=o.groups;for(let e=0,t=h.length;e<t;e++){const c=h[e],u=l[c.materialIndex];if(u&&u.visible){const m=T(n,o,u,a,i.near,i.far,s);f.renderBufferDirect(i,null,o,m,n,c)}}}else if(l.visible){const t=T(n,o,l,a,i.near,i.far,s);f.renderBufferDirect(i,null,o,t,n,null)}}const p=n.children;for(let e=0,t=p.length;e<t;e++)d(p[e],r,i,a,s)}(r,i,u.camera,a,this.type)}u.isPointLightShadow||this.type!==R||(o=s=l=void 0,l=u,s=i,o=g.update(E),_.defines.VSM_SAMPLES!==l.blurSamples&&(_.defines.VSM_SAMPLES=l.blurSamples,M.defines.VSM_SAMPLES=l.blurSamples,_.needsUpdate=!0,M.needsUpdate=!0),_.uniforms.shadow_pass.value=l.map.texture,_.uniforms.resolution.value=l.mapSize,_.uniforms.radius.value=l.radius,f.setRenderTarget(l.mapPass),f.clear(),f.renderBufferDirect(s,null,o,_,E,null),M.uniforms.shadow_pass.value=l.mapPass.texture,M.uniforms.resolution.value=l.mapSize,M.uniforms.radius.value=l.radius,f.setRenderTarget(l.map),f.clear(),f.renderBufferDirect(s,null,o,M,E,null)),u.needsUpdate=!1}}else console.warn("THREE.WebGLShadowMap:",a,"has no shadow.")}b.needsUpdate=!1,f.setRenderTarget(e,t,d)}}}function js(c,s,o){const p=o.isWebGL2;const m=new function(){let t=!1;const a=new Zt;let n=null;const s=new Zt(0,0,0,0);return{setMask:function(e){n===e||t||(c.colorMask(e,e,e,e),n=e)},setLocked:function(e){t=e},setClear:function(e,t,n,r,i){!0===i&&(e*=r,t*=r,n*=r),a.set(e,t,n,r),!1===s.equals(a)&&(c.clearColor(e,t,n,r),s.copy(a))},reset:function(){t=!1,n=null,s.set(-1,0,0,0)}}},r=new function(){let t=!1,n=null,r=null,i=null;return{setTest:function(e){(e?u:d)(c.DEPTH_TEST)},setMask:function(e){n===e||t||(c.depthMask(e),n=e)},setFunc:function(e){if(r!==e){if(e)switch(e){case xe:c.depthFunc(c.NEVER);break;case _e:c.depthFunc(c.ALWAYS);break;case Me:c.depthFunc(c.LESS);break;case Ee:c.depthFunc(c.LEQUAL);break;case be:c.depthFunc(c.EQUAL);break;case we:c.depthFunc(c.GEQUAL);break;case Te:c.depthFunc(c.GREATER);break;case Se:c.depthFunc(c.NOTEQUAL);break;default:c.depthFunc(c.LEQUAL)}else c.depthFunc(c.LEQUAL);r=e}},setLocked:function(e){t=e},setClear:function(e){i!==e&&(c.clearDepth(e),i=e)},reset:function(){t=!1,n=null,r=null,i=null}}},i=new function(){let t=!1,n=null,r=null,i=null,a=null,s=null,o=null,l=null,h=null;return{setTest:function(e){t||(e?u:d)(c.STENCIL_TEST)},setMask:function(e){n===e||t||(c.stencilMask(e),n=e)},setFunc:function(e,t,n){r===e&&i===t&&a===n||(c.stencilFunc(e,t,n),r=e,i=t,a=n)},setOp:function(e,t,n){s===e&&o===t&&l===n||(c.stencilOp(e,t,n),s=e,o=t,l=n)},setLocked:function(e){t=e},setClear:function(e){h!==e&&(c.clearStencil(e),h=e)},reset:function(){t=!1,n=null,r=null,i=null,a=null,s=null,o=null,l=null,h=null}}};let t={},n={},f=new WeakMap,g=[],v=null,l=!1,y=null,x=null,_=null,M=null,E=null,b=null,w=null,T=!1,S=null,A=null,R=null,L=null,C=null;const P=c.getParameter(c.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let D=!1,e=0;const I=c.getParameter(c.VERSION);-1!==I.indexOf("WebGL")?(e=parseFloat(/^WebGL (\d)/.exec(I)[1]),D=1<=e):-1!==I.indexOf("OpenGL ES")&&(e=parseFloat(/^OpenGL ES (\d)/.exec(I)[1]),D=2<=e);let a=null,N={};var O=c.getParameter(c.SCISSOR_BOX),U=c.getParameter(c.VIEWPORT);const F=(new Zt).fromArray(O),B=(new Zt).fromArray(U);function H(e,t,n){var r=new Uint8Array(4),i=c.createTexture();c.bindTexture(e,i),c.texParameteri(e,c.TEXTURE_MIN_FILTER,c.NEAREST),c.texParameteri(e,c.TEXTURE_MAG_FILTER,c.NEAREST);for(let e=0;e<n;e++)c.texImage2D(t+e,0,c.RGBA,1,1,0,c.RGBA,c.UNSIGNED_BYTE,r);return i}const z={};function u(e){!0!==t[e]&&(c.enable(e),t[e]=!0)}function d(e){!1!==t[e]&&(c.disable(e),t[e]=!1)}z[c.TEXTURE_2D]=H(c.TEXTURE_2D,c.TEXTURE_2D,1),z[c.TEXTURE_CUBE_MAP]=H(c.TEXTURE_CUBE_MAP,c.TEXTURE_CUBE_MAP_POSITIVE_X,6),m.setClear(0,0,0,1),r.setClear(1),i.setClear(0),u(c.DEPTH_TEST),r.setFunc(Ee),k(!1),W(Y),u(c.CULL_FACE),V(J);const h={[re]:c.FUNC_ADD,[ie]:c.FUNC_SUBTRACT,[ae]:c.FUNC_REVERSE_SUBTRACT},G=(p?(h[se]=c.MIN,h[oe]=c.MAX):null!==(O=s.get("EXT_blend_minmax"))&&(h[se]=O.MIN_EXT,h[oe]=O.MAX_EXT),{[le]:c.ZERO,[he]:c.ONE,[ce]:c.SRC_COLOR,[de]:c.SRC_ALPHA,[ye]:c.SRC_ALPHA_SATURATE,[ge]:c.DST_COLOR,[me]:c.DST_ALPHA,[ue]:c.ONE_MINUS_SRC_COLOR,[pe]:c.ONE_MINUS_SRC_ALPHA,[ve]:c.ONE_MINUS_DST_COLOR,[fe]:c.ONE_MINUS_DST_ALPHA});function V(e,t,n,r,i,a,s,o){if(e!==J){if(!1===l&&(u(c.BLEND),l=!0),e===te)i=i||t,a=a||n,s=s||r,t===x&&i===E||(c.blendEquationSeparate(h[t],h[i]),x=t,E=i),n===_&&r===M&&a===b&&s===w||(c.blendFuncSeparate(G[n],G[r],G[a],G[s]),_=n,M=r,b=a,w=s),y=e,T=null;else if(e!==y||o!==T){if(x===re&&E===re||(c.blendEquation(c.FUNC_ADD),x=re,E=re),o)switch(e){case K:c.blendFuncSeparate(c.ONE,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case Q:c.blendFunc(c.ONE,c.ONE);break;case $:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case ee:c.blendFuncSeparate(c.ZERO,c.SRC_COLOR,c.ZERO,c.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case K:c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case Q:c.blendFunc(c.SRC_ALPHA,c.ONE);break;case $:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case ee:c.blendFunc(c.ZERO,c.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}_=null,M=null,b=null,w=null,y=e,T=o}}else!0===l&&(d(c.BLEND),l=!1)}function k(e){S!==e&&(e?c.frontFace(c.CW):c.frontFace(c.CCW),S=e)}function W(e){e!==q?(u(c.CULL_FACE),e!==A&&(e===Y?c.cullFace(c.BACK):e===Z?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK))):d(c.CULL_FACE),A=e}function j(e,t,n){e?(u(c.POLYGON_OFFSET_FILL),L===t&&C===n||(c.polygonOffset(t,n),L=t,C=n)):d(c.POLYGON_OFFSET_FILL)}function X(e){void 0===e&&(e=c.TEXTURE0+P-1),a!==e&&(c.activeTexture(e),a=e)}return{buffers:{color:m,depth:r,stencil:i},enable:u,disable:d,bindFramebuffer:function(e,t){return n[e]!==t&&(c.bindFramebuffer(e,t),n[e]=t,p&&(e===c.DRAW_FRAMEBUFFER&&(n[c.FRAMEBUFFER]=t),e===c.FRAMEBUFFER&&(n[c.DRAW_FRAMEBUFFER]=t)),!0)},drawBuffers:function(e,n){let r=g,t=!1;if(e)if(r=f.get(n),void 0===r&&(r=[],f.set(n,r)),e.isWebGLMultipleRenderTargets){n=e.texture;if(r.length!==n.length||r[0]!==c.COLOR_ATTACHMENT0){for(let e=0,t=n.length;e<t;e++)r[e]=c.COLOR_ATTACHMENT0+e;r.length=n.length,t=!0}}else r[0]!==c.COLOR_ATTACHMENT0&&(r[0]=c.COLOR_ATTACHMENT0,t=!0);else r[0]!==c.BACK&&(r[0]=c.BACK,t=!0);t&&(o.isWebGL2?c.drawBuffers(r):s.get("WEBGL_draw_buffers").drawBuffersWEBGL(r))},useProgram:function(e){return v!==e&&(c.useProgram(e),v=e,!0)},setBlending:V,setMaterial:function(e,t){(e.side===Pe?d:u)(c.CULL_FACE);let n=e.side===Ce;t&&(n=!n),k(n),e.blending===K&&!1===e.transparent?V(J):V(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),r.setFunc(e.depthFunc),r.setTest(e.depthTest),r.setMask(e.depthWrite),m.setMask(e.colorWrite),t=e.stencilWrite,i.setTest(t),t&&(i.setMask(e.stencilWriteMask),i.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),i.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),j(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),(!0===e.alphaToCoverage?u:d)(c.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:k,setCullFace:W,setLineWidth:function(e){e!==R&&(D&&c.lineWidth(e),R=e)},setPolygonOffset:j,setScissorTest:function(e){(e?u:d)(c.SCISSOR_TEST)},activeTexture:X,bindTexture:function(e,t){null===a&&X();let n=N[a];void 0===n&&(n={type:void 0,texture:void 0},N[a]=n),n.type===e&&n.texture===t||(c.bindTexture(e,t||z[e]),n.type=e,n.texture=t)},unbindTexture:function(){const e=N[a];void 0!==e&&void 0!==e.type&&(c.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{c.compressedTexImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{c.texImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{c.texImage3D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage2D:function(){try{c.texStorage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{c.texStorage3D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{c.texSubImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{c.texSubImage3D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{c.compressedTexSubImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(e){!1===F.equals(e)&&(c.scissor(e.x,e.y,e.z,e.w),F.copy(e))},viewport:function(e){!1===B.equals(e)&&(c.viewport(e.x,e.y,e.z,e.w),B.copy(e))},reset:function(){c.disable(c.BLEND),c.disable(c.CULL_FACE),c.disable(c.DEPTH_TEST),c.disable(c.POLYGON_OFFSET_FILL),c.disable(c.SCISSOR_TEST),c.disable(c.STENCIL_TEST),c.disable(c.SAMPLE_ALPHA_TO_COVERAGE),c.blendEquation(c.FUNC_ADD),c.blendFunc(c.ONE,c.ZERO),c.blendFuncSeparate(c.ONE,c.ZERO,c.ONE,c.ZERO),c.colorMask(!0,!0,!0,!0),c.clearColor(0,0,0,0),c.depthMask(!0),c.depthFunc(c.LESS),c.clearDepth(1),c.stencilMask(4294967295),c.stencilFunc(c.ALWAYS,0,4294967295),c.stencilOp(c.KEEP,c.KEEP,c.KEEP),c.clearStencil(0),c.cullFace(c.BACK),c.frontFace(c.CCW),c.polygonOffset(0,0),c.activeTexture(c.TEXTURE0),c.bindFramebuffer(c.FRAMEBUFFER,null),!0===p&&(c.bindFramebuffer(c.DRAW_FRAMEBUFFER,null),c.bindFramebuffer(c.READ_FRAMEBUFFER,null)),c.useProgram(null),c.lineWidth(1),c.scissor(0,0,c.canvas.width,c.canvas.height),c.viewport(0,0,c.canvas.width,c.canvas.height),t={},a=null,N={},n={},f=new WeakMap,g=[],v=null,l=!1,y=null,x=null,_=null,M=null,E=null,b=null,w=null,T=!1,S=null,A=null,R=null,L=null,C=null,F.set(0,0,c.canvas.width,c.canvas.height),B.set(0,0,c.canvas.width,c.canvas.height),m.reset(),r.reset(),i.reset()}}}function Xs(v,s,y,x,f,_,g){const M=f.isWebGL2,t=f.maxTextures,b=f.maxCubemapSize,p=f.maxTextureSize,n=f.maxSamples;const l=s.has("WEBGL_multisampled_render_to_texture")?s.get("WEBGL_multisampled_render_to_texture"):void 0,a=new WeakMap;let h,r=!1;try{r="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function c(e,t){return r?new OffscreenCanvas(e,t):Ft("canvas")}function w(e,t,n,r){let i=1;if((e.width>r||e.height>r)&&(i=r/Math.max(e.width,e.height)),i<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const a=t?Pt:Math.floor;r=a(i*e.width),t=a(i*e.height);void 0===h&&(h=c(r,t));const s=n?c(r,t):h,o=(s.width=r,s.height=t,s.getContext("2d"));return o.drawImage(e,0,0,r,t),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+r+"x"+t+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function T(e){return Lt(e.width)&&Lt(e.height)}function E(e,t){return e.generateMipmaps&&t&&e.minFilter!==Ne&&e.minFilter!==Oe}function S(e){v.generateMipmap(e)}function A(e,t,n,r,i=!1){if(!1===M)return t;if(null!==e){if(void 0!==v[e])return v[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let a=t;return t===v.RED&&(n===v.FLOAT&&(a=v.R32F),n===v.HALF_FLOAT&&(a=v.R16F),n===v.UNSIGNED_BYTE&&(a=v.R8)),t===v.RG&&(n===v.FLOAT&&(a=v.RG32F),n===v.HALF_FLOAT&&(a=v.RG16F),n===v.UNSIGNED_BYTE&&(a=v.RG8)),t===v.RGBA&&(n===v.FLOAT&&(a=v.RGBA32F),n===v.HALF_FLOAT&&(a=v.RGBA16F),n===v.UNSIGNED_BYTE&&(a=r===mt&&!1===i?v.SRGB8_ALPHA8:v.RGBA8),n===v.UNSIGNED_SHORT_4_4_4_4&&(a=v.RGBA4),n===v.UNSIGNED_SHORT_5_5_5_1&&(a=v.RGB5_A1)),a!==v.R16F&&a!==v.R32F&&a!==v.RG16F&&a!==v.RG32F&&a!==v.RGBA16F&&a!==v.RGBA32F||s.get("EXT_color_buffer_float"),a}function R(e,t,n){return!0===E(e,n)||e.isFramebufferTexture&&e.minFilter!==Ne&&e.minFilter!==Oe?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&0<e.mipmaps.length?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function i(e){return e===Ne||e===j||e===X?v.NEAREST:v.LINEAR}function o(e){const t=e.target;var n;t.removeEventListener("dispose",o),e=t,void 0!==(n=x.get(e)).__webglInit&&(v.deleteTexture(n.__webglTexture),x.remove(e)),t.isVideoTexture&&a.delete(t),g.memory.textures--}function L(e){const t=e.target;t.removeEventListener("dispose",L);var e=t,n=e.texture,r=x.get(e),i=x.get(n);if(e){if(void 0!==i.__webglTexture&&(v.deleteTexture(i.__webglTexture),g.memory.textures--),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)v.deleteFramebuffer(r.__webglFramebuffer[e]),r.__webglDepthbuffer&&v.deleteRenderbuffer(r.__webglDepthbuffer[e]);else v.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&v.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&v.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&v.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&v.deleteRenderbuffer(r.__webglDepthRenderbuffer);if(e.isWebGLMultipleRenderTargets)for(let e=0,t=n.length;e<t;e++){var a=x.get(n[e]);a.__webglTexture&&(v.deleteTexture(a.__webglTexture),g.memory.textures--),x.remove(n[e])}x.remove(n),x.remove(e)}}let u=0;function d(e,t){var n,r=x.get(e);if(e.isVideoTexture&&(n=e,i=g.render.frame,a.get(n)!==i&&(a.set(n,i),n.update())),0<e.version&&r.__version!==e.version){var i=e.image;if(void 0===i)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==i.complete)return void N(r,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}y.activeTexture(v.TEXTURE0+t),y.bindTexture(v.TEXTURE_2D,r.__webglTexture)}function m(t,e){var n=x.get(t);if(0<t.version&&n.__version!==t.version){var r=n,i=t,t=e;if(6===i.image.length){I(r,i),y.activeTexture(v.TEXTURE0+t),y.bindTexture(v.TEXTURE_CUBE_MAP,r.__webglTexture),v.pixelStorei(v.UNPACK_FLIP_Y_WEBGL,i.flipY),v.pixelStorei(v.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),v.pixelStorei(v.UNPACK_ALIGNMENT,i.unpackAlignment),v.pixelStorei(v.UNPACK_COLORSPACE_CONVERSION_WEBGL,v.NONE);var d=i&&(i.isCompressedTexture||i.image[0].isCompressedTexture),p=i.image[0]&&i.image[0].isDataTexture;const u=[];for(let e=0;e<6;e++)u[e]=d||p?p?i.image[e].image:i.image[e]:w(i.image[e],!1,!0,b),u[e]=H(i,u[e]);var t=u[0],m=T(t)||M,a=_.convert(i.format,i.encoding),s=_.convert(i.type),o=A(i.internalFormat,a,s,i.encoding),l=M&&!0!==i.isVideoTexture,f=void 0===r.__version;let e=R(i,t,m);D(v.TEXTURE_CUBE_MAP,i,m);let n;if(d){l&&f&&y.texStorage2D(v.TEXTURE_CUBE_MAP,e,o,t.width,t.height);for(let t=0;t<6;t++){n=u[t].mipmaps;for(let e=0;e<n.length;e++){var h=n[e];i.format!==We?null!==a?l?y.compressedTexSubImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_X+t,e,0,0,h.width,h.height,a,h.data):y.compressedTexImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_X+t,e,o,h.width,h.height,0,h.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):l?y.texSubImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_X+t,e,0,0,h.width,h.height,a,s,h.data):y.texImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_X+t,e,o,h.width,h.height,0,a,s,h.data)}}}else{n=i.mipmaps,l&&f&&(0<n.length&&e++,y.texStorage2D(v.TEXTURE_CUBE_MAP,e,o,u[0].width,u[0].height));for(let t=0;t<6;t++)if(p){l?y.texSubImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,u[t].width,u[t].height,a,s,u[t].data):y.texImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,o,u[t].width,u[t].height,0,a,s,u[t].data);for(let e=0;e<n.length;e++){var c=n[e].image[t].image;l?y.texSubImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_X+t,e+1,0,0,c.width,c.height,a,s,c.data):y.texImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_X+t,e+1,o,c.width,c.height,0,a,s,c.data)}}else{l?y.texSubImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,a,s,u[t]):y.texImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,o,a,s,u[t]);for(let e=0;e<n.length;e++){var g=n[e];l?y.texSubImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_X+t,e+1,0,0,a,s,g.image[t]):y.texImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_X+t,e+1,o,a,s,g.image[t])}}}E(i,m)&&S(v.TEXTURE_CUBE_MAP),r.__version=i.version,i.onUpdate&&i.onUpdate(i)}}else y.activeTexture(v.TEXTURE0+e),y.bindTexture(v.TEXTURE_CUBE_MAP,n.__webglTexture)}const C={[k]:v.REPEAT,[Ie]:v.CLAMP_TO_EDGE,[W]:v.MIRRORED_REPEAT},P={[Ne]:v.NEAREST,[j]:v.NEAREST_MIPMAP_NEAREST,[X]:v.NEAREST_MIPMAP_LINEAR,[Oe]:v.LINEAR,[Ue]:v.LINEAR_MIPMAP_NEAREST,[Fe]:v.LINEAR_MIPMAP_LINEAR};function D(e,t,n){n?(v.texParameteri(e,v.TEXTURE_WRAP_S,C[t.wrapS]),v.texParameteri(e,v.TEXTURE_WRAP_T,C[t.wrapT]),e!==v.TEXTURE_3D&&e!==v.TEXTURE_2D_ARRAY||v.texParameteri(e,v.TEXTURE_WRAP_R,C[t.wrapR]),v.texParameteri(e,v.TEXTURE_MAG_FILTER,P[t.magFilter]),v.texParameteri(e,v.TEXTURE_MIN_FILTER,P[t.minFilter])):(v.texParameteri(e,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE),v.texParameteri(e,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE),e!==v.TEXTURE_3D&&e!==v.TEXTURE_2D_ARRAY||v.texParameteri(e,v.TEXTURE_WRAP_R,v.CLAMP_TO_EDGE),t.wrapS===Ie&&t.wrapT===Ie||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),v.texParameteri(e,v.TEXTURE_MAG_FILTER,i(t.magFilter)),v.texParameteri(e,v.TEXTURE_MIN_FILTER,i(t.minFilter)),t.minFilter!==Ne&&t.minFilter!==Oe&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===s.has("EXT_texture_filter_anisotropic")&&(n=s.get("EXT_texture_filter_anisotropic"),t.type===Ge&&!1===s.has("OES_texture_float_linear")||!1===M&&t.type===Ve&&!1===s.has("OES_texture_half_float_linear")||(1<t.anisotropy||x.get(t).__currentAnisotropy)&&(v.texParameterf(e,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,f.getMaxAnisotropy())),x.get(t).__currentAnisotropy=t.anisotropy))}function I(e,t){void 0===e.__webglInit&&(e.__webglInit=!0,t.addEventListener("dispose",o),e.__webglTexture=v.createTexture(),g.memory.textures++)}function N(c,n,e){let u=v.TEXTURE_2D;n.isDataTexture2DArray&&(u=v.TEXTURE_2D_ARRAY),n.isDataTexture3D&&(u=v.TEXTURE_3D),I(c,n),y.activeTexture(v.TEXTURE0+e),y.bindTexture(u,c.__webglTexture),v.pixelStorei(v.UNPACK_FLIP_Y_WEBGL,n.flipY),v.pixelStorei(v.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),v.pixelStorei(v.UNPACK_ALIGNMENT,n.unpackAlignment),v.pixelStorei(v.UNPACK_COLORSPACE_CONVERSION_WEBGL,v.NONE);e=n;var e=!M&&(e.wrapS!==Ie||e.wrapT!==Ie||e.minFilter!==Ne&&e.minFilter!==Oe)&&!1===T(n.image),d=T(e=H(n,w(n.image,e,!1,p)))||M,r=_.convert(n.format,n.encoding);let i=_.convert(n.type),a=A(n.internalFormat,r,i,n.encoding,n.isVideoTexture);D(u,n,d);let s;var o=n.mipmaps,l=M&&!0!==n.isVideoTexture,t=void 0===c.__version,h=R(n,e,d);if(n.isDepthTexture)a=v.DEPTH_COMPONENT,M?a=n.type===Ge?v.DEPTH_COMPONENT32F:n.type===ze?v.DEPTH_COMPONENT24:n.type===ke?v.DEPTH24_STENCIL8:v.DEPTH_COMPONENT16:n.type===Ge&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===je&&a===v.DEPTH_COMPONENT&&n.type!==He&&n.type!==ze&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=He,i=_.convert(n.type)),n.format===Xe&&a===v.DEPTH_COMPONENT&&(a=v.DEPTH_STENCIL,n.type!==ke&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=ke,i=_.convert(n.type))),l&&t?y.texStorage2D(v.TEXTURE_2D,1,a,e.width,e.height):y.texImage2D(v.TEXTURE_2D,0,a,e.width,e.height,0,r,i,null);else if(n.isDataTexture)if(0<o.length&&d){l&&t&&y.texStorage2D(v.TEXTURE_2D,h,a,o[0].width,o[0].height);for(let e=0,t=o.length;e<t;e++)s=o[e],l?y.texSubImage2D(v.TEXTURE_2D,0,0,0,s.width,s.height,r,i,s.data):y.texImage2D(v.TEXTURE_2D,e,a,s.width,s.height,0,r,i,s.data);n.generateMipmaps=!1}else l?(t&&y.texStorage2D(v.TEXTURE_2D,h,a,e.width,e.height),y.texSubImage2D(v.TEXTURE_2D,0,0,0,e.width,e.height,r,i,e.data)):y.texImage2D(v.TEXTURE_2D,0,a,e.width,e.height,0,r,i,e.data);else if(n.isCompressedTexture){l&&t&&y.texStorage2D(v.TEXTURE_2D,h,a,o[0].width,o[0].height);for(let e=0,t=o.length;e<t;e++)s=o[e],n.format!==We?null!==r?l?y.compressedTexSubImage2D(v.TEXTURE_2D,e,0,0,s.width,s.height,r,s.data):y.compressedTexImage2D(v.TEXTURE_2D,e,a,s.width,s.height,0,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):l?y.texSubImage2D(v.TEXTURE_2D,e,0,0,s.width,s.height,r,i,s.data):y.texImage2D(v.TEXTURE_2D,e,a,s.width,s.height,0,r,i,s.data)}else if(n.isDataTexture2DArray)l?(t&&y.texStorage3D(v.TEXTURE_2D_ARRAY,h,a,e.width,e.height,e.depth),y.texSubImage3D(v.TEXTURE_2D_ARRAY,0,0,0,0,e.width,e.height,e.depth,r,i,e.data)):y.texImage3D(v.TEXTURE_2D_ARRAY,0,a,e.width,e.height,e.depth,0,r,i,e.data);else if(n.isDataTexture3D)l?(t&&y.texStorage3D(v.TEXTURE_3D,h,a,e.width,e.height,e.depth),y.texSubImage3D(v.TEXTURE_3D,0,0,0,0,e.width,e.height,e.depth,r,i,e.data)):y.texImage3D(v.TEXTURE_3D,0,a,e.width,e.height,e.depth,0,r,i,e.data);else if(n.isFramebufferTexture)l&&t?y.texStorage2D(v.TEXTURE_2D,h,a,e.width,e.height):y.texImage2D(v.TEXTURE_2D,0,a,e.width,e.height,0,r,i,null);else if(0<o.length&&d){l&&t&&y.texStorage2D(v.TEXTURE_2D,h,a,o[0].width,o[0].height);for(let e=0,t=o.length;e<t;e++)s=o[e],l?y.texSubImage2D(v.TEXTURE_2D,e,0,0,r,i,s):y.texImage2D(v.TEXTURE_2D,e,a,r,i,s);n.generateMipmaps=!1}else l?(t&&y.texStorage2D(v.TEXTURE_2D,h,a,e.width,e.height),y.texSubImage2D(v.TEXTURE_2D,0,0,0,r,i,e)):y.texImage2D(v.TEXTURE_2D,0,a,r,i,e);E(n,d)&&S(u),c.__version=n.version,n.onUpdate&&n.onUpdate(n)}function O(e,t,n,r,i){var a=_.convert(n.format,n.encoding),s=_.convert(n.type),o=A(n.internalFormat,a,s,n.encoding);x.get(t).__hasExternalTextures||(i===v.TEXTURE_3D||i===v.TEXTURE_2D_ARRAY?y.texImage3D(i,0,o,t.width,t.height,t.depth,0,a,s,null):y.texImage2D(i,0,o,t.width,t.height,0,a,s,null)),y.bindFramebuffer(v.FRAMEBUFFER,e),t.useRenderToTexture?l.framebufferTexture2DMultisampleEXT(v.FRAMEBUFFER,r,i,x.get(n).__webglTexture,0,B(t)):v.framebufferTexture2D(v.FRAMEBUFFER,r,i,x.get(n).__webglTexture,0),y.bindFramebuffer(v.FRAMEBUFFER,null)}function U(t,n,r){if(v.bindRenderbuffer(v.RENDERBUFFER,t),n.depthBuffer&&!n.stencilBuffer){let e=v.DEPTH_COMPONENT16;r||n.useRenderToTexture?((i=n.depthTexture)&&i.isDepthTexture&&(i.type===Ge?e=v.DEPTH_COMPONENT32F:i.type===ze&&(e=v.DEPTH_COMPONENT24)),i=B(n),n.useRenderToTexture?l.renderbufferStorageMultisampleEXT(v.RENDERBUFFER,i,e,n.width,n.height):v.renderbufferStorageMultisample(v.RENDERBUFFER,i,e,n.width,n.height)):v.renderbufferStorage(v.RENDERBUFFER,e,n.width,n.height),v.framebufferRenderbuffer(v.FRAMEBUFFER,v.DEPTH_ATTACHMENT,v.RENDERBUFFER,t)}else{var i,e;n.depthBuffer&&n.stencilBuffer?(i=B(n),r&&n.useRenderbuffer?v.renderbufferStorageMultisample(v.RENDERBUFFER,i,v.DEPTH24_STENCIL8,n.width,n.height):n.useRenderToTexture?l.renderbufferStorageMultisampleEXT(v.RENDERBUFFER,i,v.DEPTH24_STENCIL8,n.width,n.height):v.renderbufferStorage(v.RENDERBUFFER,v.DEPTH_STENCIL,n.width,n.height),v.framebufferRenderbuffer(v.FRAMEBUFFER,v.DEPTH_STENCIL_ATTACHMENT,v.RENDERBUFFER,t)):(i=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,t=_.convert(i.format,i.encoding),e=_.convert(i.type),t=A(i.internalFormat,t,e,i.encoding),e=B(n),r&&n.useRenderbuffer?v.renderbufferStorageMultisample(v.RENDERBUFFER,e,t,n.width,n.height):n.useRenderToTexture?l.renderbufferStorageMultisampleEXT(v.RENDERBUFFER,e,t,n.width,n.height):v.renderbufferStorage(v.RENDERBUFFER,t,n.width,n.height))}v.bindRenderbuffer(v.RENDERBUFFER,null)}function F(t){const n=x.get(t);var e=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!n.__autoAllocateDepthBuffer){if(e)throw new Error("target.depthTexture not supported in Cube render targets");var r=n.__webglFramebuffer,i=t;if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(y.bindFramebuffer(v.FRAMEBUFFER,r),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");x.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),d(i.depthTexture,0);var r=x.get(i.depthTexture).__webglTexture,a=B(i);if(i.depthTexture.format===je)i.useRenderToTexture?l.framebufferTexture2DMultisampleEXT(v.FRAMEBUFFER,v.DEPTH_ATTACHMENT,v.TEXTURE_2D,r,0,a):v.framebufferTexture2D(v.FRAMEBUFFER,v.DEPTH_ATTACHMENT,v.TEXTURE_2D,r,0);else{if(i.depthTexture.format!==Xe)throw new Error("Unknown depthTexture format");i.useRenderToTexture?l.framebufferTexture2DMultisampleEXT(v.FRAMEBUFFER,v.DEPTH_STENCIL_ATTACHMENT,v.TEXTURE_2D,r,0,a):v.framebufferTexture2D(v.FRAMEBUFFER,v.DEPTH_STENCIL_ATTACHMENT,v.TEXTURE_2D,r,0)}}else if(e){n.__webglDepthbuffer=[];for(let e=0;e<6;e++)y.bindFramebuffer(v.FRAMEBUFFER,n.__webglFramebuffer[e]),n.__webglDepthbuffer[e]=v.createRenderbuffer(),U(n.__webglDepthbuffer[e],t,!1)}else y.bindFramebuffer(v.FRAMEBUFFER,n.__webglFramebuffer),n.__webglDepthbuffer=v.createRenderbuffer(),U(n.__webglDepthbuffer,t,!1);y.bindFramebuffer(v.FRAMEBUFFER,null)}function B(e){return M&&(e.useRenderbuffer||e.useRenderToTexture)?Math.min(n,e.samples):0}function H(e,t){var n=e.encoding,r=e.format,i=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===xt||n!==pt&&(n===mt?!1===M?!0===s.has("EXT_sRGB")&&r===We?(e.format=xt,e.minFilter=Oe,e.generateMipmaps=!1):t=jt.sRGBToLinear(t):r===We&&i===Be||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",n)),t}let z=!1,G=!1;this.allocateTextureUnit=function(){var e=u;return e>=t&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+t),u+=1,e},this.resetTextureUnits=function(){u=0},this.setTexture2D=d,this.setTexture2DArray=function(e,t){var n=x.get(e);0<e.version&&n.__version!==e.version?N(n,e,t):(y.activeTexture(v.TEXTURE0+t),y.bindTexture(v.TEXTURE_2D_ARRAY,n.__webglTexture))},this.setTexture3D=function(e,t){var n=x.get(e);0<e.version&&n.__version!==e.version?N(n,e,t):(y.activeTexture(v.TEXTURE0+t),y.bindTexture(v.TEXTURE_3D,n.__webglTexture))},this.setTextureCube=m,this.rebindTextures=function(e,t,n){var r=x.get(e);void 0!==t&&O(r.__webglFramebuffer,e,e.texture,v.COLOR_ATTACHMENT0,v.TEXTURE_2D),void 0!==n&&F(e)},this.setupRenderTarget=function(n){var t=n.texture;const r=x.get(n),i=x.get(t);n.addEventListener("dispose",L),!0!==n.isWebGLMultipleRenderTargets&&(void 0===i.__webglTexture&&(i.__webglTexture=v.createTexture()),i.__version=t.version,g.memory.textures++);var e,a,s=!0===n.isWebGLCubeRenderTarget,c=!0===n.isWebGLMultipleRenderTargets,u=t.isDataTexture3D||t.isDataTexture2DArray,o=T(n)||M;if(s){r.__webglFramebuffer=[];for(let e=0;e<6;e++)r.__webglFramebuffer[e]=v.createFramebuffer()}else if(r.__webglFramebuffer=v.createFramebuffer(),c)if(f.drawBuffers){var d=n.texture;for(let e=0,t=d.length;e<t;e++){const h=x.get(d[e]);void 0===h.__webglTexture&&(h.__webglTexture=v.createTexture(),g.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else n.useRenderbuffer&&(M?(r.__webglMultisampledFramebuffer=v.createFramebuffer(),r.__webglColorRenderbuffer=v.createRenderbuffer(),v.bindRenderbuffer(v.RENDERBUFFER,r.__webglColorRenderbuffer),e=_.convert(t.format,t.encoding),a=_.convert(t.type),e=A(t.internalFormat,e,a,t.encoding),a=B(n),v.renderbufferStorageMultisample(v.RENDERBUFFER,a,e,n.width,n.height),y.bindFramebuffer(v.FRAMEBUFFER,r.__webglMultisampledFramebuffer),v.framebufferRenderbuffer(v.FRAMEBUFFER,v.COLOR_ATTACHMENT0,v.RENDERBUFFER,r.__webglColorRenderbuffer),v.bindRenderbuffer(v.RENDERBUFFER,null),n.depthBuffer&&(r.__webglDepthRenderbuffer=v.createRenderbuffer(),U(r.__webglDepthRenderbuffer,n,!0)),y.bindFramebuffer(v.FRAMEBUFFER,null)):console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2."));if(s){y.bindTexture(v.TEXTURE_CUBE_MAP,i.__webglTexture),D(v.TEXTURE_CUBE_MAP,t,o);for(let e=0;e<6;e++)O(r.__webglFramebuffer[e],n,t,v.COLOR_ATTACHMENT0,v.TEXTURE_CUBE_MAP_POSITIVE_X+e);E(t,o)&&S(v.TEXTURE_CUBE_MAP),y.unbindTexture()}else if(c){var p=n.texture;for(let e=0,t=p.length;e<t;e++){var l=p[e],m=x.get(l);y.bindTexture(v.TEXTURE_2D,m.__webglTexture),D(v.TEXTURE_2D,l,o),O(r.__webglFramebuffer,n,l,v.COLOR_ATTACHMENT0+e,v.TEXTURE_2D),E(l,o)&&S(v.TEXTURE_2D)}y.unbindTexture()}else{let e=v.TEXTURE_2D;u&&(M?(a=t.isDataTexture3D,e=a?v.TEXTURE_3D:v.TEXTURE_2D_ARRAY):console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),y.bindTexture(e,i.__webglTexture),D(e,t,o),O(r.__webglFramebuffer,n,t,v.COLOR_ATTACHMENT0,e),E(t,o)&&S(e),y.unbindTexture()}n.depthBuffer&&F(n)},this.updateRenderTargetMipmap=function(n){var r=T(n)||M,i=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let e=0,t=i.length;e<t;e++){var a,s=i[e];E(s,r)&&(a=n.isWebGLCubeRenderTarget?v.TEXTURE_CUBE_MAP:v.TEXTURE_2D,s=x.get(s).__webglTexture,y.bindTexture(a,s),S(a),y.unbindTexture())}},this.updateMultisampleRenderTarget=function(t){if(t.useRenderbuffer)if(M){var n=t.width,r=t.height;let e=v.COLOR_BUFFER_BIT;const s=[v.COLOR_ATTACHMENT0];var i=t.stencilBuffer?v.DEPTH_STENCIL_ATTACHMENT:v.DEPTH_ATTACHMENT,a=(t.depthBuffer&&s.push(i),t.ignoreDepthForMultisampleCopy||(t.depthBuffer&&(e|=v.DEPTH_BUFFER_BIT),t.stencilBuffer&&(e|=v.STENCIL_BUFFER_BIT)),x.get(t));y.bindFramebuffer(v.READ_FRAMEBUFFER,a.__webglMultisampledFramebuffer),y.bindFramebuffer(v.DRAW_FRAMEBUFFER,a.__webglFramebuffer),t.ignoreDepthForMultisampleCopy&&(v.invalidateFramebuffer(v.READ_FRAMEBUFFER,[i]),v.invalidateFramebuffer(v.DRAW_FRAMEBUFFER,[i])),v.blitFramebuffer(0,0,n,r,0,0,n,r,e,v.NEAREST),v.invalidateFramebuffer(v.READ_FRAMEBUFFER,s),y.bindFramebuffer(v.READ_FRAMEBUFFER,null),y.bindFramebuffer(v.DRAW_FRAMEBUFFER,a.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.setupDepthRenderbuffer=F,this.setupFrameBufferTexture=O,this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===z&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),z=!0),e=e.texture),d(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===G&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),G=!0),e=e.texture),m(e,t)}}function qs(r,i,e){const a=e.isWebGL2;return{convert:function(e,t=null){let n;if(e===Be)return r.UNSIGNED_BYTE;if(e===u)return r.UNSIGNED_SHORT_4_4_4_4;if(e===d)return r.UNSIGNED_SHORT_5_5_5_1;if(e===s)return r.BYTE;if(e===o)return r.SHORT;if(e===He)return r.UNSIGNED_SHORT;if(e===c)return r.INT;if(e===ze)return r.UNSIGNED_INT;if(e===Ge)return r.FLOAT;if(e===Ve)return a?r.HALF_FLOAT:(n=i.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(e===p)return r.ALPHA;if(e===We)return r.RGBA;if(e===f)return r.LUMINANCE;if(e===g)return r.LUMINANCE_ALPHA;if(e===je)return r.DEPTH_COMPONENT;if(e===Xe)return r.DEPTH_STENCIL;if(e===v)return r.RED;if(e===m)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),r.RGBA;if(e===xt)return n=i.get("EXT_sRGB"),null!==n?n.SRGB_ALPHA_EXT:null;if(e===y)return r.RED_INTEGER;if(e===x)return r.RG;if(e===T)return r.RG_INTEGER;if(e===L)return r.RGBA_INTEGER;if(e===D||e===I||e===O||e===U)if(t===mt){if(n=i.get("WEBGL_compressed_texture_s3tc_srgb"),null===n)return null;if(e===D)return n.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===I)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===O)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===U)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(n=i.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(e===D)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===I)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===O)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===U)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===F||e===B||e===H||e===z){if(n=i.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(e===F)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===B)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===H)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===z)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===G)return n=i.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if(e===qe||e===Ye){if(n=i.get("WEBGL_compressed_texture_etc"),null===n)return null;if(e===qe)return t===mt?n.COMPRESSED_SRGB8_ETC2:n.COMPRESSED_RGB8_ETC2;if(e===Ye)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:n.COMPRESSED_RGBA8_ETC2_EAC}if(e===Ze||e===Je||e===Ke||e===Qe||e===$e||e===et||e===tt||e===nt||e===rt||e===it||e===at||e===st||e===ot||e===lt){if(n=i.get("WEBGL_compressed_texture_astc"),null===n)return null;if(e===Ze)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:n.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Je)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:n.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Ke)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:n.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Qe)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:n.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===$e)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:n.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===et)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:n.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===tt)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:n.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===nt)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:n.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===rt)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:n.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===it)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:n.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===at)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:n.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===st)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:n.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===ot)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:n.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===lt)return t===mt?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:n.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===ht){if(n=i.get("EXT_texture_compression_bptc"),null===n)return null;if(e===ht)return t===mt?n.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:n.COMPRESSED_RGBA_BPTC_UNORM_EXT}return e===ke?a?r.UNSIGNED_INT_24_8:(n=i.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class Ys extends ai{constructor(e=[]){super(),this.cameras=e}}Ys.prototype.isArrayCamera=!0;class Zs extends M{constructor(){super(),this.type="Group"}}Zs.prototype.isGroup=!0;const Js={type:"move"};class Ks{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Zs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Zs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Ae,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Ae),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Zs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Ae,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Ae),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,c){let n=null,r=null,u=null;const i=this._targetRay,a=this._grip,s=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==i&&(n=t.getPose(e.targetRaySpace,c),null!==n&&(i.matrix.fromArray(n.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),n.linearVelocity?(i.hasLinearVelocity=!0,i.linearVelocity.copy(n.linearVelocity)):i.hasLinearVelocity=!1,n.angularVelocity?(i.hasAngularVelocity=!0,i.angularVelocity.copy(n.angularVelocity)):i.hasAngularVelocity=!1,this.dispatchEvent(Js))),s&&e.hand){u=!0;for(const o of e.hand.values()){var d=t.getJointPose(o,c);if(void 0===s.joints[o.jointName]){const h=new Zs;h.matrixAutoUpdate=!1,h.visible=!1,s.joints[o.jointName]=h,s.add(h)}const l=s.joints[o.jointName];null!==d&&(l.matrix.fromArray(d.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.jointRadius=d.radius),l.visible=null!==d}const m=s.joints["index-finger-tip"];var p=s.joints["thumb-tip"],p=m.position.distanceTo(p.position);s.inputState.pinching&&.025<p?(s.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!s.inputState.pinching&&p<=.015&&(s.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==a&&e.gripSpace&&(r=t.getPose(e.gripSpace,c),null!==r&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1));return null!==i&&(i.visible=null!==n),null!==a&&(a.visible=null!==r),null!==s&&(s.visible=null!==u),this}}class Qs extends qt{constructor(e,t,n,r,i,a,s,o,l,h){if((h=void 0!==h?h:je)!==je&&h!==Xe)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,r,i,a,s,o,h,n=void 0===(n=void 0===n&&h===je?He:n)&&h===Xe?ke:n,l),this.image={width:e,height:t},this.magFilter=void 0!==s?s:Ne,this.minFilter=void 0!==o?o:Ne,this.flipY=!1,this.generateMipmaps=!1}}Qs.prototype.isDepthTexture=!0;class $s extends _t{constructor(h,i){super();const t=this;let m=null,s=1,g=null,n="local-floor";const l=h.extensions.has("WEBGL_multisampled_render_to_texture");let v=null,y=null,c=null,u=null,x,_=null;const a=i.getContextAttributes();let e=null,d=null;const p=[],o=new Map,M=new ai,E=(M.layers.enable(1),M.viewport=new Zt,new ai),b=(E.layers.enable(2),E.viewport=new Zt,[M,E]),f=new Ys;f.layers.enable(1),f.layers.enable(2);let w=null,T=null;function S(e){const t=o.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function A(){o.forEach(function(e,t){e.disconnect(t)}),o.clear(),w=null,T=null,h.setRenderTarget(e),u=null,c=null,y=null,m=null,d=null,I.stop(),t.isPresenting=!1,t.dispatchEvent({type:"sessionend"})}function R(t){var n=m.inputSources;for(let e=0;e<p.length;e++)o.set(n[e],p[e]);for(let e=0;e<t.removed.length;e++){var r=t.removed[e];const a=o.get(r);a&&(a.dispatchEvent({type:"disconnected",data:r}),o.delete(r))}for(let e=0;e<t.added.length;e++){var i=t.added[e];const s=o.get(i);s&&s.dispatchEvent({type:"connected",data:i})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=p[e];return void 0===t&&(t=new Ks,p[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=p[e];return void 0===t&&(t=new Ks,p[e]=t),t.getGripSpace()},this.getHand=function(e){let t=p[e];return void 0===t&&(t=new Ks,p[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){s=e,!0===t.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){n=e,!0===t.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return g},this.getBaseLayer=function(){return null!==c?c:u},this.getBinding=function(){return y},this.getFrame=function(){return _},this.getSession=function(){return m},this.setSession=async function(r){if(m=r,null!==m){if(e=h.getRenderTarget(),m.addEventListener("select",S),m.addEventListener("selectstart",S),m.addEventListener("selectend",S),m.addEventListener("squeeze",S),m.addEventListener("squeezestart",S),m.addEventListener("squeezeend",S),m.addEventListener("end",A),m.addEventListener("inputsourceschange",R),!0!==a.xrCompatible&&await i.makeXRCompatible(),void 0===m.renderState.layers||!1===h.capabilities.isWebGL2){r={antialias:void 0!==m.renderState.layers||a.antialias,alpha:a.alpha,depth:a.depth,stencil:a.stencil,framebufferScaleFactor:s};u=new XRWebGLLayer(m,i,r),m.updateRenderState({baseLayer:u}),d=new Jt(u.framebufferWidth,u.framebufferHeight,{format:We,type:Be,encoding:h.outputEncoding})}else{x=a.antialias;let e=null,t=null,n=null;a.depth&&(n=a.stencil?i.DEPTH24_STENCIL8:i.DEPTH_COMPONENT24,e=a.stencil?Xe:je,t=a.stencil?ke:He);r={colorFormat:h.outputEncoding===mt?i.SRGB8_ALPHA8:i.RGBA8,depthFormat:n,scaleFactor:s};y=new XRWebGLBinding(m,i),c=y.createProjectionLayer(r),m.updateRenderState({layers:[c]}),d=x?new Qt(c.textureWidth,c.textureHeight,{format:We,type:Be,depthTexture:new Qs(c.textureWidth,c.textureHeight,t,void 0,void 0,void 0,void 0,void 0,void 0,e),stencilBuffer:a.stencil,ignoreDepth:c.ignoreDepthValues,useRenderToTexture:l,encoding:h.outputEncoding}):new Jt(c.textureWidth,c.textureHeight,{format:We,type:Be,depthTexture:new Qs(c.textureWidth,c.textureHeight,t,void 0,void 0,void 0,void 0,void 0,void 0,e),stencilBuffer:a.stencil,ignoreDepth:c.ignoreDepthValues,encoding:h.outputEncoding})}d.isXRRenderTarget=!0,this.setFoveation(1),g=await m.requestReferenceSpace(n),I.setContext(m),I.start(),t.isPresenting=!0,t.dispatchEvent({type:"sessionstart"})}};const L=new Ae,C=new Ae;function P(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null!==m){f.near=E.near=M.near=e.near,f.far=E.far=M.far=e.far,w===f.near&&T===f.far||(m.updateRenderState({depthNear:f.near,depthFar:f.far}),w=f.near,T=f.far);var t,n,r,i,a,s,o,c,u,d,p=e.parent,l=f.cameras;P(f,p);for(let e=0;e<l.length;e++)P(l[e],p);f.matrixWorld.decompose(f.position,f.quaternion,f.scale),e.position.copy(f.position),e.quaternion.copy(f.quaternion),e.scale.copy(f.scale),e.matrix.copy(f.matrix),e.matrixWorld.copy(f.matrixWorld);const h=e.children;for(let e=0,t=h.length;e<t;e++)h[e].updateMatrixWorld(!0);2===l.length?(e=f,t=M,n=E,L.setFromMatrixPosition(t.matrixWorld),C.setFromMatrixPosition(n.matrixWorld),r=L.distanceTo(C),i=t.projectionMatrix.elements,n=n.projectionMatrix.elements,a=i[14]/(i[10]-1),s=i[14]/(i[10]+1),o=(i[9]+1)/i[5],c=(i[9]-1)/i[5],i=(i[8]-1)/i[0],n=(n[8]+1)/n[0],u=a*i,d=a*n,i=(n=r/(n-i))*-i,t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(i),e.translateZ(n),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),t=a+n,a=s+n,e.projectionMatrix.makePerspective(u-i,r-i+d,o*s/a*t,c*s/a*t,t,a)):f.projectionMatrix.copy(M.projectionMatrix)}},this.getCamera=function(){return f},this.getFoveation=function(){return null!==c?c.fixedFoveation:null!==u?u.fixedFoveation:void 0},this.setFoveation=function(e){null!==c&&(c.fixedFoveation=e),null!==u&&void 0!==u.fixedFoveation&&(u.fixedFoveation=e)};let D=null;const I=new gi;I.setAnimationLoop(function(e,t){if(v=t.getViewerPose(g),_=t,null!==v){var r=v.views;null!==u&&(h.setRenderTargetFramebuffer(d,u.framebuffer),h.setRenderTarget(d));let n=!1;r.length!==f.cameras.length&&(f.cameras.length=0,n=!0);for(let t=0;t<r.length;t++){var i,a=r[t];let e=null;null!==u?e=u.getViewport(a):(i=y.getViewSubImage(c,a),e=i.viewport,0===t&&(h.setRenderTargetTextures(d,i.colorTexture,c.ignoreDepthValues?void 0:i.depthStencilTexture),h.setRenderTarget(d)));const o=b[t];o.matrix.fromArray(a.transform.matrix),o.projectionMatrix.fromArray(a.projectionMatrix),o.viewport.set(e.x,e.y,e.width,e.height),0===t&&f.matrix.copy(o.matrix),!0===n&&f.cameras.push(o)}}var n=m.inputSources;for(let e=0;e<p.length;e++){const l=p[e];var s=n[e];l.update(s,t,g)}D&&D(e,t),_=null}),this.setAnimationLoop=function(e){D=e},this.dispose=function(){}}}function eo(a){function d(e,t){e.opacity.value=t.opacity,t.color&&e.diffuse.value.copy(t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.specularMap&&(e.specularMap.value=t.specularMap),0<t.alphaTest&&(e.alphaTest.value=t.alphaTest);var n=a.get(t).envMap;n&&(e.envMap.value=n,e.flipEnvMap.value=n.isCubeTexture&&!1===n.isRenderTargetTexture?-1:1,e.reflectivity.value=t.reflectivity,e.ior.value=t.ior,e.refractionRatio.value=t.refractionRatio),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);let r;t.map?r=t.map:t.specularMap?r=t.specularMap:t.displacementMap?r=t.displacementMap:t.normalMap?r=t.normalMap:t.bumpMap?r=t.bumpMap:t.roughnessMap?r=t.roughnessMap:t.metalnessMap?r=t.metalnessMap:t.alphaMap?r=t.alphaMap:t.emissiveMap?r=t.emissiveMap:t.clearcoatMap?r=t.clearcoatMap:t.clearcoatNormalMap?r=t.clearcoatNormalMap:t.clearcoatRoughnessMap?r=t.clearcoatRoughnessMap:t.specularIntensityMap?r=t.specularIntensityMap:t.specularColorMap?r=t.specularColorMap:t.transmissionMap?r=t.transmissionMap:t.thicknessMap?r=t.thicknessMap:t.sheenColorMap?r=t.sheenColorMap:t.sheenRoughnessMap&&(r=t.sheenRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix));let i;t.aoMap?i=t.aoMap:t.lightMap&&(i=t.lightMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uv2Transform.value.copy(i.matrix))}function p(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===Ce&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===Ce&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),a.get(t).envMap&&(e.envMapIntensity.value=t.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(t,n,c,r,i){if(n.isMeshBasicMaterial)d(t,n);else if(n.isMeshLambertMaterial)d(t,n),u=t,(h=n).emissiveMap&&(u.emissiveMap.value=h.emissiveMap);else if(n.isMeshToonMaterial){d(t,n);u=t,h=n;h.gradientMap&&(u.gradientMap.value=h.gradientMap),h.emissiveMap&&(u.emissiveMap.value=h.emissiveMap),h.bumpMap&&(u.bumpMap.value=h.bumpMap,u.bumpScale.value=h.bumpScale,h.side===Ce&&(u.bumpScale.value*=-1)),h.normalMap&&(u.normalMap.value=h.normalMap,u.normalScale.value.copy(h.normalScale),h.side===Ce&&u.normalScale.value.negate()),h.displacementMap&&(u.displacementMap.value=h.displacementMap,u.displacementScale.value=h.displacementScale,u.displacementBias.value=h.displacementBias)}else if(n.isMeshPhongMaterial){d(t,n);var e=t,a=n;e.specular.value.copy(a.specular),e.shininess.value=Math.max(a.shininess,1e-4),a.emissiveMap&&(e.emissiveMap.value=a.emissiveMap),a.bumpMap&&(e.bumpMap.value=a.bumpMap,e.bumpScale.value=a.bumpScale,a.side===Ce&&(e.bumpScale.value*=-1)),a.normalMap&&(e.normalMap.value=a.normalMap,e.normalScale.value.copy(a.normalScale),a.side===Ce&&e.normalScale.value.negate()),a.displacementMap&&(e.displacementMap.value=a.displacementMap,e.displacementScale.value=a.displacementScale,e.displacementBias.value=a.displacementBias)}else if(n.isMeshStandardMaterial)d(t,n),n.isMeshPhysicalMaterial?(e=i,p(a=t,i=n),a.ior.value=i.ior,0<i.sheen&&(a.sheenColor.value.copy(i.sheenColor).multiplyScalar(i.sheen),a.sheenRoughness.value=i.sheenRoughness,i.sheenColorMap&&(a.sheenColorMap.value=i.sheenColorMap),i.sheenRoughnessMap&&(a.sheenRoughnessMap.value=i.sheenRoughnessMap)),0<i.clearcoat&&(a.clearcoat.value=i.clearcoat,a.clearcoatRoughness.value=i.clearcoatRoughness,i.clearcoatMap&&(a.clearcoatMap.value=i.clearcoatMap),i.clearcoatRoughnessMap&&(a.clearcoatRoughnessMap.value=i.clearcoatRoughnessMap),i.clearcoatNormalMap&&(a.clearcoatNormalScale.value.copy(i.clearcoatNormalScale),a.clearcoatNormalMap.value=i.clearcoatNormalMap,i.side===Ce&&a.clearcoatNormalScale.value.negate())),0<i.transmission&&(a.transmission.value=i.transmission,a.transmissionSamplerMap.value=e.texture,a.transmissionSamplerSize.value.set(e.width,e.height),i.transmissionMap&&(a.transmissionMap.value=i.transmissionMap),a.thickness.value=i.thickness,i.thicknessMap&&(a.thicknessMap.value=i.thicknessMap),a.attenuationDistance.value=i.attenuationDistance,a.attenuationColor.value.copy(i.attenuationColor)),a.specularIntensity.value=i.specularIntensity,a.specularColor.value.copy(i.specularColor),i.specularIntensityMap&&(a.specularIntensityMap.value=i.specularIntensityMap),i.specularColorMap&&(a.specularColorMap.value=i.specularColorMap)):p(t,n);else if(n.isMeshMatcapMaterial){d(t,n);var i=t,s=n;s.matcap&&(i.matcap.value=s.matcap),s.bumpMap&&(i.bumpMap.value=s.bumpMap,i.bumpScale.value=s.bumpScale,s.side===Ce&&(i.bumpScale.value*=-1)),s.normalMap&&(i.normalMap.value=s.normalMap,i.normalScale.value.copy(s.normalScale),s.side===Ce&&i.normalScale.value.negate()),s.displacementMap&&(i.displacementMap.value=s.displacementMap,i.displacementScale.value=s.displacementScale,i.displacementBias.value=s.displacementBias)}else if(n.isMeshDepthMaterial)d(t,n),i=t,(s=n).displacementMap&&(i.displacementMap.value=s.displacementMap,i.displacementScale.value=s.displacementScale,i.displacementBias.value=s.displacementBias);else if(n.isMeshDistanceMaterial){d(t,n);var i=t,o=n;o.displacementMap&&(i.displacementMap.value=o.displacementMap,i.displacementScale.value=o.displacementScale,i.displacementBias.value=o.displacementBias),i.referencePosition.value.copy(o.referencePosition),i.nearDistance.value=o.nearDistance,i.farDistance.value=o.farDistance}else if(n.isMeshNormalMaterial){d(t,n);i=t,o=n;o.bumpMap&&(i.bumpMap.value=o.bumpMap,i.bumpScale.value=o.bumpScale,o.side===Ce&&(i.bumpScale.value*=-1)),o.normalMap&&(i.normalMap.value=o.normalMap,i.normalScale.value.copy(o.normalScale),o.side===Ce&&i.normalScale.value.negate()),o.displacementMap&&(i.displacementMap.value=o.displacementMap,i.displacementScale.value=o.displacementScale,i.displacementBias.value=o.displacementBias)}else if(n.isLineBasicMaterial)i=n,(l=t).diffuse.value.copy(i.color),l.opacity.value=i.opacity,n.isLineDashedMaterial&&(l=n,(i=t).dashSize.value=l.dashSize,i.totalSize.value=l.dashSize+l.gapSize,i.scale.value=l.scale);else if(n.isPointsMaterial){i=t;l=n;i.diffuse.value.copy(l.color),i.opacity.value=l.opacity,i.size.value=l.size*c,i.scale.value=.5*r,l.map&&(i.map.value=l.map);l.alphaMap&&(i.alphaMap.value=l.alphaMap);0<l.alphaTest&&(i.alphaTest.value=l.alphaTest);let e;l.map?e=l.map:l.alphaMap&&(e=l.alphaMap);void 0!==e&&(!0===e.matrixAutoUpdate&&e.updateMatrix(),i.uvTransform.value.copy(e.matrix))}else if(n.isSpriteMaterial){c=t;r=n;c.diffuse.value.copy(r.color),c.opacity.value=r.opacity,c.rotation.value=r.rotation,r.map&&(c.map.value=r.map);r.alphaMap&&(c.alphaMap.value=r.alphaMap);0<r.alphaTest&&(c.alphaTest.value=r.alphaTest);let e;r.map?e=r.map:r.alphaMap&&(e=r.alphaMap);void 0!==e&&(!0===e.matrixAutoUpdate&&e.updateMatrix(),c.uvTransform.value.copy(e.matrix))}else n.isShadowMaterial?(t.color.value.copy(n.color),t.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1);var l,u,h}}}function to(e={}){const i=void 0!==e.canvas?e.canvas:function(){const e=Ft("canvas");return e.style.display="block",e}(),t=void 0!==e.context?e.context:null,n=void 0!==e.alpha&&e.alpha,r=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,p=void 0!==e.antialias&&e.antialias,s=void 0===e.premultipliedAlpha||e.premultipliedAlpha,o=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,l=void 0!==e.powerPreference?e.powerPreference:"default",h=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let m=null,A=null;const c=[],u=[],R=(this.domElement=i,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=pt,this.physicallyCorrectLights=!1,this.toneMapping=De,this.toneMappingExposure=1,this);let f=!1,g=0,v=0,N=null,O=-1,U=null;const y=new Zt,x=new Zt;let _=null,M=i.width,F=i.height,B=1,E=null,b=null;const w=new Zt(0,0,M,F),T=new Zt(0,0,M,F);let S=!1;const H=new fi;let z=!1,G=!1,V=null;const k=new Re,W=new Ae,j={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function X(){return null===N?B:1}let L=t;function q(t,n){for(let e=0;e<t.length;e++){var r=t[e],r=i.getContext(r,n);if(null!==r)return r}return null}try{var Y={alpha:!0,depth:r,stencil:a,antialias:p,premultipliedAlpha:s,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:h};if("setAttribute"in i&&i.setAttribute("data-engine","three.js r137"),i.addEventListener("webglcontextlost",fe,!1),i.addEventListener("webglcontextrestored",ge,!1),null===L){const Se=["webgl2","webgl","experimental-webgl"];if(!0===R.isWebGL1Renderer&&Se.shift(),L=q(Se,Y),null===L)throw q(Se)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===L.getShaderPrecisionFormat&&(L.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}let d,C,P,Z,D,I,J,K,Q,$,ee,te,ne,re,ie,ae,se,oe,le,he,ce,ue,de;function pe(){d=new Yi(L),C=new bi(L,d,e),d.init(C),ue=new qs(L,d,C),P=new js(L,d,C),Z=new Ki(L),D=new Ls,I=new Xs(L,d,P,D,C,ue,Z),J=new Ti(R),K=new qi(R),Q=new vi(L,C),de=new Mi(L,d,Q,C),$=new Zi(L,Q,Z,de),ee=new ra(L,$,Q,Z),le=new na(L,C,I),ae=new wi(D),te=new Rs(R,J,K,d,C,de,ae),ne=new eo(D),re=new Is,ie=new Hs(d,C),oe=new _i(R,J,P,ee,n,s),se=new Ws(R,ee,C),he=new Ei(L,d,Z,C),ce=new Ji(L,d,Z,C),Z.programs=te.programs,R.capabilities=C,R.extensions=d,R.properties=D,R.renderLists=re,R.shadowMap=se,R.state=P,R.info=Z}pe();const me=new $s(R,L);function fe(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),f=!0}function ge(){console.log("THREE.WebGLRenderer: Context Restored."),f=!1;var e=Z.autoReset,t=se.enabled,n=se.autoUpdate,r=se.needsUpdate,i=se.type;pe(),Z.autoReset=e,se.enabled=t,se.autoUpdate=n,se.needsUpdate=r,se.type=i}function ve(e){const t=e.target;t.removeEventListener("dispose",ve),e=t;{var n=e;const r=D.get(n).programs;void 0!==r&&(r.forEach(function(e){te.releaseProgram(e)}),n.isShaderMaterial&&te.releaseShaderCache(n))}D.remove(e)}this.xr=me,this.getContext=function(){return L},this.getContextAttributes=function(){return L.getContextAttributes()},this.forceContextLoss=function(){const e=d.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=d.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return B},this.setPixelRatio=function(e){void 0!==e&&(B=e,this.setSize(M,F,!1))},this.getSize=function(e){return e.set(M,F)},this.setSize=function(e,t,n){me.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(M=e,F=t,i.width=Math.floor(e*B),i.height=Math.floor(t*B),!1!==n&&(i.style.width=e+"px",i.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return e.set(M*B,F*B).floor()},this.setDrawingBufferSize=function(e,t,n){M=e,F=t,B=n,i.width=Math.floor(e*n),i.height=Math.floor(t*n),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(y)},this.getViewport=function(e){return e.copy(w)},this.setViewport=function(e,t,n,r){e.isVector4?w.set(e.x,e.y,e.z,e.w):w.set(e,t,n,r),P.viewport(y.copy(w).multiplyScalar(B).floor())},this.getScissor=function(e){return e.copy(T)},this.setScissor=function(e,t,n,r){e.isVector4?T.set(e.x,e.y,e.z,e.w):T.set(e,t,n,r),P.scissor(x.copy(T).multiplyScalar(B).floor())},this.getScissorTest=function(){return S},this.setScissorTest=function(e){P.setScissorTest(S=e)},this.setOpaqueSort=function(e){E=e},this.setTransparentSort=function(e){b=e},this.getClearColor=function(e){return e.copy(oe.getClearColor())},this.setClearColor=function(){oe.setClearColor.apply(oe,arguments)},this.getClearAlpha=function(){return oe.getClearAlpha()},this.setClearAlpha=function(){oe.setClearAlpha.apply(oe,arguments)},this.clear=function(e,t,n){let r=0;void 0!==e&&!e||(r|=L.COLOR_BUFFER_BIT),void 0!==t&&!t||(r|=L.DEPTH_BUFFER_BIT),void 0!==n&&!n||(r|=L.STENCIL_BUFFER_BIT),L.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){i.removeEventListener("webglcontextlost",fe,!1),i.removeEventListener("webglcontextrestored",ge,!1),re.dispose(),ie.dispose(),D.dispose(),J.dispose(),K.dispose(),ee.dispose(),de.dispose(),te.dispose(),me.dispose(),me.removeEventListener("sessionstart",xe),me.removeEventListener("sessionend",_e),V&&(V.dispose(),V=null),Me.stop()},this.renderBufferDirect=function(e,t,n,r,i,a){null===t&&(t=j);var s=i.isMesh&&i.matrixWorld.determinant()<0,e=function(e,t,n,r,i){!0!==t.isScene&&(t=j);I.resetTextureUnits();const c=t.fog,u=r.isMeshStandardMaterial?t.environment:null,d=null===N?R.outputEncoding:!0===N.isXRRenderTarget?N.texture.encoding:pt,p=(r.isMeshStandardMaterial?K:J).get(r.envMap||u),m=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,f=!!r.normalMap&&!!n.attributes.tangent,g=!!n.morphAttributes.position,v=!!n.morphAttributes.normal,y=n.morphAttributes.position?n.morphAttributes.position.length:0,x=r.toneMapped?R.toneMapping:De,a=D.get(r),_=A.state.lights;{var M;!0===z&&(!0!==G&&e===U||(M=e===U&&r.id===O,ae.setState(r,e,M)))}let E=!1;r.version===a.__version?(a.needsLights&&a.lightsStateVersion!==_.state.version||a.outputEncoding!==d||i.isInstancedMesh&&!1===a.instancing||!i.isInstancedMesh&&!0===a.instancing||i.isSkinnedMesh&&!1===a.skinning||!i.isSkinnedMesh&&!0===a.skinning||a.envMap!==p||r.fog&&a.fog!==c||void 0!==a.numClippingPlanes&&(a.numClippingPlanes!==ae.numPlanes||a.numIntersection!==ae.numIntersection)||a.vertexAlphas!==m||a.vertexTangents!==f||a.morphTargets!==g||a.morphNormals!==v||a.toneMapping!==x||!0===C.isWebGL2&&a.morphTargetsCount!==y)&&(E=!0):(E=!0,a.__version=r.version);let s=a.currentProgram;!0===E&&(s=we(r,t,i));let b=!1,o=!1,w=!1;const l=s.getUniforms(),T=a.uniforms;P.useProgram(s.program)&&(b=!0,o=!0,w=!0);r.id!==O&&(O=r.id,o=!0);if(b||U!==e){if(l.setValue(L,"projectionMatrix",e.projectionMatrix),C.logarithmicDepthBuffer&&l.setValue(L,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),U!==e&&(U=e,o=!0,w=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const S=l.map.cameraPosition;void 0!==S&&S.setValue(L,W.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&l.setValue(L,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||i.isSkinnedMesh)&&l.setValue(L,"viewMatrix",e.matrixWorldInverse)}if(i.isSkinnedMesh){l.setOptional(L,i,"bindMatrix"),l.setOptional(L,i,"bindMatrixInverse");const h=i.skeleton;h&&(C.floatVertexTextures?(null===h.boneTexture&&h.computeBoneTexture(),l.setValue(L,"boneTexture",h.boneTexture,I),l.setValue(L,"boneTextureSize",h.boneTextureSize)):l.setOptional(L,h,"boneMatrices"))}!n||void 0===n.morphAttributes.position&&void 0===n.morphAttributes.normal||le.update(i,n,r,s);!o&&a.receiveShadow===i.receiveShadow||(a.receiveShadow=i.receiveShadow,l.setValue(L,"receiveShadow",i.receiveShadow));o&&(l.setValue(L,"toneMappingExposure",R.toneMappingExposure),a.needsLights&&function(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}(T,w),c&&r.fog&&ne.refreshFogUniforms(T,c),ne.refreshMaterialUniforms(T,r,B,F,V),os.upload(L,a.uniformsList,T,I));r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(os.upload(L,a.uniformsList,T,I),r.uniformsNeedUpdate=!1);r.isSpriteMaterial&&l.setValue(L,"center",i.center);return l.setValue(L,"modelViewMatrix",i.modelViewMatrix),l.setValue(L,"normalMatrix",i.normalMatrix),l.setValue(L,"modelMatrix",i.matrixWorld),s}(e,t,n,r,i);P.setMaterial(r,s);let o=n.index;t=n.attributes.position;if(null===o){if(void 0===t||0===t.count)return}else if(0===o.count)return;let l=1,h=(!0===r.wireframe&&(o=$.getWireframeAttribute(n),l=2),de.setup(i,r,e,n,o),he);null!==o&&(s=Q.get(o),h=ce,h.setIndex(s));var e=(null!==o?o:t).count,s=n.drawRange.start*l,t=n.drawRange.count*l,c=null!==a?a.start*l:0,a=null!==a?a.count*l:1/0,u=Math.max(s,c),e=Math.min(e,s+t,c+a)-1,s=Math.max(0,e-u+1);if(0!==s){if(i.isMesh)!0===r.wireframe?(P.setLineWidth(r.wireframeLinewidth*X()),h.setMode(L.LINES)):h.setMode(L.TRIANGLES);else if(i.isLine){let e=r.linewidth;void 0===e&&(e=1),P.setLineWidth(e*X()),i.isLineSegments?h.setMode(L.LINES):i.isLineLoop?h.setMode(L.LINE_LOOP):h.setMode(L.LINE_STRIP)}else i.isPoints?h.setMode(L.POINTS):i.isSprite&&h.setMode(L.TRIANGLES);i.isInstancedMesh?h.renderInstances(u,s,i.count):n.isInstancedBufferGeometry?(t=Math.min(n.instanceCount,n._maxInstanceCount),h.renderInstances(u,s,t)):h.render(u,s)}},this.compile=function(r,t){A=ie.get(r),A.init(),u.push(A),r.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(A.pushLight(e),e.castShadow&&A.pushShadow(e))}),A.setupLights(R.physicallyCorrectLights),r.traverse(function(t){var n=t.material;if(n)if(Array.isArray(n))for(let e=0;e<n.length;e++)we(n[e],r,t);else we(n,r,t)}),u.pop(),A=null};let ye=null;function xe(){Me.stop()}function _e(){Me.start()}const Me=new gi;function Ee(e,t,n,r){var i=e.opaque,a=e.transmissive,e=e.transparent;if(A.setupLightsView(n),0<a.length){var s=i,o=t,l=n;if(null===V){const h=!0===p&&!0===C.isWebGL2?Qt:Jt;V=new h(1024,1024,{generateMipmaps:!0,type:null!==ue.convert(Ve)?Ve:Be,minFilter:Fe,magFilter:Ne,wrapS:Ie,wrapT:Ie,useRenderToTexture:d.has("WEBGL_multisampled_render_to_texture")})}var c=R.getRenderTarget(),u=(R.setRenderTarget(V),R.clear(),R.toneMapping);R.toneMapping=De,be(s,o,l),R.toneMapping=u,I.updateMultisampleRenderTarget(V),I.updateRenderTargetMipmap(V),R.setRenderTarget(c)}r&&P.viewport(y.copy(r)),0<i.length&&be(i,t,n),0<a.length&&be(a,t,n),0<e.length&&be(e,t,n)}function be(n,r,d){var p=!0===r.isScene?r.overrideMaterial:null;for(let e=0,t=n.length;e<t;e++){var i=n[e];const u=i.object;var a,s,o,l,h,c,m=i.geometry,f=null===p?i.material:p,i=i.group;u.layers.test(d.layers)&&(c=h=l=o=s=a=void 0,a=u,s=r,o=d,l=m,h=f,c=i,a.onBeforeRender(R,s,o,l,h,c),a.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,a.matrixWorld),a.normalMatrix.getNormalMatrix(a.modelViewMatrix),h.onBeforeRender(R,s,o,l,a,c),!0===h.transparent&&h.side===Pe?(h.side=Ce,h.needsUpdate=!0,R.renderBufferDirect(o,s,l,h,a,c),h.side=Le,h.needsUpdate=!0,R.renderBufferDirect(o,s,l,h,a,c),h.side=Pe):R.renderBufferDirect(o,s,l,h,a,c),a.onAfterRender(R,s,o,l,h,c))}}function we(e,t,n){!0!==t.isScene&&(t=j);const r=D.get(e);var i=A.state.lights,a=A.state.shadowsArray,c=i.state.version;const s=te.getParameters(e,i.state,a,t,n);a=te.getProgramCacheKey(s);let o=r.programs,l=(r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?K:J).get(e.envMap||r.environment),void 0===o&&(e.addEventListener("dispose",ve),o=new Map,r.programs=o),o.get(a));if(void 0!==l){if(r.currentProgram===l&&r.lightsStateVersion===c)return Te(e,s),l}else s.uniforms=te.getUniforms(e),e.onBuild(n,s,R),e.onBeforeCompile(s,R),l=te.acquireProgram(s,a),o.set(a,l),r.uniforms=s.uniforms;const h=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(h.clippingPlanes=ae.uniform),Te(e,s),r.needsLights=(t=e).isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights,r.lightsStateVersion=c,r.needsLights&&(h.ambientLightColor.value=i.state.ambient,h.lightProbe.value=i.state.probe,h.directionalLights.value=i.state.directional,h.directionalLightShadows.value=i.state.directionalShadow,h.spotLights.value=i.state.spot,h.spotLightShadows.value=i.state.spotShadow,h.rectAreaLights.value=i.state.rectArea,h.ltc_1.value=i.state.rectAreaLTC1,h.ltc_2.value=i.state.rectAreaLTC2,h.pointLights.value=i.state.point,h.pointLightShadows.value=i.state.pointShadow,h.hemisphereLights.value=i.state.hemi,h.directionalShadowMap.value=i.state.directionalShadowMap,h.directionalShadowMatrix.value=i.state.directionalShadowMatrix,h.spotShadowMap.value=i.state.spotShadowMap,h.spotShadowMatrix.value=i.state.spotShadowMatrix,h.pointShadowMap.value=i.state.pointShadowMap,h.pointShadowMatrix.value=i.state.pointShadowMatrix);n=l.getUniforms(),a=os.seqWithValue(n.seq,h);return r.currentProgram=l,r.uniformsList=a,l}function Te(e,t){const n=D.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}Me.setAnimationLoop(function(e){ye&&ye(e)}),"undefined"!=typeof window&&Me.setContext(window),this.setAnimationLoop=function(e){ye=e,me.setAnimationLoop(e),null===e?Me.stop():Me.start()},me.addEventListener("sessionstart",xe),me.addEventListener("sessionend",_e),this.render=function(n,e){if(void 0===e||!0===e.isCamera){if(!0!==f){!0===n.autoUpdate&&n.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===me.enabled&&!0===me.isPresenting&&(!0===me.cameraAutoUpdate&&me.updateCamera(e),e=me.getCamera()),!0===n.isScene&&n.onBeforeRender(R,n,e,N),A=ie.get(n,u.length),A.init(),u.push(A),k.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),H.setFromProjectionMatrix(k),G=this.localClippingEnabled,z=ae.init(this.clippingPlanes,G,e),m=re.get(n,c.length),m.init(),c.push(m),function u(n,r,i,a){if(!1===n.visible)return;const t=n.layers.test(r.layers);if(t)if(n.isGroup)i=n.renderOrder;else if(n.isLOD)!0===n.autoUpdate&&n.update(r);else if(n.isLight)A.pushLight(n),n.castShadow&&A.pushShadow(n);else if(n.isSprite){if(!n.frustumCulled||H.intersectsSprite(n)){a&&W.setFromMatrixPosition(n.matrixWorld).applyMatrix4(k);const p=ee.update(n),e=n.material;e.visible&&m.push(n,p,e,i,W.z,null)}}else if((n.isMesh||n.isLine||n.isPoints)&&(n.isSkinnedMesh&&n.skeleton.frame!==Z.render.frame&&(n.skeleton.update(),n.skeleton.frame=Z.render.frame),!n.frustumCulled||H.intersectsObject(n))){a&&W.setFromMatrixPosition(n.matrixWorld).applyMatrix4(k);const s=ee.update(n),o=n.material;if(Array.isArray(o)){const l=s.groups;for(let e=0,t=l.length;e<t;e++){const h=l[e],c=o[h.materialIndex];c&&c.visible&&m.push(n,s,c,i,W.z,h)}}else o.visible&&m.push(n,s,o,i,W.z,null)}const d=n.children;for(let e=0,t=d.length;e<t;e++)u(d[e],r,i,a)}(n,e,0,R.sortObjects),m.finish(),!0===R.sortObjects&&m.sort(E,b),!0===z&&ae.beginShadows();var t=A.state.shadowsArray;if(se.render(t,n,e),!0===z&&ae.endShadows(),!0===this.info.autoReset&&this.info.reset(),oe.render(m,n),A.setupLights(R.physicallyCorrectLights),e.isArrayCamera){var r=e.cameras;for(let e=0,t=r.length;e<t;e++){var i=r[e];Ee(m,n,i,i.viewport)}}else Ee(m,n,e);null!==N&&(I.updateMultisampleRenderTarget(N),I.updateRenderTargetMipmap(N)),!0===n.isScene&&n.onAfterRender(R,n,e),P.buffers.depth.setTest(!0),P.buffers.depth.setMask(!0),P.buffers.color.setMask(!0),P.setPolygonOffset(!1),de.resetDefaultState(),O=-1,U=null,u.pop(),A=0<u.length?u[u.length-1]:null,c.pop(),m=0<c.length?c[c.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return g},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return N},this.setRenderTargetTextures=function(e,t,n){D.get(e.texture).__webglTexture=t,D.get(e.depthTexture).__webglTexture=n;const r=D.get(e);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||e.useRenderToTexture&&(console.warn("render-to-texture extension was disabled because an external texture was provided"),e.useRenderToTexture=!1,e.useRenderbuffer=!0))},this.setRenderTargetFramebuffer=function(e,t){const n=D.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,n=0){N=e,g=t,v=n;let r=!0;var i;e&&(void 0!==(i=D.get(e)).__useDefaultFramebuffer?(P.bindFramebuffer(L.FRAMEBUFFER,null),r=!1):void 0===i.__webglFramebuffer?I.setupRenderTarget(e):i.__hasExternalTextures&&I.rebindTextures(e,D.get(e.texture).__webglTexture,D.get(e.depthTexture).__webglTexture));let a=null,s=!1,o=!1;_=e?(((i=e.texture).isDataTexture3D||i.isDataTexture2DArray)&&(o=!0),i=D.get(e).__webglFramebuffer,e.isWebGLCubeRenderTarget?(a=i[t],s=!0):a=e.useRenderbuffer?D.get(e).__webglMultisampledFramebuffer:i,y.copy(e.viewport),x.copy(e.scissor),e.scissorTest):(y.copy(w).multiplyScalar(B).floor(),x.copy(T).multiplyScalar(B).floor(),S),P.bindFramebuffer(L.FRAMEBUFFER,a)&&C.drawBuffers&&r&&P.drawBuffers(e,a),P.viewport(y),P.scissor(x),P.setScissorTest(_),s?(i=D.get(e.texture),L.framebufferTexture2D(L.FRAMEBUFFER,L.COLOR_ATTACHMENT0,L.TEXTURE_CUBE_MAP_POSITIVE_X+t,i.__webglTexture,n)):o&&(i=D.get(e.texture),e=t||0,L.framebufferTextureLayer(L.FRAMEBUFFER,L.COLOR_ATTACHMENT0,i.__webglTexture,n||0,e)),O=-1},this.readRenderTargetPixels=function(t,n,r,i,a,s,o){if(t&&t.isWebGLRenderTarget){let e=D.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==o&&(e=e[o]),e){P.bindFramebuffer(L.FRAMEBUFFER,e);try{var l=t.texture,h=l.format,c=l.type;if(h!==We&&ue.convert(h)!==L.getParameter(L.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");var u=c===Ve&&(d.has("EXT_color_buffer_half_float")||C.isWebGL2&&d.has("EXT_color_buffer_float"));if(!(c===Be||ue.convert(c)===L.getParameter(L.IMPLEMENTATION_COLOR_READ_TYPE)||c===Ge&&(C.isWebGL2||d.has("OES_texture_float")||d.has("WEBGL_color_buffer_float"))||u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");L.checkFramebufferStatus(L.FRAMEBUFFER)===L.FRAMEBUFFER_COMPLETE?0<=n&&n<=t.width-i&&0<=r&&r<=t.height-a&&L.readPixels(n,r,i,a,ue.convert(h),ue.convert(c),s):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const e=null!==N?D.get(N).__webglFramebuffer:null;P.bindFramebuffer(L.FRAMEBUFFER,e)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t,n=0){var r,i;!0===t.isFramebufferTexture?(i=Math.pow(2,-n),r=Math.floor(t.image.width*i),i=Math.floor(t.image.height*i),I.setTexture2D(t,0),L.copyTexSubImage2D(L.TEXTURE_2D,n,0,0,e.x,e.y,r,i),P.unbindTexture()):console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.")},this.copyTextureToTexture=function(e,t,n,r=0){var i=t.image.width,a=t.image.height,s=ue.convert(n.format),o=ue.convert(n.type);I.setTexture2D(n,0),L.pixelStorei(L.UNPACK_FLIP_Y_WEBGL,n.flipY),L.pixelStorei(L.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),L.pixelStorei(L.UNPACK_ALIGNMENT,n.unpackAlignment),t.isDataTexture?L.texSubImage2D(L.TEXTURE_2D,r,e.x,e.y,i,a,s,o,t.image.data):t.isCompressedTexture?L.compressedTexSubImage2D(L.TEXTURE_2D,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):L.texSubImage2D(L.TEXTURE_2D,r,e.x,e.y,s,o,t.image),0===r&&n.generateMipmaps&&L.generateMipmap(L.TEXTURE_2D),P.unbindTexture()},this.copyTextureToTexture3D=function(t,n,r,i,a=0){if(R.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var s=t.max.x-t.min.x+1,o=t.max.y-t.min.y+1,l=t.max.z-t.min.z+1,h=ue.convert(i.format),u=ue.convert(i.type);let e;if(i.isDataTexture3D)I.setTexture3D(i,0),e=L.TEXTURE_3D;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");I.setTexture2DArray(i,0),e=L.TEXTURE_2D_ARRAY}L.pixelStorei(L.UNPACK_FLIP_Y_WEBGL,i.flipY),L.pixelStorei(L.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),L.pixelStorei(L.UNPACK_ALIGNMENT,i.unpackAlignment);var d=L.getParameter(L.UNPACK_ROW_LENGTH),p=L.getParameter(L.UNPACK_IMAGE_HEIGHT),m=L.getParameter(L.UNPACK_SKIP_PIXELS),f=L.getParameter(L.UNPACK_SKIP_ROWS),g=L.getParameter(L.UNPACK_SKIP_IMAGES),c=r.isCompressedTexture?r.mipmaps[0]:r.image;L.pixelStorei(L.UNPACK_ROW_LENGTH,c.width),L.pixelStorei(L.UNPACK_IMAGE_HEIGHT,c.height),L.pixelStorei(L.UNPACK_SKIP_PIXELS,t.min.x),L.pixelStorei(L.UNPACK_SKIP_ROWS,t.min.y),L.pixelStorei(L.UNPACK_SKIP_IMAGES,t.min.z),r.isDataTexture||r.isDataTexture3D?L.texSubImage3D(e,a,n.x,n.y,n.z,s,o,l,h,u,c.data):r.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),L.compressedTexSubImage3D(e,a,n.x,n.y,n.z,s,o,l,h,c.data)):L.texSubImage3D(e,a,n.x,n.y,n.z,s,o,l,h,u,c),L.pixelStorei(L.UNPACK_ROW_LENGTH,d),L.pixelStorei(L.UNPACK_IMAGE_HEIGHT,p),L.pixelStorei(L.UNPACK_SKIP_PIXELS,m),L.pixelStorei(L.UNPACK_SKIP_ROWS,f),L.pixelStorei(L.UNPACK_SKIP_IMAGES,g),0===a&&i.generateMipmaps&&L.generateMipmap(e),P.unbindTexture()}},this.initTexture=function(e){I.setTexture2D(e,0),P.unbindTexture()},this.resetState=function(){g=0,v=0,N=null,P.reset(),de.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}to.prototype.isWebGLRenderer=!0;class no extends to{}class ro{constructor(e,t=25e-5){this.name="",this.color=new _(e),this.density=t}clone(){return new ro(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}ro.prototype.isFogExp2=no.prototype.isWebGL1Renderer=!0;class io{constructor(e,t=1,n=1e3){this.name="",this.color=new _(e),this.near=t,this.far=n}clone(){return new io(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}io.prototype.isFog=!0;class ao extends M{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}ao.prototype.isScene=!0;class so{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=a,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Tt()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(n,r,i){n*=this.stride,i*=r.stride;for(let e=0,t=this.stride;e<t;e++)this.array[n+e]=r.array[i+e];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Tt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);e=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]);const t=new this.constructor(e,this.stride);return t.setUsage(this.usage),t}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Tt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}so.prototype.isInterleavedBuffer=!0;const oo=new Ae;class lo{constructor(e,t,n,r=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(n){for(let e=0,t=this.data.count;e<t;e++)oo.x=this.getX(e),oo.y=this.getY(e),oo.z=this.getZ(e),oo.applyMatrix4(n),this.setXYZ(e,oo.x,oo.y,oo.z);return this}applyNormalMatrix(n){for(let e=0,t=this.count;e<t;e++)oo.x=this.getX(e),oo.y=this.getY(e),oo.z=this.getZ(e),oo.applyNormalMatrix(n),this.setXYZ(e,oo.x,oo.y,oo.z);return this}transformDirection(n){for(let e=0,t=this.count;e<t;e++)oo.x=this.getX(e),oo.y=this.getY(e),oo.z=this.getZ(e),oo.transformDirection(n),this.setXYZ(e,oo.x,oo.y,oo.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this}setXYZW(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new lo(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let e=0;e<this.count;e++){var t=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)n.push(this.data.array[t+e])}return new vr(new this.array.constructor(n),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let e=0;e<this.count;e++){var t=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)n.push(this.data.array[t+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}}}lo.prototype.isInterleavedBufferAttribute=!0;class ho extends pr{constructor(e){super(),this.type="SpriteMaterial",this.color=new _(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}ho.prototype.isSpriteMaterial=!0;let co;const uo=new Ae,po=new Ae,mo=new Ae,fo=new ne,go=new ne,vo=new Re,yo=new Ae,xo=new Ae,_o=new Ae,Mo=new ne,Eo=new ne,bo=new ne;class wo extends M{constructor(e){var t;super(),this.type="Sprite",void 0===co&&(co=new S,t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new so(t,5),co.setIndex([0,1,2,0,2,3]),co.setAttribute("position",new lo(t,3,0,!1)),co.setAttribute("uv",new lo(t,2,3,!1))),this.geometry=co,this.material=void 0!==e?e:new ho,this.center=new ne(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),po.setFromMatrixScale(this.matrixWorld),vo.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),mo.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&po.multiplyScalar(-mo.z);var n=this.material.rotation;let r,i;0!==n&&(i=Math.cos(n),r=Math.sin(n));var n=this.center,a=(To(yo.set(-.5,-.5,0),mo,n,po,r,i),To(xo.set(.5,-.5,0),mo,n,po,r,i),To(_o.set(.5,.5,0),mo,n,po,r,i),Mo.set(0,0),Eo.set(1,0),bo.set(1,1),e.ray.intersectTriangle(yo,xo,_o,!1,uo));null===a&&(To(xo.set(-.5,.5,0),mo,n,po,r,i),Eo.set(0,1),null===(a=e.ray.intersectTriangle(yo,_o,xo,!1,uo)))||((n=e.ray.origin.distanceTo(uo))<e.near||n>e.far||t.push({distance:n,point:uo.clone(),uv:ur.getUV(uo,yo,xo,_o,Mo,Eo,bo,new ne),face:null,object:this}))}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function To(e,t,n,r,i,a){fo.subVectors(e,n).addScalar(.5).multiply(r),void 0!==i?(go.x=a*fo.x-i*fo.y,go.y=i*fo.x+a*fo.y):go.copy(fo),e.copy(t),e.x+=go.x,e.y+=go.y,e.applyMatrix4(vo)}wo.prototype.isSprite=!0;const So=new Ae,Ao=new Ae;class Ro extends M{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);var n=e.levels;for(let e=0,t=n.length;e<t;e++){const r=n[e];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let r;for(r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(n){var r=this.levels;if(0<r.length){let e,t;for(e=1,t=r.length;e<t&&!(n<r[e].distance);e++);return r[e-1].object}return null}raycast(e,t){var n;0<this.levels.length&&(So.setFromMatrixPosition(this.matrixWorld),n=e.ray.origin.distanceTo(So),this.getObjectForDistance(n).raycast(e,t))}update(n){const r=this.levels;if(1<r.length){So.setFromMatrixPosition(n.matrixWorld),Ao.setFromMatrixPosition(this.matrixWorld);var i=So.distanceTo(Ao)/n.zoom;r[0].object.visible=!0;let e,t;for(e=1,t=r.length;e<t&&i>=r[e].distance;e++)r[e-1].object.visible=!1,r[e].object.visible=!0;for(this._currentLevel=e-1;e<t;e++)r[e].object.visible=!1}}toJSON(e){const n=super.toJSON(e);!1===this.autoUpdate&&(n.object.autoUpdate=!1),n.object.levels=[];var r=this.levels;for(let e=0,t=r.length;e<t;e++){var i=r[e];n.object.levels.push({object:i.object.uuid,distance:i.distance})}return n}}const Lo=new Ae,Co=new Zt,Po=new Zt,Do=new Ae,Io=new Re;class No extends Kr{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Re,this.bindMatrixInverse=new Re}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const n=new Zt,r=this.geometry.attributes.skinWeight;for(let e=0,t=r.count;e<t;e++){n.x=r.getX(e),n.y=r.getY(e),n.z=r.getZ(e),n.w=r.getW(e);var i=1/n.manhattanLength();i!=1/0?n.multiplyScalar(i):n.set(1,0,0,0),r.setXYZW(e,n.x,n.y,n.z,n.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){var n=this.skeleton,r=this.geometry;Co.fromBufferAttribute(r.attributes.skinIndex,e),Po.fromBufferAttribute(r.attributes.skinWeight,e),Lo.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){var i,a=Po.getComponent(e);0!==a&&(i=Co.getComponent(e),Io.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),t.addScaledVector(Do.copy(Lo).applyMatrix4(Io),a))}return t.applyMatrix4(this.bindMatrixInverse)}}No.prototype.isSkinnedMesh=!0;class Oo extends M{constructor(){super(),this.type="Bone"}}Oo.prototype.isBone=!0;class Uo extends qt{constructor(e=null,t=1,n=1,r,i,a,s,o,l=Ne,h=Ne,c,u){super(null,a,s,o,l,h,r,i,c,u),this.image={data:e,width:t,height:n},this.magFilter=l,this.minFilter=h,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Uo.prototype.isDataTexture=!0;const Fo=new Re,Bo=new Re;class Ho{constructor(e=[],t=[]){this.uuid=Tt(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){var e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Re)}}calculateInverses(){for(let e=this.boneInverses.length=0,t=this.bones.length;e<t;e++){const n=new Re;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const r=this.bones[e];r&&(r.parent&&r.parent.isBone?(r.matrix.copy(r.parent.matrixWorld).invert(),r.matrix.multiply(r.matrixWorld)):r.matrix.copy(r.matrixWorld),r.matrix.decompose(r.position,r.quaternion,r.scale))}}update(){var n=this.bones,r=this.boneInverses,i=this.boneMatrices;const e=this.boneTexture;for(let e=0,t=n.length;e<t;e++){var a=n[e]?n[e].matrixWorld:Bo;Fo.multiplyMatrices(a,r[e]),Fo.toArray(i,16*e)}null!==e&&(e.needsUpdate=!0)}clone(){return new Ho(this.bones,this.boneInverses)}computeBoneTexture(){var e=Ct(Math.sqrt(4*this.bones.length));e=Math.max(e,4);const t=new Float32Array(e*e*4),n=(t.set(this.boneMatrices),new Uo(t,e,e,We,Ge));return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(n){for(let e=0,t=this.bones.length;e<t;e++){var r=this.bones[e];if(r.name===n)return r}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(n,r){this.uuid=n.uuid;for(let t=0,e=n.bones.length;t<e;t++){var i=n.bones[t];let e=r[i];void 0===e&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),e=new Oo),this.bones.push(e),this.boneInverses.push((new Re).fromArray(n.boneInverses[t]))}return this.init(),this}toJSON(){const n={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};n.uuid=this.uuid;var r=this.bones,i=this.boneInverses;for(let e=0,t=r.length;e<t;e++){var a=r[e];n.bones.push(a.uuid);const s=i[e];n.boneInverses.push(s.toArray())}return n}}class zo extends vr{constructor(e,t,n,r=1){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}zo.prototype.isInstancedBufferAttribute=!0;const Go=new Re,Vo=new Re,ko=[],Wo=new Kr;class jo extends Kr{constructor(e,t,n){super(e,t),this.instanceMatrix=new zo(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,r){var t=this.matrixWorld,i=this.count;if(Wo.geometry=this.geometry,Wo.material=this.material,void 0!==Wo.material)for(let n=0;n<i;n++){this.getMatrixAt(n,Go),Vo.multiplyMatrices(t,Go),Wo.matrixWorld=Vo,Wo.raycast(e,ko);for(let e=0,t=ko.length;e<t;e++){const a=ko[e];a.instanceId=n,a.object=this,r.push(a)}ko.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new zo(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}jo.prototype.isInstancedMesh=!0;class Xo extends pr{constructor(e){super(),this.type="LineBasicMaterial",this.color=new _(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}Xo.prototype.isLineBasicMaterial=!0;const qo=new Ae,Yo=new Ae,Zo=new Re,Jo=new Cn,Ko=new En;class Qo extends M{constructor(e=new S,t=new Xo){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var n=e.attributes.position;const r=[0];for(let e=1,t=n.count;e<t;e++)qo.fromBufferAttribute(n,e-1),Yo.fromBufferAttribute(n,e),r[e]=r[e-1],r[e]+=qo.distanceTo(Yo);e.setAttribute("lineDistance",new V(r,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(n,c){const e=this.geometry;var t=this.matrixWorld,u=n.params.Line.threshold,r=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),Ko.copy(e.boundingSphere),Ko.applyMatrix4(t),Ko.radius+=u,!1!==n.ray.intersectsSphere(Ko)){Zo.copy(t).invert(),Jo.copy(n.ray).applyMatrix4(Zo);var t=u/((this.scale.x+this.scale.y+this.scale.z)/3),d=t*t;const a=new Ae,s=new Ae,o=new Ae,l=new Ae;var p=this.isLineSegments?2:1;if(e.isBufferGeometry){const h=e.index;var m,i=e.attributes.position;if(null!==h)for(let e=Math.max(0,r.start),t=Math.min(h.count,r.start+r.count)-1;e<t;e+=p){var f=h.getX(e),g=h.getX(e+1),f=(a.fromBufferAttribute(i,f),s.fromBufferAttribute(i,g),Jo.distanceSqToSegment(a,s,l,o));d<f||(l.applyMatrix4(this.matrixWorld),(g=n.ray.origin.distanceTo(l))<n.near||g>n.far||c.push({distance:g,point:o.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this}))}else for(let e=Math.max(0,r.start),t=Math.min(i.count,r.start+r.count)-1;e<t;e+=p)a.fromBufferAttribute(i,e),s.fromBufferAttribute(i,e+1),d<Jo.distanceSqToSegment(a,s,l,o)||(l.applyMatrix4(this.matrixWorld),(m=n.ray.origin.distanceTo(l))<n.near||m>n.far||c.push({distance:m,point:o.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this}))}else e.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(0<n.length){var r=t[n[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){var i=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Qo.prototype.isLine=!0;const $o=new Ae,el=new Ae;class tl extends Qo{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var n=e.attributes.position;const r=[];for(let e=0,t=n.count;e<t;e+=2)$o.fromBufferAttribute(n,e),el.fromBufferAttribute(n,e+1),r[e]=0===e?0:r[e-1],r[e+1]=r[e]+$o.distanceTo(el);e.setAttribute("lineDistance",new V(r,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}tl.prototype.isLineSegments=!0;class nl extends Qo{constructor(e,t){super(e,t),this.type="LineLoop"}}nl.prototype.isLineLoop=!0;class rl extends pr{constructor(e){super(),this.type="PointsMaterial",this.color=new _(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}rl.prototype.isPointsMaterial=!0;const il=new Re,al=new Cn,sl=new En,ol=new Ae;class ll extends M{constructor(e=new S,t=new rl){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(n,r){const e=this.geometry;var i=this.matrixWorld,t=n.params.Points.threshold,a=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),sl.copy(e.boundingSphere),sl.applyMatrix4(i),sl.radius+=t,!1!==n.ray.intersectsSphere(sl)){il.copy(i).invert(),al.copy(n.ray).applyMatrix4(il);var t=t/((this.scale.x+this.scale.y+this.scale.z)/3),s=t*t;if(e.isBufferGeometry){const h=e.index;var o=e.attributes.position;if(null!==h)for(let e=Math.max(0,a.start),t=Math.min(h.count,a.start+a.count);e<t;e++){var l=h.getX(e);ol.fromBufferAttribute(o,l),hl(ol,l,s,i,n,r,this)}else for(let e=Math.max(0,a.start),t=Math.min(o.count,a.start+a.count);e<t;e++)ol.fromBufferAttribute(o,e),hl(ol,e,s,i,n,r,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(0<n.length){var r=t[n[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){var i=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function hl(e,t,n,r,i,a,s){var o=al.distanceSqToPoint(e);if(o<n){const l=new Ae;al.closestPointToPoint(e,l),l.applyMatrix4(r);n=i.ray.origin.distanceTo(l);n<i.near||n>i.far||a.push({distance:n,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:s})}}ll.prototype.isPoints=!0;class cl extends qt{constructor(t,e,n,r,i,a,s,o,l){super(t,e,n,r,i,a,s,o,l),this.minFilter=void 0!==a?a:Oe,this.magFilter=void 0!==i?i:Oe,this.generateMipmaps=!1;const h=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(function e(){h.needsUpdate=!0,t.requestVideoFrameCallback(e)})}clone(){return new this.constructor(this.image).copy(this)}update(){var e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class ul extends qt{constructor(e,t,n){super({width:e,height:t}),this.format=n,this.magFilter=Ne,this.minFilter=Ne,this.generateMipmaps=!1,this.needsUpdate=!0}}class dl extends qt{constructor(e,t,n,r,i,a,s,o,l,h,c,u){super(null,a,s,o,l,h,r,i,c,u),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}dl.prototype.isCompressedTexture=ul.prototype.isFramebufferTexture=cl.prototype.isVideoTexture=!0;class pl extends qt{constructor(e,t,n,r,i,a,s,o,l){super(e,t,n,r,i,a,s,o,l),this.needsUpdate=!0}}pl.prototype.isCanvasTexture=!0;class ml extends S{constructor(n=1,r=8,i=0,a=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:n,segments:r,thetaStart:i,thetaLength:a},r=Math.max(3,r);const t=[],s=[],o=[],l=[],h=new Ae,c=new ne;s.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let e=0,t=3;e<=r;e++,t+=3){var u=i+e/r*a;h.x=n*Math.cos(u),h.y=n*Math.sin(u),s.push(h.x,h.y,h.z),o.push(0,0,1),c.x=(s[t]/n+1)/2,c.y=(s[t+1]/n+1)/2,l.push(c.x,c.y)}for(let e=1;e<=r;e++)t.push(e,e+1,0);this.setIndex(t),this.setAttribute("position",new V(s,3)),this.setAttribute("normal",new V(o,3)),this.setAttribute("uv",new V(l,2))}static fromJSON(e){return new ml(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class fl extends S{constructor(p=1,m=1,t=1,f=8,r=1,e=!1,y=0,x=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:p,radiusBottom:m,height:t,radialSegments:f,heightSegments:r,openEnded:e,thetaStart:y,thetaLength:x};const _=this,g=(f=Math.floor(f),r=Math.floor(r),[]),M=[],E=[],b=[];let v=0;const i=[],w=t/2;let T=0;{const a=new Ae,s=new Ae;let n=0;var o=(m-p)/t;for(let e=0;e<=r;e++){const C=[];var l=e/r,h=l*(m-p)+p;for(let e=0;e<=f;e++){var c=e/f,u=c*x+y,d=Math.sin(u),u=Math.cos(u);s.x=h*d,s.y=-l*t+w,s.z=h*u,M.push(s.x,s.y,s.z),a.set(d,o,u).normalize(),E.push(a.x,a.y,a.z),b.push(c,1-l),C.push(v++)}i.push(C)}for(let t=0;t<f;t++)for(let e=0;e<r;e++){var S=i[e][t],A=i[e+1][t],R=i[e+1][t+1],L=i[e][t+1];g.push(S,A,L),g.push(A,R,L),n+=6}_.addGroup(T,n,0),T+=n}function n(t){var u=v;const n=new ne,r=new Ae;let i=0;var a=!0===t?p:m,s=!0===t?1:-1;for(let e=1;e<=f;e++)M.push(0,w*s,0),E.push(0,s,0),b.push(.5,.5),v++;var d=v;for(let e=0;e<=f;e++){var o=e/f*x+y,l=Math.cos(o),o=Math.sin(o);r.x=a*o,r.y=w*s,r.z=a*l,M.push(r.x,r.y,r.z),E.push(0,s,0),n.x=.5*l+.5,n.y=.5*o*s+.5,b.push(n.x,n.y),v++}for(let e=0;e<f;e++){var h=u+e,c=d+e;!0===t?g.push(c,c+1,h):g.push(c+1,c,h),i+=3}_.addGroup(T,i,!0===t?1:2),T+=i}!1===e&&(0<p&&n(!0),0<m&&n(!1)),this.setIndex(g),this.setAttribute("position",new V(M,3)),this.setAttribute("normal",new V(E,3)),this.setAttribute("uv",new V(b,2))}static fromJSON(e){return new fl(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class gl extends fl{constructor(e=1,t=1,n=8,r=1,i=!1,a=0,s=2*Math.PI){super(0,e,t,n,r,i,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:s}}static fromJSON(e){return new gl(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class vl extends S{constructor(n=[],t=[],e=1,u=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:n,indices:t,radius:e,detail:u};const r=[],i=[];var d=u,p=new Ae,m=new Ae,f=new Ae;for(let e=0;e<t.length;e+=3){P(t[e+0],p),P(t[e+1],m),P(t[e+2],f);{g=void 0;v=void 0;y=void 0;x=void 0;_=void 0;M=void 0;a=void 0;var g=p;var v=m;var y=f;var x=d;const o=x+1,l=[];for(let t=0;t<=o;t++){l[t]=[];const N=g.clone().lerp(y,t/o);var _=v.clone().lerp(y,t/o),M=o-t;for(let e=0;e<=M;e++)0===e&&t===o?l[t][e]=N:l[t][e]=N.clone().lerp(_,e/M)}for(let t=0;t<o;t++)for(let e=0;e<2*(o-t)-1;e++){var a=Math.floor(e/2);e%2==0?(s(l[t][a+1]),s(l[t+1][a]),s(l[t][a])):(s(l[t][a+1]),s(l[t+1][a+1]),s(l[t+1][a]))}}}{var E=e;const h=new Ae;for(let e=0;e<r.length;e+=3)h.x=r[e+0],h.y=r[e+1],h.z=r[e+2],h.normalize().multiplyScalar(E),r[e+0]=h.x,r[e+1]=h.y,r[e+2]=h.z}{const c=new Ae;for(let e=0;e<r.length;e+=3){c.x=r[e+0],c.y=r[e+1],c.z=r[e+2];var b=I(c)/2/Math.PI+.5,w=function(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(c)/Math.PI+.5;i.push(b,1-w)}{const O=new Ae,U=new Ae,F=new Ae,B=new Ae,H=new ne,z=new ne,G=new ne;for(let e=0,t=0;e<r.length;e+=9,t+=6){O.set(r[e+0],r[e+1],r[e+2]),U.set(r[e+3],r[e+4],r[e+5]),F.set(r[e+6],r[e+7],r[e+8]),H.set(i[t+0],i[t+1]),z.set(i[t+2],i[t+3]),G.set(i[t+4],i[t+5]),B.copy(O).add(U).add(F).divideScalar(3);var T=I(B);D(H,t+0,O,T),D(z,t+2,U,T),D(G,t+4,F,T)}}for(let e=0;e<i.length;e+=6){var S=i[e+0],A=i[e+2],R=i[e+4],L=Math.max(S,A,R),C=Math.min(S,A,R);.9<L&&C<.1&&(S<.2&&(i[e+0]+=1),A<.2&&(i[e+2]+=1),R<.2&&(i[e+4]+=1))}}function s(e){r.push(e.x,e.y,e.z)}function P(e,t){e*=3;t.x=n[0+e],t.y=n[1+e],t.z=n[2+e]}function D(e,t,n,r){r<0&&1===e.x&&(i[t]=e.x-1),0===n.x&&0===n.z&&(i[t]=r/2/Math.PI+.5)}function I(e){return Math.atan2(e.z,-e.x)}this.setAttribute("position",new V(r,3)),this.setAttribute("normal",new V(r.slice(),3)),this.setAttribute("uv",new V(i,2)),0===u?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new vl(e.vertices,e.indices,e.radius,e.details)}}class yl extends vl{constructor(e=1,t=0){var n=(1+Math.sqrt(5))/2,r=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new yl(e.radius,e.detail)}}const xl=new Ae,_l=new Ae,Ml=new Ae,El=new ur;class bl extends S{constructor(e=null,u=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:u},null!==e){var t=Math.pow(10,4),d=Math.cos(bt*u);const i=e.getIndex();var n=e.getAttribute("position"),p=(i||n).count;const a=[0,0,0];var m,f,g=["a","b","c"];const s=new Array(3),o={},l=[];for(let e=0;e<p;e+=3){i?(a[0]=i.getX(e),a[1]=i.getX(e+1),a[2]=i.getX(e+2)):(a[0]=e,a[1]=e+1,a[2]=e+2);const{a:h,b:c,c:E}=El;if(h.fromBufferAttribute(n,a[0]),c.fromBufferAttribute(n,a[1]),E.fromBufferAttribute(n,a[2]),El.getNormal(Ml),s[0]=`${Math.round(h.x*t)},${Math.round(h.y*t)},`+Math.round(h.z*t),s[1]=`${Math.round(c.x*t)},${Math.round(c.y*t)},`+Math.round(c.z*t),s[2]=`${Math.round(E.x*t)},${Math.round(E.y*t)},`+Math.round(E.z*t),s[0]!==s[1]&&s[1]!==s[2]&&s[2]!==s[0])for(let e=0;e<3;e++){var v=(e+1)%3,y=s[e],r=s[v],x=El[g[e]],_=El[g[v]],M=y+"_"+r,r=r+"_"+y;r in o&&o[r]?(Ml.dot(o[r].normal)<=d&&(l.push(x.x,x.y,x.z),l.push(_.x,_.y,_.z)),o[r]=null):M in o||(o[M]={index0:a[e],index1:a[v],normal:Ml.clone()})}}for(const b in o)o[b]&&({index0:m,index1:f}=o[b],xl.fromBufferAttribute(n,m),_l.fromBufferAttribute(n,f),l.push(xl.x,xl.y,xl.z),l.push(_l.x,_l.y,_l.z));this.setAttribute("position",new V(l,3))}}}class wl{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){e=this.getUtoTmapping(e);return this.getPoint(e,t)}getPoints(t=5){const n=[];for(let e=0;e<=t;e++)n.push(this.getPoint(e/t));return n}getSpacedPoints(t=5){const n=[];for(let e=0;e<=t;e++)n.push(this.getPointAt(e/t));return n}getLength(){var e=this.getLengths();return e[e.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const n=[];let r,i=this.getPoint(0),a=0;n.push(0);for(let e=1;e<=t;e++)r=this.getPoint(e/t),a+=r.distanceTo(i),n.push(a),i=r;return this.cacheArcLengths=n,n}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){var n=this.getLengths();let r=0;var i=n.length;let a,s=(a=t||e*n[i-1],0),o=i-1,l;for(;s<=o;)if(r=Math.floor(s+(o-s)/2),(l=n[r]-a)<0)s=r+1;else{if(!(0<l)){o=r;break}o=r-1}if(r=o,n[r]===a)return r/(i-1);t=n[r],e=n[r+1],e=(a-t)/(e-t);return(r+e)/(i-1)}getTangent(e,t){let n=e-1e-4,r=e+1e-4;n<0&&(n=0),1<r&&(r=1);var e=this.getPoint(n),i=this.getPoint(r);const a=t||new(e.isVector2?ne:Ae);return a.copy(i).sub(e).normalize(),a}getTangentAt(e,t){e=this.getUtoTmapping(e);return this.getTangent(e,t)}computeFrenetFrames(n,c){const e=new Ae,r=[],i=[],a=[],s=new Ae,o=new Re;for(let e=0;e<=n;e++){var u=e/n;r[e]=this.getTangentAt(u,new Ae)}i[0]=new Ae,a[0]=new Ae;let t=Number.MAX_VALUE;var l,h=Math.abs(r[0].x),d=Math.abs(r[0].y),p=Math.abs(r[0].z);h<=t&&(t=h,e.set(1,0,0)),d<=t&&(t=d,e.set(0,1,0)),p<=t&&e.set(0,0,1),s.crossVectors(r[0],e).normalize(),i[0].crossVectors(r[0],s),a[0].crossVectors(r[0],i[0]);for(let e=1;e<=n;e++)i[e]=i[e-1].clone(),a[e]=a[e-1].clone(),s.crossVectors(r[e-1],r[e]),s.length()>Number.EPSILON&&(s.normalize(),l=Math.acos(St(r[e-1].dot(r[e]),-1,1)),i[e].applyMatrix4(o.makeRotationAxis(s,l))),a[e].crossVectors(r[e],i[e]);if(!0===c){let t=Math.acos(St(i[0].dot(i[n]),-1,1));t/=n,0<r[0].dot(s.crossVectors(i[0],i[n]))&&(t=-t);for(let e=1;e<=n;e++)i[e].applyMatrix4(o.makeRotationAxis(r[e],t*e)),a[e].crossVectors(r[e],i[e])}return{tangents:r,normals:i,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Tl extends wl{constructor(e=0,t=0,n=1,r=1,i=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){const n=t||new ne;var r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;for(t=Math.abs(i)<Number.EPSILON;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=t?0:r),!0!==this.aClockwise||t||(i===r?i=-r:i-=r);var a,s,t=this.aStartAngle+e*i;let o=this.aX+this.xRadius*Math.cos(t),l=this.aY+this.yRadius*Math.sin(t);return 0!==this.aRotation&&(e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),a=o-this.aX,s=l-this.aY,o=a*e-s*t+this.aX,l=a*t+s*e+this.aY),n.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}Tl.prototype.isEllipseCurve=!0;class Sl extends Tl{constructor(e,t,n,r,i,a){super(e,t,n,n,r,i,a),this.type="ArcCurve"}}function Al(){let i=0,a=0,s=0,o=0;function l(e,t,n,r){i=e,a=n,s=-3*e+3*t-2*n-r,o=2*e-2*t+n+r}return{initCatmullRom:function(e,t,n,r,i){l(t,n,i*(n-e),i*(r-t))},initNonuniformCatmullRom:function(e,t,n,r,i,a,s){e=(t-e)/i-(n-e)/(i+a)+(n-t)/a,i=(n-t)/a-(r-t)/(a+s)+(r-n)/s;l(t,n,e*=a,i*=a)},calc:function(e){var t=e*e,n=t*e;return i+a*e+s*t+o*n}}}Sl.prototype.isArcCurve=!0;const Rl=new Ae,Ll=new Al,Cl=new Al,Pl=new Al;class Dl extends wl{constructor(e=[],t=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}getPoint(r,e=new Ae){const t=e;var e=this.points,n=e.length,r=(n-(this.closed?0:1))*r;let i=Math.floor(r),a=r-i;this.closed?i+=0<i?0:(Math.floor(Math.abs(i)/n)+1)*n:0===a&&i===n-1&&(i=n-2,a=1);let s,o;s=this.closed||0<i?e[(i-1)%n]:(Rl.subVectors(e[0],e[1]).add(e[0]),Rl);const l=e[i%n],h=e[(i+1)%n];if(o=this.closed||i+2<n?e[(i+2)%n]:(Rl.subVectors(e[n-1],e[n-2]).add(e[n-1]),Rl),"centripetal"===this.curveType||"chordal"===this.curveType){r="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(l),r),t=Math.pow(l.distanceToSquared(h),r),n=Math.pow(h.distanceToSquared(o),r);t<1e-4&&(t=1),e<1e-4&&(e=t),n<1e-4&&(n=t),Ll.initNonuniformCatmullRom(s.x,l.x,h.x,o.x,e,t,n),Cl.initNonuniformCatmullRom(s.y,l.y,h.y,o.y,e,t,n),Pl.initNonuniformCatmullRom(s.z,l.z,h.z,o.z,e,t,n)}else"catmullrom"===this.curveType&&(Ll.initCatmullRom(s.x,l.x,h.x,o.x,this.tension),Cl.initCatmullRom(s.y,l.y,h.y,o.y,this.tension),Pl.initCatmullRom(s.z,l.z,h.z,o.z,this.tension));return t.set(Ll.calc(a),Cl.calc(a),Pl.calc(a)),t}copy(n){super.copy(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const r=n.points[e];this.points.push(r.clone())}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}toJSON(){const n=super.toJSON();n.points=[];for(let e=0,t=this.points.length;e<t;e++){const r=this.points[e];n.points.push(r.toArray())}return n.closed=this.closed,n.curveType=this.curveType,n.tension=this.tension,n}fromJSON(n){super.fromJSON(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){var r=n.points[e];this.points.push((new Ae).fromArray(r))}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}}function Il(e,t,n,r,i){var t=.5*(r-t),i=.5*(i-n),a=e*e;return(2*n-2*r+t+i)*(e*a)+(-3*n+3*r-2*t-i)*a+t*e+n}function Nl(e,t,n,r){return(i=1-(i=e))*i*t+2*(1-e)*e*n+e*e*r;var i}function Ol(e,t,n,r,i){return(a=1-(a=e))*a*a*t+3*(a=1-e)*a*e*n+3*(1-e)*e*e*r+e*e*e*i;var a}class Ul extends wl{constructor(e=new ne,t=new ne,n=new ne,r=new ne){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new ne){const n=t;var t=this.v0,r=this.v1,i=this.v2,a=this.v3;return n.set(Ol(e,t.x,r.x,i.x,a.x),Ol(e,t.y,r.y,i.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Ul.prototype.isCubicBezierCurve=Dl.prototype.isCatmullRomCurve3=!0;class Fl extends wl{constructor(e=new Ae,t=new Ae,n=new Ae,r=new Ae){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new Ae){const n=t;var t=this.v0,r=this.v1,i=this.v2,a=this.v3;return n.set(Ol(e,t.x,r.x,i.x,a.x),Ol(e,t.y,r.y,i.y,a.y),Ol(e,t.z,r.z,i.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Bl extends wl{constructor(e=new ne,t=new ne){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ne){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new ne;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Bl.prototype.isLineCurve=Fl.prototype.isCubicBezierCurve3=!0;class Hl extends wl{constructor(e=new Ae,t=new Ae){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new Ae){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class zl extends wl{constructor(e=new ne,t=new ne,n=new ne){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ne){const n=t;var t=this.v0,r=this.v1,i=this.v2;return n.set(Nl(e,t.x,r.x,i.x),Nl(e,t.y,r.y,i.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}zl.prototype.isQuadraticBezierCurve=!0;class Gl extends wl{constructor(e=new Ae,t=new Ae,n=new Ae){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new Ae){const n=t;var t=this.v0,r=this.v1,i=this.v2;return n.set(Nl(e,t.x,r.x,i.x),Nl(e,t.y,r.y,i.y),Nl(e,t.z,r.z,i.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Gl.prototype.isQuadraticBezierCurve3=!0;class Vl extends wl{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new ne){const n=t;var t=this.points,e=(t.length-1)*e,r=Math.floor(e),e=e-r,i=t[0===r?r:r-1],a=t[r],s=t[r>t.length-2?t.length-1:r+1],t=t[r>t.length-3?t.length-1:r+2];return n.set(Il(e,i.x,a.x,s.x,t.x),Il(e,i.y,a.y,s.y,t.y)),n}copy(n){super.copy(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const r=n.points[e];this.points.push(r.clone())}return this}toJSON(){const n=super.toJSON();n.points=[];for(let e=0,t=this.points.length;e<t;e++){const r=this.points[e];n.points.push(r.toArray())}return n}fromJSON(n){super.fromJSON(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){var r=n.points[e];this.points.push((new ne).fromArray(r))}return this}}Vl.prototype.isSplineCurve=!0;var kl=Object.freeze({__proto__:null,ArcCurve:Sl,CatmullRomCurve3:Dl,CubicBezierCurve:Ul,CubicBezierCurve3:Fl,EllipseCurve:Tl,LineCurve:Bl,LineCurve3:Hl,QuadraticBezierCurve:zl,QuadraticBezierCurve3:Gl,SplineCurve:Vl});class Wl extends wl{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0);var t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Bl(t,e))}getPoint(e,t){var n=e*this.getLength(),r=this.getCurveLengths();let i=0;for(;i<r.length;){if(r[i]>=n){var a=r[i]-n;const o=this.curves[i];var s=o.getLength();return o.getPointAt(0===s?0:1-a/s,t)}i++}return null}getLength(){var e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const n=[];let r=0;for(let e=0,t=this.curves.length;e<t;e++)r+=this.curves[e].getLength(),n.push(r);return this.cacheLengths=n,n}getSpacedPoints(t=40){const n=[];for(let e=0;e<=t;e++)n.push(this.getPoint(e/t));return this.autoClose&&n.push(n[0]),n}getPoints(n=12){const r=[];let i;for(let e=0,t=this.curves;e<t.length;e++){const l=t[e];var a=l&&l.isEllipseCurve?2*n:l&&(l.isLineCurve||l.isLineCurve3)?1:l&&l.isSplineCurve?n*l.points.length:n,s=l.getPoints(a);for(let e=0;e<s.length;e++){var o=s[e];i&&i.equals(o)||(r.push(o),i=o)}}return this.autoClose&&1<r.length&&!r[r.length-1].equals(r[0])&&r.push(r[0]),r}copy(n){super.copy(n),this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){const r=n.curves[e];this.curves.push(r.clone())}return this.autoClose=n.autoClose,this}toJSON(){const n=super.toJSON();n.autoClose=this.autoClose,n.curves=[];for(let e=0,t=this.curves.length;e<t;e++){const r=this.curves[e];n.curves.push(r.toJSON())}return n}fromJSON(n){super.fromJSON(n),this.autoClose=n.autoClose,this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){var r=n.curves[e];this.curves.push((new kl[r.type]).fromJSON(r))}return this}}class jl extends Wl{constructor(e){super(),this.type="Path",this.currentPoint=new ne,e&&this.setFromPoints(e)}setFromPoints(n){this.moveTo(n[0].x,n[0].y);for(let e=1,t=n.length;e<t;e++)this.lineTo(n[e].x,n[e].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){var n=new Bl(this.currentPoint.clone(),new ne(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,r){e=new zl(this.currentPoint.clone(),new ne(e,t),new ne(n,r));return this.curves.push(e),this.currentPoint.set(n,r),this}bezierCurveTo(e,t,n,r,i,a){e=new Ul(this.currentPoint.clone(),new ne(e,t),new ne(n,r),new ne(i,a));return this.curves.push(e),this.currentPoint.set(i,a),this}splineThru(e){var t=[this.currentPoint.clone()].concat(e),t=new Vl(t);return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,r,i,a){var s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,n,r,i,a),this}absarc(e,t,n,r,i,a){return this.absellipse(e,t,n,n,r,i,a),this}ellipse(e,t,n,r,i,a,s,o){var l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,n,r,i,a,s,o),this}absellipse(e,t,n,r,i,a,s,o){const l=new Tl(e,t,n,r,i,a,s,o);if(0<this.curves.length){const h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);e=l.getPoint(1);return this.currentPoint.copy(e),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Xl extends jl{constructor(e){super(e),this.uuid=Tt(),this.type="Shape",this.holes=[]}getPointsHoles(n){const r=[];for(let e=0,t=this.holes.length;e<t;e++)r[e]=this.holes[e].getPoints(n);return r}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(n){super.copy(n),this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){const r=n.holes[e];this.holes.push(r.clone())}return this}toJSON(){const n=super.toJSON();n.uuid=this.uuid,n.holes=[];for(let e=0,t=this.holes.length;e<t;e++){const r=this.holes[e];n.holes.push(r.toJSON())}return n}fromJSON(n){super.fromJSON(n),this.uuid=n.uuid,this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){var r=n.holes[e];this.holes.push((new jl).fromJSON(r))}return this}}const ql={triangulate:function(t,e,n=2){var c=e&&e.length,u=c?e[0]*n:t.length;let r=Yl(t,0,u,n,!0);var d=[];if(!r||r.next===r.prev)return d;let i,a,s,p,o,l,h;if(c&&(r=function(e,t,n,r){const i=[];let a,s,o,l,h;for(a=0,s=t.length;a<s;a++)o=t[a]*r,l=a<s-1?t[a+1]*r:e.length,h=Yl(e,o,l,r,!1),h===h.next&&(h.steiner=!0),i.push(function(e){let t=e,n=e;for(;(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next,t!==e;);return n}(h));for(i.sort(Kl),a=0;a<i.length;a++)!function(e,t){(t=function(e,c){let t=c;var n=e.x,r=e.y;let i=-1/0,a;do{if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){var s=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(s<=n&&s>i){if((i=s)===n){if(r===t.y)return t;if(r===t.next.y)return t.next}a=t.x<t.next.x?t:t.next}}}while(t=t.next,t!==c);if(!a)return null;if(n===i)return a;var u=a,d=a.x,o=a.y;let l=1/0,h;t=a;for(;n>=t.x&&t.x>=d&&n!==t.x&&$l(r<o?n:i,r,d,o,r<o?i:n,r,t.x,t.y)&&(h=Math.abs(r-t.y)/(n-t.x),ah(t,e)&&(h<l||h===l&&(t.x>a.x||t.x===a.x&&function(e,t){return eh(e.prev,e,t.prev)<0&&eh(t.next,e,e.next)<0}(a,t)))&&(a=t,l=h)),t=t.next,t!==u;);return a}(e,t))&&(e=sh(t,e),Zl(t,t.next),Zl(e,e.next))}(i[a],n),n=Zl(n,n.next);return n}(t,e,r,n)),t.length>80*n){i=s=t[0],a=p=t[1];for(let e=n;e<u;e+=n)o=t[e],l=t[e+1],o<i&&(i=o),l<a&&(a=l),o>s&&(s=o),l>p&&(p=l);h=Math.max(s-i,p-a),h=0!==h?1/h:0}return Jl(r,d,n,i,a,h),d}};function Yl(e,t,n,r,i){let a,s;if(i===0<function(n,r,i,a){let s=0;for(let e=r,t=i-a;e<i;e+=a)s+=(n[t]-n[e])*(n[e+1]+n[t+1]),t=e;return s}(e,t,n,r))for(a=t;a<n;a+=r)s=oh(a,e[a],e[a+1],s);else for(a=n-r;a>=t;a-=r)s=oh(a,e[a],e[a+1],s);return s&&th(s,s.next)&&(lh(s),s=s.next),s}function Zl(e,t){if(!e)return e;t=t||e;let n=e,r;do{if(r=!1,n.steiner||!th(n,n.next)&&0!==eh(n.prev,n,n.next))n=n.next;else{if(lh(n),n=t=n.prev,n===n.next)break;r=!0}}while(r||n!==t);return t}function Jl(r,i,a,s,o,l,h){if(r){if(!h&&l){var c=r,u=s,p=o,m=l;let h=c;for(;null===h.z&&(h.z=Ql(h.x,h.y,u,p,m)),h.prevZ=h.prev,h.nextZ=h.next,h=h.next,h!==c;);h.prevZ.nextZ=null,h.prevZ=null;{var d=h;let e,t,n,r,i,a,s,o,l=1;do{for(t=d,d=null,i=null,a=0;t;){for(a++,n=t,s=0,e=0;e<l&&(s++,n=n.nextZ,n);e++);for(o=l;0<s||0<o&&n;)0!==s&&(0===o||!n||t.z<=n.z)?(r=t,t=t.nextZ,s--):(r=n,n=n.nextZ,o--),i?i.nextZ=r:d=r,r.prevZ=i,i=r;t=n}}while(i.nextZ=null,l*=2,1<a)}}let e=r,t,n;for(;r.prev!==r.next;)if(t=r.prev,n=r.next,l?function(e,t,n,r){var i=e.prev,a=e,s=e.next;if(0<=eh(i,a,s))return!1;var c=(i.x<a.x?i.x<s.x?i:s:a.x<s.x?a:s).x,u=(i.y<a.y?i.y<s.y?i:s:a.y<s.y?a:s).y,d=(i.x>a.x?i.x>s.x?i:s:a.x>s.x?a:s).x,p=(i.y>a.y?i.y>s.y?i:s:a.y>s.y?a:s).y,o=Ql(c,u,t,n,r),m=Ql(d,p,t,n,r);let l=e.prevZ,h=e.nextZ;for(;l&&l.z>=o&&h&&h.z<=m;){if(l!==e.prev&&l!==e.next&&$l(i.x,i.y,a.x,a.y,s.x,s.y,l.x,l.y)&&0<=eh(l.prev,l,l.next))return!1;if(l=l.prevZ,h!==e.prev&&h!==e.next&&$l(i.x,i.y,a.x,a.y,s.x,s.y,h.x,h.y)&&0<=eh(h.prev,h,h.next))return!1;h=h.nextZ}for(;l&&l.z>=o;){if(l!==e.prev&&l!==e.next&&$l(i.x,i.y,a.x,a.y,s.x,s.y,l.x,l.y)&&0<=eh(l.prev,l,l.next))return!1;l=l.prevZ}for(;h&&h.z<=m;){if(h!==e.prev&&h!==e.next&&$l(i.x,i.y,a.x,a.y,s.x,s.y,h.x,h.y)&&0<=eh(h.prev,h,h.next))return!1;h=h.nextZ}return!0}(r,s,o,l):function(e){var t=e.prev,n=e,r=e.next;if(0<=eh(t,n,r))return!1;let i=e.next.next;for(;i!==e.prev;){if($l(t.x,t.y,n.x,n.y,r.x,r.y,i.x,i.y)&&0<=eh(i.prev,i,i.next))return!1;i=i.next}return!0}(r))i.push(t.i/a),i.push(r.i/a),i.push(n.i/a),lh(r),r=n.next,e=n.next;else if((r=n)===e){h?1===h?Jl(r=function(e,t,n){let r=e;do{var i=r.prev,a=r.next.next;!th(i,a)&&nh(i,r,r.next,a)&&ah(i,a)&&ah(a,i)&&(t.push(i.i/n),t.push(r.i/n),t.push(a.i/n),lh(r),lh(r.next),r=e=a),r=r.next}while(r!==e);return Zl(r)}(Zl(r),i,a),i,a,s,o,l,2):2===h&&function(e,t,n,r,i,a){let s=e;do{let e=s.next.next;for(;e!==s.prev;){var o;if(s.i!==e.i&&function(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&nh(n,n.next,e,t))return!0}while(n=n.next,n!==e);return!1}(e,t)&&(ah(e,t)&&ah(t,e)&&function(e,t){let n=e,r=!1;var i=(e.x+t.x)/2,a=(e.y+t.y)/2;for(;n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next,n!==e;);return r}(e,t)&&(eh(e.prev,e,t.prev)||eh(e,t.prev,t))||th(e,t)&&0<eh(e.prev,e,e.next)&&0<eh(t.prev,t,t.next))}(s,e))return o=sh(s,e),s=Zl(s,s.next),o=Zl(o,o.next),Jl(s,t,n,r,i,a),Jl(o,t,n,r,i,a);e=e.next}}while(s=s.next,s!==e)}(r,i,a,s,o,l):Jl(Zl(r),i,a,s,o,l,1);break}}}function Kl(e,t){return e.x-t.x}function Ql(e,t,n,r,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function $l(e,t,n,r,i,a,s,o){return 0<=(i-s)*(t-o)-(e-s)*(a-o)&&0<=(e-s)*(r-o)-(n-s)*(t-o)&&0<=(n-s)*(a-o)-(i-s)*(r-o)}function eh(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function th(e,t){return e.x===t.x&&e.y===t.y}function nh(e,t,n,r){var i=ih(eh(e,t,n)),a=ih(eh(e,t,r)),s=ih(eh(n,r,e)),o=ih(eh(n,r,t));return i!==a&&s!==o||(0===i&&rh(e,n,t)||(0===a&&rh(e,r,t)||(0===s&&rh(n,e,r)||!(0!==o||!rh(n,t,r)))))}function rh(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function ih(e){return 0<e?1:e<0?-1:0}function ah(e,t){return eh(e.prev,e,e.next)<0?0<=eh(e,t,e.next)&&0<=eh(e,e.prev,t):eh(e,t,e.prev)<0||eh(e,e.next,t)<0}function sh(e,t){const n=new hh(e.i,e.x,e.y),r=new hh(t.i,t.x,t.y),i=e.next,a=t.prev;return(e.next=t).prev=e,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}function oh(e,t,n,r){const i=new hh(e,t,n);return r?(i.next=r.next,(i.prev=r).next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function lh(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function hh(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class ch{static area(n){var r=n.length;let i=0;for(let e=r-1,t=0;t<r;e=t++)i+=n[e].x*n[t].y-n[t].x*n[e].y;return.5*i}static isClockWise(e){return ch.area(e)<0}static triangulateShape(e,t){var n=[];const r=[],i=[];uh(e),dh(n,e);let a=e.length;t.forEach(uh);for(let e=0;e<t.length;e++)r.push(a),a+=t[e].length,dh(n,t[e]);const s=ql.triangulate(n,r);for(let e=0;e<s.length;e+=3)i.push(s.slice(e,e+3));return i}}function uh(e){var t=e.length;2<t&&e[t-1].equals(e[0])&&e.pop()}function dh(t,n){for(let e=0;e<n.length;e++)t.push(n[e].x),t.push(n[e].y)}class ph extends S{constructor(n=new Xl([new ne(.5,.5),new ne(-.5,.5),new ne(-.5,-.5),new ne(.5,-.5)]),Q={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:n,options:Q},n=Array.isArray(n)?n:[n];const $=this,ee=[],te=[];for(let e=0,t=n.length;e<t;e++)!function(e){const l=[],t=void 0!==Q.curveSegments?Q.curveSegments:12,p=void 0!==Q.steps?Q.steps:1;let h=void 0!==Q.depth?Q.depth:1,c=void 0===Q.bevelEnabled||Q.bevelEnabled,u=void 0!==Q.bevelThickness?Q.bevelThickness:.2,d=void 0!==Q.bevelSize?Q.bevelSize:u-.1,v=void 0!==Q.bevelOffset?Q.bevelOffset:0,y=void 0!==Q.bevelSegments?Q.bevelSegments:3;const x=Q.extrudePath,_=void 0!==Q.UVGenerator?Q.UVGenerator:mh;void 0!==Q.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=Q.amount);let M,E=!1,b,w,T,n;x&&(M=x.getSpacedPoints(p),E=!0,c=!1,b=x.computeFrenetFrames(p,!1),w=new Ae,T=new Ae,n=new Ae);c||(y=0,u=0,d=0,v=0);e=e.extractPoints(t);let r=e.shape;const i=e.holes,S=!ch.isClockWise(r);if(S){r=r.reverse();for(let e=0,t=i.length;e<t;e++){const K=i[e];ch.isClockWise(K)&&(i[e]=K.reverse())}}const A=ch.triangulateShape(r,i),a=r;for(let e=0,t=i.length;e<t;e++){var R=i[e];r=r.concat(R)}function L(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}const m=r.length,C=A.length;function P(e,t,n){let r,i,a;var s=e.x-t.x,o=e.y-t.y,l=n.x-e.x,h=n.y-e.y,c=s*s+o*o;if(Math.abs(s*h-o*l)>Number.EPSILON){var u=Math.sqrt(c),d=Math.sqrt(l*l+h*h),p=t.x-o/u,t=t.y+s/u,u=((n.x-h/d-p)*h-(n.y+l/d-t)*l)/(s*h-o*l),n=(r=p+s*u-e.x,i=t+o*u-e.y,r*r+i*i);if(n<=2)return new ne(r,i);a=Math.sqrt(n/2)}else{let e=!1;s>Number.EPSILON?l>Number.EPSILON&&(e=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(h)&&(e=!0),a=e?(r=-o,i=s,Math.sqrt(c)):(r=s,i=o,Math.sqrt(c/2))}return new ne(r/a,i/a)}const D=[];for(let e=0,t=a.length,n=t-1,r=e+1;e<t;e++,n++,r++)n===t&&(n=0),r===t&&(r=0),D[e]=P(a[e],a[n],a[r]);const I=[];let s,N=D.concat();for(let e=0,t=i.length;e<t;e++){var O=i[e];s=[];for(let e=0,t=O.length,n=t-1,r=e+1;e<t;e++,n++,r++)n===t&&(n=0),r===t&&(r=0),s[e]=P(O[e],O[n],O[r]);I.push(s),N=N.concat(s)}for(let e=0;e<y;e++){var U=e/y,F=u*Math.cos(U*Math.PI/2);const G=d*Math.sin(U*Math.PI/2)+v;for(let e=0,t=a.length;e<t;e++){var B=L(a[e],D[e],G);o(B.x,B.y,-F)}for(let e=0,t=i.length;e<t;e++){var H=i[e];s=I[e];for(let e=0,t=H.length;e<t;e++){var z=L(H[e],s[e],G);o(z.x,z.y,-F)}}}const G=d+v;for(let e=0;e<m;e++){var V=c?L(r[e],N[e],G):r[e];E?(T.copy(b.normals[0]).multiplyScalar(V.x),w.copy(b.binormals[0]).multiplyScalar(V.y),n.copy(M[0]).add(T).add(w),o(n.x,n.y,n.z)):o(V.x,V.y,0)}for(let t=1;t<=p;t++)for(let e=0;e<m;e++){var k=c?L(r[e],N[e],G):r[e];E?(T.copy(b.normals[t]).multiplyScalar(k.x),w.copy(b.binormals[t]).multiplyScalar(k.y),n.copy(M[t]).add(T).add(w),o(n.x,n.y,n.z)):o(k.x,k.y,h/p*t)}for(let e=y-1;0<=e;e--){var W=e/y,j=u*Math.cos(W*Math.PI/2);const G=d*Math.sin(W*Math.PI/2)+v;for(let e=0,t=a.length;e<t;e++){var X=L(a[e],D[e],G);o(X.x,X.y,h+j)}for(let e=0,t=i.length;e<t;e++){var q=i[e];s=I[e];for(let e=0,t=q.length;e<t;e++){var Y=L(q[e],s[e],G);E?o(Y.x,Y.y+M[p-1].y,M[p-1].x+j):o(Y.x,Y.y,h+j)}}}function Z(e,r){let t=e.length;for(;0<=--t;){var i=t;let n=t-1;n<0&&(n=e.length-1);for(let e=0,t=p+2*y;e<t;e++){var a=m*e,s=m*(e+1),u=r+n+a,d=r+n+s,o=(l=o=c=h=l=o=void 0,r+i+a),l=u,h=d,c=r+i+s;f(o),f(l),f(c),f(l),f(h),f(c),o=ee.length/3,g((l=_.generateSideWallUV($,ee,o-6,o-3,o-2,o-1))[0]),g(l[1]),g(l[3]),g(l[1]),g(l[2]),g(l[3])}}}function o(e,t,n){l.push(e),l.push(t),l.push(n)}function J(e,t,n){f(e),f(t),f(n);e=ee.length/3,t=_.generateTopUV($,ee,e-3,e-2,e-1);g(t[0]),g(t[1]),g(t[2])}function f(e){ee.push(l[3*e+0]),ee.push(l[3*e+1]),ee.push(l[3*e+2])}function g(e){te.push(e.x),te.push(e.y)}(function(){var e,t=ee.length/3;if(c){let t=0*m;for(let e=0;e<C;e++){var n=A[e];J(n[2]+t,n[1]+t,n[0]+t)}e=p+2*y,t=m*e;for(let e=0;e<C;e++){var r=A[e];J(r[0]+t,r[1]+t,r[2]+t)}}else{for(let e=0;e<C;e++){var i=A[e];J(i[2],i[1],i[0])}for(let e=0;e<C;e++){var a=A[e];J(a[0]+m*p,a[1]+m*p,a[2]+m*p)}}$.addGroup(t,ee.length/3-t,0)})(),function(){var e=ee.length/3;let n=0;Z(a,n),n+=a.length;for(let e=0,t=i.length;e<t;e++){var r=i[e];Z(r,n),n+=r.length}$.addGroup(e,ee.length/3-e,1)}()}(n[e]);this.setAttribute("position",new V(ee,3)),this.setAttribute("uv",new V(te,2)),this.computeVertexNormals()}toJSON(){var e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options,r=t,t=n,i=e;if(i.shapes=[],Array.isArray(r))for(let e=0,t=r.length;e<t;e++){var a=r[e];i.shapes.push(a.uuid)}else i.shapes.push(r.uuid);return void 0!==t.extrudePath&&(i.options.extrudePath=t.extrudePath.toJSON()),i}static fromJSON(n,r){const i=[];for(let e=0,t=n.shapes.length;e<t;e++){var a=r[n.shapes[e]];i.push(a)}var e=n.options.extrudePath;return void 0!==e&&(n.options.extrudePath=(new kl[e.type]).fromJSON(e)),new ph(i,n.options)}}const mh={generateTopUV:function(e,t,n,r,i){var a=t[3*n],n=t[3*n+1],s=t[3*r],r=t[3*r+1],o=t[3*i],t=t[3*i+1];return[new ne(a,n),new ne(s,r),new ne(o,t)]},generateSideWallUV:function(c,e,t,n,r,i){var a=e[3*t],s=e[3*t+1],t=e[3*t+2],o=e[3*n],l=e[3*n+1],n=e[3*n+2],h=e[3*r],u=e[3*r+1],r=e[3*r+2],d=e[3*i],p=e[3*i+1],e=e[3*i+2];return Math.abs(s-l)<Math.abs(a-o)?[new ne(a,1-t),new ne(o,1-n),new ne(h,1-r),new ne(d,1-e)]:[new ne(s,1-t),new ne(l,1-n),new ne(u,1-r),new ne(p,1-e)]}};class fh extends vl{constructor(e=1,t=0){var n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new fh(e.radius,e.detail)}}class gh extends S{constructor(n=[new ne(0,.5),new ne(.5,0),new ne(0,-.5)],r=12,c=0,e=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:n,segments:r,phiStart:c,phiLength:e},r=Math.floor(r),e=St(e,0,2*Math.PI);const u=[],d=[],p=[],i=[],m=[];var f=1/r;const a=new Ae,s=new ne,t=new Ae,g=new Ae,o=new Ae;let l=0,h=0;for(let e=0;e<=n.length-1;e++)switch(e){case 0:l=n[e+1].x-n[e].x,h=n[e+1].y-n[e].y,t.x=+h,t.y=-l,t.z=0*h,o.copy(t),t.normalize(),i.push(t.x,t.y,t.z);break;case n.length-1:i.push(o.x,o.y,o.z);break;default:l=n[e+1].x-n[e].x,h=n[e+1].y-n[e].y,t.x=+h,t.y=-l,t.z=0*h,g.copy(t),t.x+=o.x,t.y+=o.y,t.z+=o.z,t.normalize(),i.push(t.x,t.y,t.z),o.copy(g)}for(let t=0;t<=r;t++){var v=c+t*f*e,y=Math.sin(v),x=Math.cos(v);for(let e=0;e<=n.length-1;e++){a.x=n[e].x*y,a.y=n[e].y,a.z=n[e].x*x,d.push(a.x,a.y,a.z),s.x=t/r,s.y=e/(n.length-1),p.push(s.x,s.y);var _=i[3*e+0]*y,M=i[3*e+1],E=i[3*e+0]*x;m.push(_,M,E)}}for(let t=0;t<r;t++)for(let e=0;e<n.length-1;e++){var b=e+t*n.length,w=b+n.length,T=b+n.length+1,S=b+1;u.push(b,w,S),u.push(T,S,w)}this.setIndex(u),this.setAttribute("position",new V(d,3)),this.setAttribute("uv",new V(p,2)),this.setAttribute("normal",new V(m,3))}static fromJSON(e){return new gh(e.points,e.segments,e.phiStart,e.phiLength)}}class vh extends vl{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new vh(e.radius,e.detail)}}class yh extends S{constructor(e=.5,t=1,n=8,r=1,i=0,c=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:c},n=Math.max(3,n);const a=[],u=[],d=[],p=[];let s=e;var m=(t-e)/(r=Math.max(1,r));const o=new Ae,l=new ne;for(let e=0;e<=r;e++){for(let e=0;e<=n;e++){var f=i+e/n*c;o.x=s*Math.cos(f),o.y=s*Math.sin(f),u.push(o.x,o.y,o.z),d.push(0,0,1),l.x=(o.x/t+1)/2,l.y=(o.y/t+1)/2,p.push(l.x,l.y)}s+=m}for(let e=0;e<r;e++){var g=e*(n+1);for(let e=0;e<n;e++){var h=e+g,v=h+n+1,y=h+n+2,x=h+1;a.push(h,v,x),a.push(v,y,x)}}this.setIndex(a),this.setAttribute("position",new V(u,3)),this.setAttribute("normal",new V(d,3)),this.setAttribute("uv",new V(p,2))}static fromJSON(e){return new yh(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class xh extends S{constructor(t=new Xl([new ne(0,.5),new ne(-.5,-.5),new ne(.5,-.5)]),d=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:d};const p=[],m=[],f=[],g=[];let n=0,v=0;if(!1===Array.isArray(t))r(t);else for(let e=0;e<t.length;e++)r(t[e]),this.addGroup(n,v,e),n+=v,v=0;function r(e){var n=m.length/3,e=e.extractPoints(d);let r=e.shape;const i=e.holes;!1===ch.isClockWise(r)&&(r=r.reverse());for(let e=0,t=i.length;e<t;e++){const c=i[e];!0===ch.isClockWise(c)&&(i[e]=c.reverse())}var a=ch.triangulateShape(r,i);for(let e=0,t=i.length;e<t;e++){var s=i[e];r=r.concat(s)}for(let e=0,t=r.length;e<t;e++){var o=r[e];m.push(o.x,o.y,0),f.push(0,0,1),g.push(o.x,o.y)}for(let e=0,t=a.length;e<t;e++){var l=a[e],h=l[0]+n,u=l[1]+n,l=l[2]+n;p.push(h,u,l),v+=3}}this.setIndex(p),this.setAttribute("position",new V(m,3)),this.setAttribute("normal",new V(f,3)),this.setAttribute("uv",new V(g,2))}toJSON(){var e=super.toJSON(),n=this.parameters.shapes,r=e;if(r.shapes=[],Array.isArray(n))for(let e=0,t=n.length;e<t;e++){var i=n[e];r.shapes.push(i.uuid)}else r.shapes.push(n.uuid);return r}static fromJSON(n,r){const i=[];for(let e=0,t=n.shapes.length;e<t;e++){var a=r[n.shapes[e]];i.push(a)}return new xh(i,n.curveSegments)}}class _h extends S{constructor(n=1,r=32,i=16,a=0,d=2*Math.PI,s=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:n,widthSegments:r,heightSegments:i,phiStart:a,phiLength:d,thetaStart:s,thetaLength:o},r=Math.max(3,Math.floor(r)),i=Math.max(2,Math.floor(i));var p=Math.min(s+o,Math.PI);let m=0;const l=[],h=new Ae,c=new Ae,f=[],g=[],v=[],y=[];for(let e=0;e<=i;e++){const w=[];var u=e/i;let t=0;0==e&&0==s?t=.5/r:e==i&&p==Math.PI&&(t=-.5/r);for(let e=0;e<=r;e++){var x=e/r;h.x=-n*Math.cos(a+x*d)*Math.sin(s+u*o),h.y=n*Math.cos(s+u*o),h.z=n*Math.sin(a+x*d)*Math.sin(s+u*o),g.push(h.x,h.y,h.z),c.copy(h).normalize(),v.push(c.x,c.y,c.z),y.push(x+t,1-u),w.push(m++)}l.push(w)}for(let t=0;t<i;t++)for(let e=0;e<r;e++){var _=l[t][e+1],M=l[t][e],E=l[t+1][e],b=l[t+1][e+1];(0!==t||0<s)&&f.push(_,M,b),(t!==i-1||p<Math.PI)&&f.push(M,E,b)}this.setIndex(f),this.setAttribute("position",new V(g,3)),this.setAttribute("normal",new V(v,3)),this.setAttribute("uv",new V(y,2))}static fromJSON(e){return new _h(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Mh extends vl{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Mh(e.radius,e.detail)}}class Eh extends S{constructor(n=1,r=.4,i=8,a=6,d=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:n,tube:r,radialSegments:i,tubularSegments:a,arc:d},i=Math.floor(i),a=Math.floor(a);const s=[],p=[],m=[],o=[],l=new Ae,h=new Ae,c=new Ae;for(let t=0;t<=i;t++)for(let e=0;e<=a;e++){var u=e/a*d,f=t/i*Math.PI*2;h.x=(n+r*Math.cos(f))*Math.cos(u),h.y=(n+r*Math.cos(f))*Math.sin(u),h.z=r*Math.sin(f),p.push(h.x,h.y,h.z),l.x=n*Math.cos(u),l.y=n*Math.sin(u),c.subVectors(h,l).normalize(),m.push(c.x,c.y,c.z),o.push(e/a),o.push(t/i)}for(let t=1;t<=i;t++)for(let e=1;e<=a;e++){var g=(a+1)*t+e-1,v=(a+1)*(t-1)+e-1,y=(a+1)*(t-1)+e,x=(a+1)*t+e;s.push(g,v,x),s.push(v,y,x)}this.setIndex(s),this.setAttribute("position",new V(p,3)),this.setAttribute("normal",new V(m,3)),this.setAttribute("uv",new V(o,2))}static fromJSON(e){return new Eh(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class bh extends S{constructor(e=1,u=.4,n=64,r=8,i=2,d=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:u,tubularSegments:n,radialSegments:r,p:i,q:d},n=Math.floor(n),r=Math.floor(r);const p=[],m=[],f=[],g=[],a=new Ae,s=new Ae;var o=new Ae,v=new Ae;const l=new Ae,y=new Ae,h=new Ae;for(let t=0;t<=n;++t){var x=t/n*i*Math.PI*2;T(x,i,d,e,o),T(.01+x,i,d,e,v),y.subVectors(v,o),h.addVectors(v,o),l.crossVectors(y,h),h.crossVectors(l,y),l.normalize(),h.normalize();for(let e=0;e<=r;++e){var c=e/r*Math.PI*2,_=-u*Math.cos(c),c=u*Math.sin(c);a.x=o.x+(_*h.x+c*l.x),a.y=o.y+(_*h.y+c*l.y),a.z=o.z+(_*h.z+c*l.z),m.push(a.x,a.y,a.z),s.subVectors(a,o).normalize(),f.push(s.x,s.y,s.z),g.push(t/n),g.push(e/r)}}for(let t=1;t<=n;t++)for(let e=1;e<=r;e++){var M=(r+1)*(t-1)+(e-1),E=(r+1)*t+(e-1),b=(r+1)*t+e,w=(r+1)*(t-1)+e;p.push(M,E,w),p.push(E,b,w)}function T(e,t,n,r,i){var a=Math.cos(e),s=Math.sin(e),n=n/t*e,t=Math.cos(n);i.x=r*(2+t)*.5*a,i.y=r*(2+t)*s*.5,i.z=r*Math.sin(n)*.5}this.setIndex(p),this.setAttribute("position",new V(m,3)),this.setAttribute("normal",new V(f,3)),this.setAttribute("uv",new V(g,2))}static fromJSON(e){return new bh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class wh extends S{constructor(a=new Gl(new Ae(-1,-1,0),new Ae(-1,1,0),new Ae(1,1,0)),s=64,o=1,l=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:s,radius:o,radialSegments:l,closed:e};const h=a.computeFrenetFrames(s,e),c=(this.tangents=h.tangents,this.normals=h.normals,this.binormals=h.binormals,new Ae),u=new Ae,n=new ne;let d=new Ae;const p=[],m=[],r=[],i=[];for(let e=0;e<s;e++)t(e);t(!1===e?s:0);for(let t=0;t<=s;t++)for(let e=0;e<=l;e++)n.x=t/s,n.y=e/l,r.push(n.x,n.y);for(let t=1;t<=s;t++)for(let e=1;e<=l;e++){var f=(l+1)*(t-1)+(e-1),g=(l+1)*t+(e-1),v=(l+1)*t+e,y=(l+1)*(t-1)+e;i.push(f,g,y),i.push(g,v,y)}function t(e){d=a.getPointAt(e/s,d);var t=h.normals[e],n=h.binormals[e];for(let e=0;e<=l;e++){var r=e/l*Math.PI*2,i=Math.sin(r),r=-Math.cos(r);u.x=r*t.x+i*n.x,u.y=r*t.y+i*n.y,u.z=r*t.z+i*n.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+o*u.x,c.y=d.y+o*u.y,c.z=d.z+o*u.z,p.push(c.x,c.y,c.z)}}this.setIndex(i),this.setAttribute("position",new V(p,3)),this.setAttribute("normal",new V(m,3)),this.setAttribute("uv",new V(r,2))}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new wh((new kl[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Th extends S{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){const o=[];var r=new Set;const l=new Ae,h=new Ae;if(null!==e.index){var i=e.attributes.position;const c=e.index;let n=e.groups;0===n.length&&(n=[{start:0,count:c.count,materialIndex:0}]);for(let e=0,t=n.length;e<t;++e){var a=n[e],s=a.start;for(let t=s,e=s+a.count;t<e;t+=3)for(let e=0;e<3;e++){var u=c.getX(t+e),d=c.getX(t+(e+1)%3);l.fromBufferAttribute(i,u),h.fromBufferAttribute(i,d),!0===Sh(l,h,r)&&(o.push(l.x,l.y,l.z),o.push(h.x,h.y,h.z))}}}else{var n=e.attributes.position;for(let t=0,e=n.count/3;t<e;t++)for(let e=0;e<3;e++){var p=3*t+e,m=3*t+(e+1)%3;l.fromBufferAttribute(n,p),h.fromBufferAttribute(n,m),!0===Sh(l,h,r)&&(o.push(l.x,l.y,l.z),o.push(h.x,h.y,h.z))}}this.setAttribute("position",new V(o,3))}}}function Sh(e,t,n){var r=`${e.x},${e.y},${e.z}-${t.x},${t.y},`+t.z,t=`${t.x},${t.y},${t.z}-${e.x},${e.y},`+e.z;return!0!==n.has(r)&&!0!==n.has(t)&&(n.add(r,t),!0)}var Ah=Object.freeze({__proto__:null,BoxGeometry:$r,BoxBufferGeometry:$r,CircleGeometry:ml,CircleBufferGeometry:ml,ConeGeometry:gl,ConeBufferGeometry:gl,CylinderGeometry:fl,CylinderBufferGeometry:fl,DodecahedronGeometry:yl,DodecahedronBufferGeometry:yl,EdgesGeometry:bl,ExtrudeGeometry:ph,ExtrudeBufferGeometry:ph,IcosahedronGeometry:fh,IcosahedronBufferGeometry:fh,LatheGeometry:gh,LatheBufferGeometry:gh,OctahedronGeometry:vh,OctahedronBufferGeometry:vh,PlaneGeometry:yi,PlaneBufferGeometry:yi,PolyhedronGeometry:vl,PolyhedronBufferGeometry:vl,RingGeometry:yh,RingBufferGeometry:yh,ShapeGeometry:xh,ShapeBufferGeometry:xh,SphereGeometry:_h,SphereBufferGeometry:_h,TetrahedronGeometry:Mh,TetrahedronBufferGeometry:Mh,TorusGeometry:Eh,TorusBufferGeometry:Eh,TorusKnotGeometry:bh,TorusKnotBufferGeometry:bh,TubeGeometry:wh,TubeBufferGeometry:wh,WireframeGeometry:Th});class Rh extends pr{constructor(e){super(),this.type="ShadowMaterial",this.color=new _(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}class Lh extends pr{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new _(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ft,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}Lh.prototype.isMeshStandardMaterial=Rh.prototype.isShadowMaterial=!0;class Ch extends Lh{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ne(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return St(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.sheenColor=new _(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new _(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new _(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){0<this._sheen!=0<e&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){0<this._clearcoat!=0<e&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){0<this._transmission!=0<e&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Ph extends pr{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new _(16777215),this.specular=new _(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ft,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}class Dh extends pr{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new _(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ft,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}class Ih extends pr{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ft,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Nh extends pr{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new _(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new _(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}class Oh extends pr{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new _(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ft,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}class Uh extends Xo{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}Uh.prototype.isLineDashedMaterial=Oh.prototype.isMeshMatcapMaterial=Nh.prototype.isMeshLambertMaterial=Ih.prototype.isMeshNormalMaterial=Dh.prototype.isMeshToonMaterial=Ph.prototype.isMeshPhongMaterial=Ch.prototype.isMeshPhysicalMaterial=!0;var Fh=Object.freeze({__proto__:null,ShadowMaterial:Rh,SpriteMaterial:ho,RawShaderMaterial:Ai,ShaderMaterial:ri,PointsMaterial:rl,MeshPhysicalMaterial:Ch,MeshStandardMaterial:Lh,MeshPhongMaterial:Ph,MeshToonMaterial:Dh,MeshNormalMaterial:Ih,MeshLambertMaterial:Nh,MeshDepthMaterial:zs,MeshDistanceMaterial:Gs,MeshBasicMaterial:mr,MeshMatcapMaterial:Oh,LineDashedMaterial:Uh,LineBasicMaterial:Xo,Material:pr});const Bh={arraySlice:function(e,t,n){return Bh.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(n){var t=n.length;const r=new Array(t);for(let e=0;e!==t;++e)r[e]=e;return r.sort(function(e,t){return n[e]-n[t]}),r},sortedArray:function(n,r,i){var a=n.length;const s=new n.constructor(a);for(let e=0,t=0;t!==a;++e){var o=i[e]*r;for(let e=0;e!==r;++e)s[t++]=n[o+e]}return s},flattenJSON:function(t,n,r,i){let a=1,s=t[0];for(;void 0!==s&&void 0===s[i];)s=t[a++];if(void 0!==s){let e=s[i];if(void 0!==e)if(Array.isArray(e))for(;e=s[i],void 0!==e&&(n.push(s.time),r.push.apply(r,e)),s=t[a++],void 0!==s;);else if(void 0!==e.toArray)for(;e=s[i],void 0!==e&&(n.push(s.time),e.toArray(r,r.length)),s=t[a++],void 0!==s;);else for(;e=s[i],void 0!==e&&(n.push(s.time),r.push(e)),s=t[a++],void 0!==s;);}},subclip:function(e,t,c,u,d=30){const n=e.clone(),r=(n.name=t,[]);for(let e=0;e<n.tracks.length;++e){const o=n.tracks[e];var i=o.getValueSize();const l=[],h=[];for(let t=0;t<o.times.length;++t){var a=o.times[t]*d;if(!(a<c||u<=a)){l.push(o.times[t]);for(let e=0;e<i;++e)h.push(o.values[t*i+e])}}0!==l.length&&(o.times=Bh.convertArray(l,o.times.constructor),o.values=Bh.convertArray(h,o.values.constructor),r.push(o))}n.tracks=r;let s=1/0;for(let e=0;e<n.tracks.length;++e)s>n.tracks[e].times[0]&&(s=n.tracks[e].times[0]);for(let e=0;e<n.tracks.length;++e)n.tracks[e].shift(-1*s);return n.resetDuration(),n},makeClipAdditive:function(t,n=0,u=t,e=30){var d=u.tracks.length,r=n/(e=e<=0?30:e);for(let e=0;e<d;++e){const l=u.tracks[e],h=l.ValueTypeName;if("bool"!==h&&"string"!==h){const c=t.tracks.find(function(e){return e.name===l.name&&e.ValueTypeName===h});if(void 0!==c){let e=0;var i=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(e=i/3);let t=0;var a=c.getValueSize(),s=(c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(t=a/3),l.times.length-1);let n;if(r<=l.times[0]){var o=e,p=i-e;n=Bh.arraySlice(l.values,o,p)}else if(r>=l.times[s]){o=s*i+e,p=o+i-e;n=Bh.arraySlice(l.values,o,p)}else{const v=l.createInterpolant();s=e,i=i-e;v.evaluate(r),n=Bh.arraySlice(v.resultBuffer,s,i)}if("quaternion"===h){const y=(new $t).fromArray(n).normalize().conjugate();y.toArray(n)}var m=c.times.length;for(let e=0;e<m;++e){var f=e*a+t;if("quaternion"===h)$t.multiplyQuaternionsFlat(c.values,f,n,0,c.values,f);else{var g=a-2*t;for(let e=0;e<g;++e)c.values[f+e]-=n[e]}}}}}return t.blendMode=2501,t}};class Hh{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){var n=this.parameterPositions;let r=this._cachedIndex,i=n[r],a=n[r-1];e:{t:{let e;n:{r:if(!(t<i)){for(var s=r+2;;){if(void 0===i){if(t<a)break r;return r=n.length,this._cachedIndex=r,this.afterEnd_(r-1,t,a)}if(r===s)break;if(a=i,i=n[++r],t<i)break t}e=n.length;break n}if(t>=a)break e;var o=n[1];t<o&&(r=2,a=o);for(var l=r-2;;){if(void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(r===l)break;if(i=a,a=n[--r-1],t>=a)break t}e=r,r=0}for(;r<e;){var h=r+e>>>1;t<n[h]?e=h:r=1+h}if(i=n[r],a=n[r-1],void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return r=n.length,this._cachedIndex=r,this.afterEnd_(r-1,a,t)}this._cachedIndex=r,this.intervalChanged_(r,a,i)}return this.interpolate_(r,a,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r;for(let e=0;e!==r;++e)t[e]=n[i+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Hh.prototype.beforeStart_=Hh.prototype.copySampleValue_,Hh.prototype.afterEnd_=Hh.prototype.copySampleValue_;class zh extends Hh{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ct,endingEnd:ct}}intervalChanged_(e,t,n){var r=this.parameterPositions;let i=e-2,a=e+1,s=r[i],o=r[a];if(void 0===s)switch(this.getSettings_().endingStart){case ut:i=e,s=2*t-n;break;case dt:i=r.length-2,s=t+r[i]-r[i+1];break;default:i=e,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case ut:a=e,o=2*n-t;break;case dt:a=1,o=n+r[1]-r[0];break;default:a=e-1,o=t}var l=.5*(n-t),h=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-n),this._offsetPrev=i*h,this._offsetNext=a*h}interpolate_(c,e,u,d){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=c*r,p=i-r,m=this._offsetPrev,f=this._offsetNext,a=this._weightPrev,s=this._weightNext,o=(u-e)/(d-e),l=o*o,h=l*o;var g=-a*h+2*a*l-a*o,v=(1+a)*h+(-1.5-2*a)*l+(-.5+a)*o+1,y=(-1-s)*h+(1.5+s)*l+.5*o,x=s*h-s*l;for(let e=0;e!==r;++e)t[e]=g*n[m+e]+v*n[p+e]+y*n[i+e]+x*n[f+e];return t}}class Gh extends Hh{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=(n-t)/(r-t),c=1-h;for(let e=0;e!==s;++e)i[e]=a[l+e]*c+a[o+e]*h;return i}}class Vh extends Hh{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class kh{constructor(e,t,n,r){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Bh.convertArray(t,this.TimeBufferType),this.values=Bh.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;var r;return t.toJSON!==this.toJSON?n=t.toJSON(e):(n={name:e.name,times:Bh.convertArray(e.times,Array),values:Bh.convertArray(e.values,Array)},(r=e.getInterpolation())!==e.DefaultInterpolation&&(n.interpolation=r)),n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Vh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Gh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new zh(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case r:t=this.InterpolantFactoryMethodDiscrete;break;case i:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0!==t)return this.createInterpolant=t,this;var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",n),this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return r;case this.InterpolantFactoryMethodLinear:return i;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(n){if(0!==n){const r=this.times;for(let e=0,t=r.length;e!==t;++e)r[e]+=n}return this}scale(n){if(1!==n){const r=this.times;for(let e=0,t=r.length;e!==t;++e)r[e]*=n}return this}trim(e,t){var n,r=this.times,i=r.length;let a=0,s=i-1;for(;a!==i&&r[a]<e;)++a;for(;-1!==s&&r[s]>t;)--s;return++s,0===a&&s===i||(a>=s&&(s=Math.max(s,1),a=s-1),n=this.getValueSize(),this.times=Bh.arraySlice(r,a,s),this.values=Bh.arraySlice(this.values,a*n,s*n)),this}validate(){let n=!0;var e=this.getValueSize(),t=(e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),n=!1),this.times),r=this.values,i=t.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),n=!1);let a=null;for(let e=0;e!==i;e++){var s=t[e];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,s),n=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,s,a),n=!1;break}a=s}if(void 0!==r&&Bh.isTypedArray(r))for(let e=0,t=r.length;e!==t;++e){var o=r[e];if(isNaN(o)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,o),n=!1;break}}return n}optimize(){const n=Bh.arraySlice(this.times),r=Bh.arraySlice(this.values),i=this.getValueSize(),a=2302===this.getInterpolation(),s=n.length-1;let o=1;for(let e=1;e<s;++e){let t=!1;var l=n[e];if(l!==n[e+1]&&(1!==e||l!==n[0]))if(a)t=!0;else{var h=e*i,c=h-i,d=h+i;for(let e=0;e!==i;++e){var u=r[h+e];if(u!==r[c+e]||u!==r[d+e]){t=!0;break}}}if(t){if(e!==o){n[o]=n[e];var p=e*i,m=o*i;for(let e=0;e!==i;++e)r[m+e]=r[p+e]}++o}}if(0<s){n[o]=n[s];for(let e=s*i,t=o*i,n=0;n!==i;++n)r[t+n]=r[e+n];++o}return o!==n.length?(this.times=Bh.arraySlice(n,0,o),this.values=Bh.arraySlice(r,0,o*i)):(this.times=n,this.values=r),this}clone(){var e=Bh.arraySlice(this.times,0),t=Bh.arraySlice(this.values,0);const n=this.constructor,r=new n(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}kh.prototype.TimeBufferType=Float32Array,kh.prototype.ValueBufferType=Float32Array,kh.prototype.DefaultInterpolation=i;class Wh extends kh{}Wh.prototype.ValueTypeName="bool",Wh.prototype.ValueBufferType=Array,Wh.prototype.DefaultInterpolation=r,Wh.prototype.InterpolantFactoryMethodLinear=void 0,Wh.prototype.InterpolantFactoryMethodSmooth=void 0;class jh extends kh{}jh.prototype.ValueTypeName="color";class Xh extends kh{}Xh.prototype.ValueTypeName="number";class qh extends Hh{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){var i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-t)/(r-t);let l=e*s;for(var h=l+s;l!==h;l+=4)$t.slerpFlat(i,0,a,l-s,a,l,o);return i}}class Yh extends kh{InterpolantFactoryMethodLinear(e){return new qh(this.times,this.values,this.getValueSize(),e)}}Yh.prototype.ValueTypeName="quaternion",Yh.prototype.DefaultInterpolation=i,Yh.prototype.InterpolantFactoryMethodSmooth=void 0;class Zh extends kh{}Zh.prototype.ValueTypeName="string",Zh.prototype.ValueBufferType=Array,Zh.prototype.DefaultInterpolation=r,Zh.prototype.InterpolantFactoryMethodLinear=void 0,Zh.prototype.InterpolantFactoryMethodSmooth=void 0;class Jh extends kh{}class Kh{constructor(e,t=-1,n,r=2500){this.name=e,this.tracks=n,this.duration=t,this.blendMode=r,this.uuid=Tt(),this.duration<0&&this.resetDuration()}static parse(e){const n=[],r=e.tracks,i=1/(e.fps||1);for(let e=0,t=r.length;e!==t;++e)n.push(function(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Xh;case"vector":case"vector2":case"vector3":case"vector4":return Jh;case"color":return jh;case"quaternion":return Yh;case"bool":case"boolean":return Wh;case"string":return Zh}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);{var n,r;void 0===e.times&&(n=[],r=[],Bh.flattenJSON(e.keys,n,r,"value"),e.times=n,e.values=r)}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}(r[e]).scale(i));const t=new this(e.name,e.duration,n,e.blendMode);return t.uuid=e.uuid,t}static toJSON(e){const n=[],r=e.tracks;e={name:e.name,duration:e.duration,tracks:n,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,t=r.length;e!==t;++e)n.push(kh.toJSON(r[e]));return e}static CreateFromMorphTargetSequence(e,r,i,a){var s=r.length;const o=[];for(let n=0;n<s;n++){let e=[],t=[];e.push((n+s-1)%s,n,(n+1)%s),t.push(0,1,0);var l=Bh.getKeyframeOrder(e);e=Bh.sortedArray(e,1,l),t=Bh.sortedArray(t,1,l),a||0!==e[0]||(e.push(s),t.push(t[0])),o.push(new Xh(".morphTargetInfluences["+r[n].name+"]",e,t).scale(1/i))}return new this(e,-1,o)}static findByName(e,t){let n=e;Array.isArray(e)||(n=e.geometry&&e.geometry.animations||e.animations);for(let e=0;e<n.length;e++)if(n[e].name===t)return n[e];return null}static CreateClipsFromMorphTargetSequences(n,e,t){const r={};var i=/^([\w-]*?)([\d]+)$/;for(let e=0,t=n.length;e<t;e++){const o=n[e];var a=o.name.match(i);if(a&&1<a.length){a=a[1];let e=r[a];e||(r[a]=e=[]),e.push(o)}}const s=[];for(const l in r)s.push(this.CreateFromMorphTargetSequence(l,r[l],e,t));return s}static parseAnimation(e,c){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;function t(e,t,n,r,i){var a,s;0!==n.length&&(a=[],s=[],Bh.flattenJSON(n,a,s,r),0!==a.length&&i.push(new e(t,a,s)))}const n=[];var u=e.name||"default",d=e.fps||30,p=e.blendMode;let r=e.length||-1;var m=e.hierarchy||[];for(let e=0;e<m.length;e++){var i=m[e].keys;if(i&&0!==i.length)if(i[0].morphTargets){const s={};let t;for(t=0;t<i.length;t++)if(i[t].morphTargets)for(let e=0;e<i[t].morphTargets.length;e++)s[i[t].morphTargets[e]]=-1;for(const o in s){const l=[],h=[];for(let e=0;e!==i[t].morphTargets.length;++e){var f=i[t];l.push(f.time),h.push(f.morphTarget===o?1:0)}n.push(new Xh(".morphTargetInfluence["+o+"]",l,h))}r=s.length*(d||1)}else{var a=".bones["+c[e].name+"]";t(Jh,a+".position",i,"pos",n),t(Yh,a+".quaternion",i,"rot",n),t(Jh,a+".scale",i,"scl",n)}}return 0===n.length?null:new this(u,r,n,p)}resetDuration(){let n=0;for(let e=0,t=this.tracks.length;e!==t;++e){var r=this.tracks[e];n=Math.max(n,r.times[r.times.length-1])}return this.duration=n,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}const Qh={enabled:!(Jh.prototype.ValueTypeName="vector"),files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class $h{constructor(e,t,n){const r=this;let i=!1,a=0,s=0,o=void 0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){s++,!1===i&&void 0!==r.onStart&&r.onStart(e,a,s),i=!0},this.itemEnd=function(e){a++,void 0!==r.onProgress&&r.onProgress(e,a,s),a===s&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){e=l.indexOf(e);return-1!==e&&l.splice(e,2),this},this.getHandler=function(n){for(let e=0,t=l.length;e<t;e+=2){const i=l[e];var r=l[e+1];if(i.global&&(i.lastIndex=0),i.test(n))return r}return null}}}const ec=new $h;class tc{constructor(e){this.manager=void 0!==e?e:ec,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(n,r){const i=this;return new Promise(function(e,t){i.load(n,e,r,t)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const nc={};class rc extends tc{constructor(e){super(e)}load(a,e,t,n){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);const r=Qh.get(a);if(void 0!==r)return this.manager.itemStart(a),setTimeout(()=>{e&&e(r),this.manager.itemEnd(a)},0),r;if(void 0===nc[a]){nc[a]=[],nc[a].push({onLoad:e,onProgress:t,onError:n});var i=new Request(a,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"});const s=this.mimeType,o=this.responseType;fetch(i).then(e=>{if(200!==e.status&&0!==e.status)throw Error(`fetch for "${e.url}" responded with ${e.status}: `+e.statusText);{if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===e.body.getReader)return e;const o=nc[a],t=e.body.getReader();e=e.headers.get("Content-Length");const l=e?parseInt(e):0,h=0!==l;let s=0;e=new ReadableStream({start(a){!function i(){t.read().then(({done:e,value:t})=>{if(e)a.close();else{s+=t.byteLength;const n=new ProgressEvent("progress",{lengthComputable:h,loaded:s,total:l});for(let e=0,t=o.length;e<t;e++){const r=o[e];r.onProgress&&r.onProgress(n)}a.enqueue(t),i()}})}()}});return new Response(e)}}).then(e=>{switch(o){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then(e=>{const t=new DOMParser;return t.parseFromString(e,s)});case"json":return e.json();default:if(void 0===s)return e.text();{const n=/charset="?([^;"\s]*)"?/i,r=n.exec(s);var t=r&&r[1]?r[1].toLowerCase():void 0;const i=new TextDecoder(t);return e.arrayBuffer().then(e=>i.decode(e))}}}).then(n=>{Qh.add(a,n);var r=nc[a];delete nc[a];for(let e=0,t=r.length;e<t;e++){const i=r[e];i.onLoad&&i.onLoad(n)}}).catch(n=>{var r=nc[a];if(void 0===r)throw this.manager.itemError(a),n;delete nc[a];for(let e=0,t=r.length;e<t;e++){const i=r[e];i.onError&&i.onError(n)}this.manager.itemError(a)}).finally(()=>{this.manager.itemEnd(a)}),this.manager.itemStart(a)}else nc[a].push({onLoad:e,onProgress:t,onError:n})}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class ic extends tc{constructor(e){super(e)}load(t,e,h,n){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,i=Qh.get(t);if(void 0!==i)return r.manager.itemStart(t),setTimeout(function(){e&&e(i),r.manager.itemEnd(t)},0),i;const a=Ft("img");function s(){l(),Qh.add(t,this),e&&e(this),r.manager.itemEnd(t)}function o(e){l(),n&&n(e),r.manager.itemError(t),r.manager.itemEnd(t)}function l(){a.removeEventListener("load",s,!1),a.removeEventListener("error",o,!1)}return a.addEventListener("load",s,!1),a.addEventListener("error",o,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(t),a.src=t,a}}class ac extends tc{constructor(e){super(e)}load(n,r,e,i){const a=new oi,s=new ic(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;for(let e=0;e<n.length;++e)!function(t){s.load(n[t],function(e){a.images[t]=e,o++,6===o&&(a.needsUpdate=!0,r&&r(a))},void 0,i)}(e);return a}}class sc extends tc{constructor(e){super(e)}load(e,t,n,r){const i=this,a=new Uo,s=new rc(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(i.withCredentials),s.load(e,function(e){e=i.parse(e);e&&(void 0!==e.image?a.image=e.image:void 0!==e.data&&(a.image.width=e.width,a.image.height=e.height,a.image.data=e.data),a.wrapS=void 0!==e.wrapS?e.wrapS:Ie,a.wrapT=void 0!==e.wrapT?e.wrapT:Ie,a.magFilter=void 0!==e.magFilter?e.magFilter:Oe,a.minFilter=void 0!==e.minFilter?e.minFilter:Oe,a.anisotropy=void 0!==e.anisotropy?e.anisotropy:1,void 0!==e.encoding&&(a.encoding=e.encoding),void 0!==e.flipY&&(a.flipY=e.flipY),void 0!==e.format&&(a.format=e.format),void 0!==e.type&&(a.type=e.type),void 0!==e.mipmaps&&(a.mipmaps=e.mipmaps,a.minFilter=Fe),1===e.mipmapCount&&(a.minFilter=Oe),void 0!==e.generateMipmaps&&(a.generateMipmaps=e.generateMipmaps),a.needsUpdate=!0,t&&t(a,e))},n,r),a}}class oc extends tc{constructor(e){super(e)}load(e,t,n,r){const i=new qt,a=new ic(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(e){i.image=e,i.needsUpdate=!0,void 0!==t&&t(i)},n,r),i}}class lc extends M{constructor(e,t=1){super(),this.type="Light",this.color=new _(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}lc.prototype.isLight=!0;class hc extends lc{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(M.DefaultUp),this.updateMatrix(),this.groundColor=new _(t)}copy(e){return lc.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}hc.prototype.isHemisphereLight=!0;const cc=new Re,uc=new Ae,dc=new Ae;class pc{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ne(512,512),this.map=null,this.mapPass=null,this.matrix=new Re,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new fi,this._frameExtents=new ne(1,1),this._viewportCount=1,this._viewports=[new Zt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;uc.setFromMatrixPosition(e.matrixWorld),t.position.copy(uc),dc.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(dc),t.updateMatrixWorld(),cc.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(cc),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class mc extends pc{constructor(){super(new ai(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera;var n=2*wt*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;n===t.fov&&r===t.aspect&&i===t.far||(t.fov=n,t.aspect=r,t.far=i,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}mc.prototype.isSpotLightShadow=!0;class fc extends lc{constructor(e,t,n=0,r=Math.PI/3,i=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(M.DefaultUp),this.updateMatrix(),this.target=new M,this.distance=n,this.angle=r,this.penumbra=i,this.decay=a,this.shadow=new mc}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}fc.prototype.isSpotLight=!0;const gc=new Re,vc=new Ae,yc=new Ae;class xc extends pc{constructor(){super(new ai(90,1,.5,500)),this._frameExtents=new ne(4,2),this._viewportCount=6,this._viewports=[new Zt(2,1,1,1),new Zt(0,1,1,1),new Zt(3,1,1,1),new Zt(1,1,1,1),new Zt(3,0,1,1),new Zt(1,0,1,1)],this._cubeDirections=[new Ae(1,0,0),new Ae(-1,0,0),new Ae(0,0,1),new Ae(0,0,-1),new Ae(0,1,0),new Ae(0,-1,0)],this._cubeUps=[new Ae(0,1,0),new Ae(0,1,0),new Ae(0,1,0),new Ae(0,1,0),new Ae(0,0,1),new Ae(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,r=this.matrix;var i=e.distance||n.far;i!==n.far&&(n.far=i,n.updateProjectionMatrix()),vc.setFromMatrixPosition(e.matrixWorld),n.position.copy(vc),yc.copy(n.position),yc.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(yc),n.updateMatrixWorld(),r.makeTranslation(-vc.x,-vc.y,-vc.z),gc.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(gc)}}xc.prototype.isPointLightShadow=!0;class _c extends lc{constructor(e,t,n=0,r=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new xc}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}_c.prototype.isPointLight=!0;class Mc extends pc{constructor(){super(new Si(-5,5,5,-5,.5,500))}}Mc.prototype.isDirectionalLightShadow=!0;class Ec extends lc{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(M.DefaultUp),this.updateMatrix(),this.target=new M,this.shadow=new Mc}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Ec.prototype.isDirectionalLight=!0;class bc extends lc{constructor(e,t){super(e,t),this.type="AmbientLight"}}bc.prototype.isAmbientLight=!0;class wc extends lc{constructor(e,t,n=10,r=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}wc.prototype.isRectAreaLight=!0;class Tc{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new Ae)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){var n=e.x,r=e.y,e=e.z,i=this.coefficients;return t.copy(i[0]).multiplyScalar(.282095),t.addScaledVector(i[1],.488603*r),t.addScaledVector(i[2],.488603*e),t.addScaledVector(i[3],.488603*n),t.addScaledVector(i[4],n*r*1.092548),t.addScaledVector(i[5],r*e*1.092548),t.addScaledVector(i[6],.315392*(3*e*e-1)),t.addScaledVector(i[7],n*e*1.092548),t.addScaledVector(i[8],.546274*(n*n-r*r)),t}getIrradianceAt(e,t){var n=e.x,r=e.y,e=e.z,i=this.coefficients;return t.copy(i[0]).multiplyScalar(.886227),t.addScaledVector(i[1],1.023328*r),t.addScaledVector(i[2],1.023328*e),t.addScaledVector(i[3],1.023328*n),t.addScaledVector(i[4],.858086*n*r),t.addScaledVector(i[5],.858086*r*e),t.addScaledVector(i[6],.743125*e*e-.247708),t.addScaledVector(i[7],.858086*n*e),t.addScaledVector(i[8],.429043*(n*n-r*r)),t}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,n){for(let e=0;e<9;e++)this.coefficients[e].addScaledVector(t.coefficients[e],n);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,n){for(let e=0;e<9;e++)this.coefficients[e].lerp(t.coefficients[e],n);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,n=0){const r=this.coefficients;for(let e=0;e<9;e++)r[e].fromArray(t,n+3*e);return this}toArray(t=[],n=0){const r=this.coefficients;for(let e=0;e<9;e++)r[e].toArray(t,n+3*e);return t}static getBasisAt(e,t){var n=e.x,r=e.y,e=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*e,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*e,t[6]=.315392*(3*e*e-1),t[7]=1.092548*n*e,t[8]=.546274*(n*n-r*r)}}Tc.prototype.isSphericalHarmonics3=!0;class Sc extends lc{constructor(e=new Tc,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}Sc.prototype.isLightProbe=!0;class Ac extends tc{constructor(e){super(e),this.textures={}}load(t,n,e,r){const i=this,a=new rc(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(t,function(e){try{n(i.parse(JSON.parse(e)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}},e,r)}parse(t){const n=this.textures;function e(e){return void 0===n[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),n[e]}const r=new Fh[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&void 0!==r.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.sheen&&(r.sheen=t.sheen),void 0!==t.sheenColor&&(r.sheenColor=(new _).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(r.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==r.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==r.specular&&r.specular.setHex(t.specular),void 0!==t.specularIntensity&&(r.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==r.specularColor&&r.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearcoat&&(r.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(r.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.transmission&&(r.transmission=t.transmission),void 0!==t.thickness&&(r.thickness=t.thickness),void 0!==t.attenuationDistance&&(r.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==r.attenuationColor&&r.attenuationColor.setHex(t.attenuationColor),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.combine&&(r.combine=t.combine),void 0!==t.side&&(r.side=t.side),void 0!==t.shadowSide&&(r.shadowSide=t.shadowSide),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(r.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(r.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(r.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(r.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(r.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(r.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(r.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(r.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),1!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.polygonOffset&&(r.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(r.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(r.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.alphaToCoverage&&(r.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(r.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.toneMapped&&(r.toneMapped=t.toneMapped),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?r.vertexColors=0<t.vertexColors:r.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const a in t.uniforms){var i=t.uniforms[a];switch(r.uniforms[a]={},i.type){case"t":r.uniforms[a].value=e(i.value);break;case"c":r.uniforms[a].value=(new _).setHex(i.value);break;case"v2":r.uniforms[a].value=(new ne).fromArray(i.value);break;case"v3":r.uniforms[a].value=(new Ae).fromArray(i.value);break;case"v4":r.uniforms[a].value=(new Zt).fromArray(i.value);break;case"m3":r.uniforms[a].value=(new It).fromArray(i.value);break;case"m4":r.uniforms[a].value=(new Re).fromArray(i.value);break;default:r.uniforms[a].value=i.value}}if(void 0!==t.defines&&(r.defines=t.defines),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const s in t.extensions)r.extensions[s]=t.extensions[s];if(void 0!==t.shading&&(r.flatShading=1===t.shading),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=e(t.map)),void 0!==t.matcap&&(r.matcap=e(t.matcap)),void 0!==t.alphaMap&&(r.alphaMap=e(t.alphaMap)),void 0!==t.bumpMap&&(r.bumpMap=e(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=e(t.normalMap)),void 0!==t.normalMapType&&(r.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),r.normalScale=(new ne).fromArray(e)}return void 0!==t.displacementMap&&(r.displacementMap=e(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=e(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=e(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=e(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=e(t.specularMap)),void 0!==t.specularIntensityMap&&(r.specularIntensityMap=e(t.specularIntensityMap)),void 0!==t.specularColorMap&&(r.specularColorMap=e(t.specularColorMap)),void 0!==t.envMap&&(r.envMap=e(t.envMap)),void 0!==t.envMapIntensity&&(r.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(r.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(r.lightMap=e(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=e(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=e(t.gradientMap)),void 0!==t.clearcoatMap&&(r.clearcoatMap=e(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=e(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(r.clearcoatNormalMap=e(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(r.clearcoatNormalScale=(new ne).fromArray(t.clearcoatNormalScale)),void 0!==t.transmissionMap&&(r.transmissionMap=e(t.transmissionMap)),void 0!==t.thicknessMap&&(r.thicknessMap=e(t.thicknessMap)),void 0!==t.sheenColorMap&&(r.sheenColorMap=e(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(r.sheenRoughnessMap=e(t.sheenRoughnessMap)),r}setTextures(e){return this.textures=e,this}}class Rc{static decodeText(n){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(n);let r="";for(let e=0,t=n.length;e<t;e++)r+=String.fromCharCode(n[e]);try{return decodeURIComponent(escape(r))}catch(e){return r}}static extractUrlBase(e){var t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Lc extends S{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}Lc.prototype.isInstancedBufferGeometry=!0;class Cc extends tc{constructor(e){super(e)}load(t,n,e,r){const i=this,a=new rc(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(t,function(e){try{n(i.parse(JSON.parse(e)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}},e,r)}parse(n){const i={},a={};function c(e,t){if(void 0!==i[t])return i[t];var n=e.interleavedBuffers[t],e=function(e,t){if(void 0!==a[t])return a[t];e=e.arrayBuffers,e=e[t],e=new Uint32Array(e).buffer;return a[t]=e}(e,n.buffer),e=Ut(n.type,e);const r=new so(e,n.stride);return r.uuid=n.uuid,i[t]=r,r}const r=new(n.isInstancedBufferGeometry?Lc:S);var e=n.data.index,u=(void 0!==e&&(e=Ut(e.type,e.array),r.setIndex(new vr(e,1))),n.data.attributes);for(const f in u){var t=u[f];let e;if(t.isInterleavedBufferAttribute){var s=c(n.data,t.data);e=new lo(s,t.itemSize,t.offset,t.normalized)}else{s=Ut(t.type,t.array);const g=t.isInstancedBufferAttribute?zo:vr;e=new g(s,t.itemSize,t.normalized)}void 0!==t.name&&(e.name=t.name),void 0!==t.usage&&e.setUsage(t.usage),void 0!==t.updateRange&&(e.updateRange.offset=t.updateRange.offset,e.updateRange.count=t.updateRange.count),r.setAttribute(f,e)}var o=n.data.morphAttributes;if(o)for(const v in o){var d=o[v];const y=[];for(let t=0,e=d.length;t<e;t++){var l,h=d[t];let e;e=h.isInterleavedBufferAttribute?(l=c(n.data,h.data),new lo(l,h.itemSize,h.offset,h.normalized)):(l=Ut(h.type,h.array),new vr(l,h.itemSize,h.normalized)),void 0!==h.name&&(e.name=h.name),y.push(e)}r.morphAttributes[v]=y}n.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);var p=n.data.groups||n.data.drawcalls||n.data.offsets;if(void 0!==p)for(let e=0,t=p.length;e!==t;++e){var m=p[e];r.addGroup(m.start,m.count,m.materialIndex)}e=n.data.boundingSphere;if(void 0!==e){const x=new Ae;void 0!==e.center&&x.fromArray(e.center),r.boundingSphere=new En(x,e.radius)}return n.name&&(r.name=n.name),n.userData&&(r.userData=n.userData),r}}const Pc={UVMapping:300,CubeReflectionMapping:b,CubeRefractionMapping:w,EquirectangularReflectionMapping:l,EquirectangularRefractionMapping:h,CubeUVReflectionMapping:C,CubeUVRefractionMapping:P},Dc={RepeatWrapping:k,ClampToEdgeWrapping:Ie,MirroredRepeatWrapping:W},Ic={NearestFilter:Ne,NearestMipmapNearestFilter:j,NearestMipmapLinearFilter:X,LinearFilter:Oe,LinearMipmapNearestFilter:Ue,LinearMipmapLinearFilter:Fe};class Nc extends tc{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(t,n,e,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,a=Qh.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){n&&n(a),i.manager.itemEnd(t)},0),a;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(i.options,{colorSpaceConversion:"none"}))}).then(function(e){Qh.add(t,e),n&&n(e),i.manager.itemEnd(t)}).catch(function(e){r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}),i.manager.itemStart(t)}}let Oc;const Uc={getContext:function(){return void 0===Oc&&(Oc=new(window.AudioContext||window.webkitAudioContext)),Oc},setContext:function(e){Oc=e}};class Fc extends tc{constructor(e){super(e)}load(r,i,e,a){const s=this,t=new rc(this.manager);t.setResponseType("arraybuffer"),t.setPath(this.path),t.setRequestHeader(this.requestHeader),t.setWithCredentials(this.withCredentials),t.load(r,function(e){try{var t=e.slice(0);const n=Uc.getContext();n.decodeAudioData(t,function(e){i(e)})}catch(e){a?a(e):console.error(e),s.manager.itemError(r)}},e,a)}}class Bc extends Sc{constructor(e,t,n=1){super(void 0,n);var n=(new _).set(e),e=(new _).set(t),t=new Ae(n.r,n.g,n.b),n=new Ae(e.r,e.g,e.b),e=Math.sqrt(Math.PI),r=e*Math.sqrt(.75);this.sh.coefficients[0].copy(t).add(n).multiplyScalar(e),this.sh.coefficients[1].copy(t).sub(n).multiplyScalar(r)}}class Hc extends Sc{constructor(e,t=1){super(void 0,t);t=(new _).set(e);this.sh.coefficients[0].set(t.r,t.g,t.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Hc.prototype.isAmbientLightProbe=Bc.prototype.isHemisphereLightProbe=Nc.prototype.isImageBitmapLoader=!0;const zc=new Re,Gc=new Re,Vc=new Re;class kc{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Wc(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;return this.autoStart&&!this.running?(this.start(),0):(this.running&&(t=Wc(),e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e),e);var t}}function Wc(){return("undefined"==typeof performance?Date:performance).now()}const jc=new Ae,Xc=new $t,qc=new Ae,Yc=new Ae;class Zc extends M{constructor(){super(),this.type="AudioListener",this.context=Uc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new kc}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener;var n,e=this.up;this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(jc,Xc,qc),Yc.set(0,0,-1).applyQuaternion(Xc),t.positionX?(n=this.context.currentTime+this.timeDelta,t.positionX.linearRampToValueAtTime(jc.x,n),t.positionY.linearRampToValueAtTime(jc.y,n),t.positionZ.linearRampToValueAtTime(jc.z,n),t.forwardX.linearRampToValueAtTime(Yc.x,n),t.forwardY.linearRampToValueAtTime(Yc.y,n),t.forwardZ.linearRampToValueAtTime(Yc.z,n),t.upX.linearRampToValueAtTime(e.x,n),t.upY.linearRampToValueAtTime(e.y,n),t.upZ.linearRampToValueAtTime(e.z,n)):(t.setPosition(jc.x,jc.y,jc.z),t.setOrientation(Yc.x,Yc.y,Yc.z,e.x,e.y,e.z))}}class Jc extends M{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e=e||[],!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Kc=new Ae,Qc=new $t,$c=new Ae,eu=new Ae;class tu{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;var n=this.getFrequencyData();for(let e=0;e<n.length;e++)t+=n[e];return t/n.length}}class nu{constructor(e,t,n){this.binding=e,this.valueSize=n;let r,i,a;switch(t){case"quaternion":r=this._slerp,i=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,i=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,i=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=i,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,r=this.valueSize,i=e*r+r;let a=this.cumulativeWeight;if(0===a){for(let e=0;e!==r;++e)n[i+e]=n[e];a=t}else{a+=t;e=t/a;this._mixBufferRegion(n,i,0,e,r)}this.cumulativeWeight=a}accumulateAdditive(e){var t=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const n=this.valueSize,r=this.buffer,i=e*n+n,t=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,t<1&&(e=n*this._origIndex,this._mixBufferRegion(r,i,e,1-t,n)),0<a&&this._mixBufferRegionAdditive(r,i,this._addIndex*n,1,n);for(let e=n,t=n+n;e!==t;++e)if(r[e]!==r[e+n]){s.setValue(r,i);break}}saveOriginalState(){const e=this.binding,n=this.buffer,r=this.valueSize,i=r*this._origIndex;e.getValue(n,i);for(let e=r,t=i;e!==t;++e)n[e]=n[i+e%r];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){var t=this._addIndex*this.valueSize,n=t+this.valueSize;for(let e=t;e<n;e++)this.buffer[e]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){var t=this._origIndex*this.valueSize,n=this._addIndex*this.valueSize;for(let e=0;e<this.valueSize;e++)this.buffer[n+e]=this.buffer[t+e]}_select(t,n,r,e,i){if(.5<=e)for(let e=0;e!==i;++e)t[n+e]=t[r+e]}_slerp(e,t,n,r){$t.slerpFlat(e,t,e,t,e,n,r)}_slerpAdditive(e,t,n,r,i){i=this._workIndex*i;$t.multiplyQuaternionsFlat(e,i,e,t,e,n),$t.slerpFlat(e,t,e,t,e,i,r)}_lerp(t,n,r,i,a){var s=1-i;for(let e=0;e!==a;++e){var o=n+e;t[o]=t[o]*s+t[r+e]*i}}_lerpAdditive(t,n,r,i,a){for(let e=0;e!==a;++e){var s=n+e;t[s]=t[s]+t[r+e]*i}}}Fi="\\[\\]\\.:\\/";const ru=new RegExp("["+Fi+"]","g");var Bi="[^"+Fi+"]",Fi="[^"+Fi.replace("\\.","")+"]",iu=/((?:WC+[\/:])*)/.source.replace("WC",Bi),Fi=/(WCOD+)?/.source.replace("WCOD",Fi),au=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Bi),Bi=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Bi);const su=new RegExp("^"+iu+Fi+au+Bi+"$"),ou=["material","materials","bones"];class lu{constructor(e,t,n){this.path=t,this.parsedPath=n||lu.parseTrackName(t),this.node=lu.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return new(e&&e.isAnimationObjectGroup?lu.Composite:lu)(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(ru,"")}static parseTrackName(e){var t=su.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]};var r,t=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==t&&-1!==t&&(r=n.nodeName.substring(t+1),-1!==ou.indexOf(r)&&(n.nodeName=n.nodeName.substring(0,t),n.objectName=r)),null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,r){if(!r||""===r||"."===r||-1===r||r===e.name||r===e.uuid)return e;if(e.skeleton){var t=e.skeleton.getBoneByName(r);if(void 0!==t)return t}if(e.children){const i=function(t){for(let e=0;e<t.length;e++){var n=t[e];if(n.name===r||n.uuid===r)return n;n=i(n.children);if(n)return n}return null};t=i(e.children);if(t)return t}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(n,r){var i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)n[r++]=i[e]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(n,r){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=n[r++]}_setValue_array_setNeedsUpdate(n,r){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=n[r++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(n,r){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=n[r++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let n=this.node;var r=this.parsedPath,i=r.objectName,a=r.propertyName;let s=r.propertyIndex;if(n||(n=lu.findNode(this.rootNode,r.nodeName)||this.rootNode,this.node=n),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,n){if(i){let t=r.objectIndex;switch(i){case"materials":if(!n.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!n.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);n=n.material.materials;break;case"bones":if(!n.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);n=n.skeleton.bones;for(let e=0;e<n.length;e++)if(n[e].name===t){t=e;break}break;default:if(void 0===n[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);n=n[i]}if(void 0!==t){if(void 0===n[t])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,n);n=n[t]}}var o=n[a];if(void 0===o)return r=r.nodeName,void console.error("THREE.PropertyBinding: Trying to update property for track: "+r+"."+a+" but it wasn't found.",n);let e=this.Versioning.None,t=(this.targetObject=n,void 0!==n.needsUpdate?e=this.Versioning.NeedsUpdate:void 0!==n.matrixWorldNeedsUpdate&&(e=this.Versioning.MatrixWorldNeedsUpdate),this.BindingType.Direct);if(void 0!==s){if("morphTargetInfluences"===a){if(!n.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!n.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!n.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==n.morphTargetDictionary[s]&&(s=n.morphTargetDictionary[s])}t=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else void 0!==o.fromArray&&void 0!==o.toArray?(t=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(t=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=a;this.getValue=this.GetterByBindingType[t],this.setValue=this.SetterByBindingTypeAndVersioning[t][e]}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}lu.Composite=class{constructor(e,t,n){n=n||lu.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)}setValue(n,r){const i=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=i.length;e!==t;++e)i[e].setValue(n,r)}bind(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].bind()}unbind(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].unbind()}},lu.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},lu.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},lu.prototype.GetterByBindingType=[lu.prototype._getValue_direct,lu.prototype._getValue_array,lu.prototype._getValue_arrayElement,lu.prototype._getValue_toArray],lu.prototype.SetterByBindingTypeAndVersioning=[[lu.prototype._setValue_direct,lu.prototype._setValue_direct_setNeedsUpdate,lu.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[lu.prototype._setValue_array,lu.prototype._setValue_array_setNeedsUpdate,lu.prototype._setValue_array_setMatrixWorldNeedsUpdate],[lu.prototype._setValue_arrayElement,lu.prototype._setValue_arrayElement_setNeedsUpdate,lu.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[lu.prototype._setValue_fromArray,lu.prototype._setValue_fromArray_setNeedsUpdate,lu.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class hu{constructor(){this.uuid=Tt(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const n={};this._indicesByUUID=n;for(let e=0,t=arguments.length;e!==t;++e)n[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const r=this._objects,i=this._indicesByUUID,a=this._paths,d=this._parsedPaths,s=this._bindings,p=s.length;let m=void 0,f=r.length,o=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var l=arguments[e],h=l.uuid;let n=i[h];if(void 0===n){n=f++,i[h]=n,r.push(l);for(let e=0,t=p;e!==t;++e)s[e].push(new lu(l,a[e],d[e]))}else if(n<o){m=r[n];var c=--o,g=r[c];i[g.uuid]=n,r[n]=g,i[h]=c,r[c]=l;for(let t=0,e=p;t!==e;++t){const u=s[t],v=u[c];let e=u[n];u[n]=v,void 0===e&&(e=new lu(l,a[t],d[t])),u[c]=e}}else r[n]!==m&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=o}remove(){const n=this._objects,r=this._indicesByUUID,i=this._bindings,u=i.length;let a=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var s=arguments[e],o=s.uuid,l=r[o];if(void 0!==l&&l>=a){var h=a++,d=n[h];r[d.uuid]=l,n[l]=d,r[o]=h,n[h]=s;for(let e=0,t=u;e!==t;++e){const c=i[e],p=c[h],m=c[l];c[l]=p,c[h]=m}}}this.nCachedObjects_=a}uncache(){const n=this._objects,r=this._indicesByUUID,i=this._bindings,d=i.length;let a=this.nCachedObjects_,p=n.length;for(let e=0,t=arguments.length;e!==t;++e){var s=arguments[e].uuid,o=r[s];if(void 0!==o)if(delete r[s],o<a){var l=--a,s=n[l],m=--p,f=n[m];r[s.uuid]=o,n[o]=s,r[f.uuid]=l,n[l]=f,n.pop();for(let e=0,t=d;e!==t;++e){const c=i[e],g=c[l],v=c[m];c[o]=g,c[l]=v,c.pop()}}else{var h=--p,s=n[h];0<h&&(r[s.uuid]=o),n[o]=s,n.pop();for(let e=0,t=d;e!==t;++e){const u=i[e];u[o]=u[h],u.pop()}}}this.nCachedObjects_=a}subscribe_(n,r){const e=this._bindingsIndicesByPath;let t=e[n];const i=this._bindings;if(void 0!==t)return i[t];const a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l);t=i.length,e[n]=t,a.push(n),s.push(r),i.push(h);for(let e=c,t=o.length;e!==t;++e){var u=o[e];h[e]=new lu(u,n,r)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){const r=this._paths,i=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s],l=e[s];t[l]=n,a[n]=o,a.pop(),i[n]=i[s],i.pop(),r[n]=r[s],r.pop()}}}hu.prototype.isAnimationObjectGroup=!0;class cu{constructor(e,t,n=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=r;const i=t.tracks,a=i.length,s=new Array(a);var o={endingStart:ct,endingEnd:ct};for(let e=0;e!==a;++e){const l=i[e].createInterpolant(null);s[e]=l,l.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){var r,i;return e.fadeOut(t),this.fadeIn(t),n&&(i=(n=this._clip.duration)/(r=e._clip.duration),e.warp(1,r/n,t),this.warp(i,1,t)),this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const r=this._mixer,i=r.time,a=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=r._lendControlInterpolant(),this._timeScaleInterpolant=s);const o=s.parameterPositions,l=s.sampleValues;return o[0]=i,o[1]=i+n,l[0]=e/a,l[1]=t/a,this}stopWarping(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,r){if(this.enabled){var i=this._startTime;if(null!==i){i=(e-i)*n;if(i<0||0===n)return;this._startTime=null,t=n*i}t*=this._updateTimeScale(e);var a=this._updateTime(t),s=this._updateWeight(e);if(0<s){const o=this._interpolants,l=this._propertyBindings;if(2501===this.blendMode)for(let e=0,t=o.length;e!==t;++e)o[e].evaluate(a),l[e].accumulateAdditive(s);else for(let e=0,t=o.length;e!==t;++e)o[e].evaluate(a),l[e].accumulate(r,s)}}else this._updateWeight(e)}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const r=this._weightInterpolant;var n;null!==r&&(n=r.evaluate(e)[0],t*=n,e>r.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1)))}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const r=this._timeScaleInterpolant;var n;null!==r&&(n=r.evaluate(e)[0],t*=n,e>r.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){var t=this._clip.duration,n=this.loop;let r=this.time+e,i=this._loopCount;var a,s=2202===n;if(0===e)return-1!==i&&s&&1==(1&i)?t-r:r;if(2200===n){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else{if(!(r<0)){this.time=r;break e}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else if(-1===i&&(0<=e?(i=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),r>=t||r<0?(n=Math.floor(r/t),r-=t*n,i+=Math.abs(n),(a=this.repetitions-i)<=0?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=0<e?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<e?1:-1})):(1==a?this._setEndings(a=e<0,!a,s):this._setEndings(!1,!1,s),this._loopCount=i,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n}))):this.time=r,s&&1==(1&i))return t-r;return r}_setEndings(e,t,n){const r=this._interpolantSettings;n?(r.endingStart=ut,r.endingEnd=ut):(r.endingStart=e?this.zeroSlopeAtStart?ut:ct:dt,r.endingEnd=t?this.zeroSlopeAtEnd?ut:ct:dt)}_scheduleFading(e,t,n){const r=this._mixer,i=r.time;let a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);const s=a.parameterPositions,o=a.sampleValues;return s[0]=i,o[0]=t,s[1]=i+e,o[1]=n,this}}class uu extends _t{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,n){const r=e._localRoot||this._root,i=e._clip.tracks,c=i.length,a=e._propertyBindings,u=e._interpolants,s=r.uuid,t=this._bindingsByRootAndName;let o=t[s];void 0===o&&(o={},t[s]=o);for(let t=0;t!==c;++t){const l=i[t],h=l.name;let e=o[h];if(void 0!==e)++e.referenceCount,a[t]=e;else{if(e=a[t],void 0!==e){null===e._cacheIndex&&(++e.referenceCount,this._addInactiveBinding(e,s,h));continue}var d=n&&n._propertyBindings[t].binding.parsedPath;e=new nu(lu.create(r,h,d),l.ValueTypeName,l.getValueSize()),++e.referenceCount,this._addInactiveBinding(e,s,h),a[t]=e}u[t].resultBuffer=e.buffer}}_activateAction(e){if(!this._isActiveAction(e)){null===e._cacheIndex&&(t=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n],this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t));var t,n,r,i=e._propertyBindings;for(let e=0,t=i.length;e!==t;++e){const a=i[e];0==a.useCount++&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){var n=e._propertyBindings;for(let e=0,t=n.length;e!==t;++e){const r=n[e];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){e=e._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(e,t,n){const r=this._actions,i=this._actionsByClip;let a=i[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=a;else{const s=a.knownActions;e._byClipCacheIndex=s.length,s.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],r=e._cacheIndex,i=(n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null,e._clip.uuid),a=this._actionsByClip,s=a[i],o=s.knownActions,l=o[o.length-1],h=e._byClipCacheIndex,c=(l._byClipCacheIndex=h,o[h]=l,o.pop(),e._byClipCacheIndex=null,s.actionByRoot),u=(e._localRoot||this._root).uuid;delete c[u],0===o.length&&delete a[i],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){var n=e._propertyBindings;for(let e=0,t=n.length;e!==t;++e){const r=n[e];0==--r.referenceCount&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i}_addInactiveBinding(e,t,n){const r=this._bindingsByRootAndName,i=this._bindings;let a=r[t];void 0===a&&(a={},r[t]=a),(a[n]=e)._cacheIndex=i.length,i.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,r=n.rootNode.uuid,i=n.path,a=this._bindingsByRootAndName,s=a[r],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete s[i],0===Object.keys(s).length&&delete a[r]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return void 0===n&&(n=new Gh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,i=t[r];e.__cacheIndex=r,t[r]=e,i.__cacheIndex=n,t[n]=i}clipAction(e,t,n){var r=t||this._root,i=r.uuid;let a="string"==typeof e?Kh.findByName(r,e):e;r=null!==a?a.uuid:e,e=this._actionsByClip[r];let s=null;if(void 0===n&&(n=null!==a?a.blendMode:2500),void 0!==e){var o=e.actionByRoot[i];if(void 0!==o&&o.blendMode===n)return o;s=e.knownActions[0],null===a&&(a=s._clip)}if(null===a)return null;o=new cu(this,a,t,n);return this._bindAction(o,s),this._addInactiveAction(o,r,i),o}existingAction(e,t){var t=t||this._root,n=t.uuid,t="string"==typeof e?Kh.findByName(t,e):e,t=t?t.uuid:e,e=this._actionsByClip[t];return void 0!==e&&e.actionByRoot[n]||null}stopAllAction(){const t=this._actions,n=this._nActiveActions;for(let e=n-1;0<=e;--e)t[e].stop();return this}update(t){t*=this.timeScale;var n=this._actions,r=this._nActiveActions,i=this.time+=t,a=Math.sign(t),s=this._accuIndex^=1;for(let e=0;e!==r;++e){const h=n[e];h._update(i,t,a,s)}const o=this._bindings,l=this._nActiveBindings;for(let e=0;e!==l;++e)o[e].apply(s);return this}setTime(e){for(let e=this.time=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const n=this._actions,t=e.uuid,r=this._actionsByClip,i=r[t];if(void 0!==i){var a=i.knownActions;for(let e=0,t=a.length;e!==t;++e){const s=a[e],o=(this._deactivateAction(s),s._cacheIndex),l=n[n.length-1];s._cacheIndex=null,s._byClipCacheIndex=null,l._cacheIndex=o,n[o]=l,n.pop(),this._removeInactiveBindingsForAction(s)}delete r[t]}}uncacheRoot(e){var t=e.uuid,n=this._actionsByClip;for(const a in n){var r=n[a].actionByRoot[t];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}var i=this._bindingsByRootAndName[t];if(void 0!==i)for(const s in i){const o=i[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){e=this.existingAction(e,t);null!==e&&(this._deactivateAction(e),this._removeInactiveAction(e))}}uu.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class du{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new du(void 0===this.value.clone?this.value:this.value.clone())}}class pu extends so{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class mu{constructor(e,t,n,r,i){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=r,this.count=i,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}mu.prototype.isGLBufferAttribute=pu.prototype.isInstancedInterleavedBuffer=!0;function fu(e,t){return e.distance-t.distance}function gu(e,n,r,t){if(e.layers.test(n.layers)&&e.raycast(n,r),!0===t){var i=e.children;for(let e=0,t=i.length;e<t;e++)gu(i[e],n,r,!0)}}const vu=new ne;class yu{constructor(e=new ne(1/0,1/0),t=new ne(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(n){this.makeEmpty();for(let e=0,t=n.length;e<t;e++)this.expandByPoint(n[e]);return this}setFromCenterAndSize(e,t){t=vu.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=vu.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}yu.prototype.isBox2=!0;const xu=new Ae,_u=new Ae;class Mu{constructor(e=new Ae,t=new Ae){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){xu.subVectors(e,this.start),_u.subVectors(this.end,this.start);e=_u.dot(_u);let n=_u.dot(xu)/e;return t&&(n=St(n,0,1)),n}closestPointToPoint(e,t,n){e=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(e).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const Eu=new Ae;class bu extends M{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new S,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1;e<32;e++,t++){var i=e/32*Math.PI*2,a=t/32*Math.PI*2;r.push(Math.cos(i),Math.sin(i),1,Math.cos(a),Math.sin(a),1)}n.setAttribute("position",new V(r,3));e=new Xo({fog:!1,toneMapped:!1});this.cone=new tl(n,e),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();var e=this.light.distance||1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Eu.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Eu),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const wu=new Ae,Tu=new Re,Su=new Re;class Au extends tl{constructor(e){var t=function t(n){const r=[];n&&n.isBone&&r.push(n);for(let e=0;e<n.children.length;e++)r.push.apply(r,t(n.children[e]));return r}(e);const n=new S,r=[],i=[];var a=new _(0,0,1),s=new _(0,1,0);for(let e=0;e<t.length;e++){var o=t[e];o.parent&&o.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(a.r,a.g,a.b),i.push(s.r,s.g,s.b))}n.setAttribute("position",new V(r,3)),n.setAttribute("color",new V(i,3));var l=new Xo({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){var n=this.bones;const t=this.geometry,r=t.getAttribute("position");Su.copy(this.root.matrixWorld).invert();for(let e=0,t=0;e<n.length;e++){var i=n[e];i.parent&&i.parent.isBone&&(Tu.multiplyMatrices(Su,i.matrixWorld),wu.setFromMatrixPosition(Tu),r.setXYZ(t,wu.x,wu.y,wu.z),Tu.multiplyMatrices(Su,i.parent.matrixWorld),wu.setFromMatrixPosition(Tu),r.setXYZ(t+1,wu.x,wu.y,wu.z),t+=2)}t.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}class Ru extends Kr{constructor(e,t,n){super(new _h(t,4,2),new mr({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Lu=new Ae,Cu=new _,Pu=new _;class Du extends M{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const r=new vh(t);r.rotateY(.5*Math.PI),this.material=new mr({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);e=r.getAttribute("position"),n=new Float32Array(3*e.count);r.setAttribute("color",new vr(n,3)),this.add(new Kr(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const r=e.geometry.getAttribute("color");Cu.copy(this.light.color),Pu.copy(this.light.groundColor);for(let e=0,t=r.count;e<t;e++){var n=e<t/2?Cu:Pu;r.setXYZ(e,n.r,n.g,n.b)}r.needsUpdate=!0}e.lookAt(Lu.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Iu extends tl{constructor(e=10,r=10,i=4473924,a=8947848){i=new _(i),a=new _(a);var s=r/2,u=e/r,o=e/2;const l=[],h=[];for(let e=0,t=0,n=-o;e<=r;e++,n+=u){l.push(-o,0,n,o,0,n),l.push(n,0,-o,n,0,o);const c=e===s?i:a;c.toArray(h,t),t+=3,c.toArray(h,t),t+=3,c.toArray(h,t),t+=3,c.toArray(h,t),t+=3}const t=new S;t.setAttribute("position",new V(l,3)),t.setAttribute("color",new V(h,3));e=new Xo({vertexColors:!0,toneMapped:!1});super(t,e),this.type="GridHelper"}}tl;const Nu=new Ae,Ou=new Ae,Uu=new Ae;class Fu extends M{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===t&&(t=1);let r=new S;r.setAttribute("position",new V([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));e=new Xo({fog:!1,toneMapped:!1});this.lightPlane=new Qo(r,e),this.add(this.lightPlane),r=new S,r.setAttribute("position",new V([0,0,0,0,0,1],3)),this.targetLine=new Qo(r,e),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Nu.setFromMatrixPosition(this.light.matrixWorld),Ou.setFromMatrixPosition(this.light.target.matrixWorld),Uu.subVectors(Ou,Nu),this.lightPlane.lookAt(Ou),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Ou),this.targetLine.scale.z=Uu.length()}}const Bu=new Ae,Hu=new ii;tl;function zu(e,t,n,r,i,a,s){Bu.set(i,a,s).unproject(r);var o=t[e];if(void 0!==o){const l=n.getAttribute("position");for(let e=0,t=o.length;e<t;e++)l.setXYZ(o[e],Bu.x,Bu.y,Bu.z)}}const Gu=new nn;class Vu extends tl{constructor(e,t=16776960){var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24);const i=new S;i.setIndex(new vr(n,1)),i.setAttribute("position",new vr(r,3)),super(i,new Xo({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Gu.setFromObject(this.object),!Gu.isEmpty()){var e=Gu.min,t=Gu.max;const n=this.geometry.attributes.position,r=n.array;r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=e.x,r[4]=t.y,r[5]=t.z,r[6]=e.x,r[7]=e.y,r[8]=t.z,r[9]=t.x,r[10]=e.y,r[11]=t.z,r[12]=t.x,r[13]=t.y,r[14]=e.z,r[15]=e.x,r[16]=t.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=t.x,r[22]=e.y,r[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}}setFromObject(e){return this.object=e,this.update(),this}copy(e){return tl.prototype.copy.call(this,e),this.object=e.object,this}}tl;Qo;const ku=new Ae;let Wu,ju;class Xu extends M{constructor(e=new Ae(0,0,1),t=new Ae(0,0,0),n=1,r=16776960,i=.2*n,a=.2*i){super(),this.type="ArrowHelper",void 0===Wu&&(Wu=new S,Wu.setAttribute("position",new V([0,0,0,0,1,0],3)),ju=new fl(0,.5,1,5,1),ju.translate(0,-.5,0)),this.position.copy(t),this.line=new Qo(Wu,new Xo({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Kr(ju,new mr({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,i,a)}setDirection(e){.99999<e.y?this.quaternion.set(0,0,0,1):e.y<-.99999?this.quaternion.set(1,0,0,0):(ku.set(e.z,0,-e.x).normalize(),e=Math.acos(e.y),this.quaternion.setFromAxisAngle(ku,e))}setLength(e,t=.2*e,n=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class qu extends tl{constructor(e=1){e=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e];const t=new S;t.setAttribute("position",new V(e,3)),t.setAttribute("color",new V([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));e=new Xo({vertexColors:!0,toneMapped:!1});super(t,e),this.type="AxesHelper"}setColors(e,t,n){const r=new _;var i=this.geometry.attributes.color.array;return r.set(e),r.toArray(i,0),r.toArray(i,3),r.set(t),r.toArray(i,6),r.toArray(i,9),r.set(n),r.toArray(i,12),r.toArray(i,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}const Yu=new Float32Array(1),Zu=new Int32Array(Yu.buffer);wl.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(wl.prototype),(e.prototype.constructor=e).prototype.getPoint=t,e},jl.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},Iu.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Au.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},tc.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Rc.extractUrlBase(e)},tc.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},yu.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},yu.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},yu.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},yu.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},nn.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},nn.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},nn.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},nn.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},nn.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},En.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},fi.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Mu.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},It.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},It.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},It.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},It.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},It.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},It.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Re.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},Re.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Re.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Ae).setFromMatrixColumn(this,3)},Re.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},Re.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Re.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Re.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Re.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Re.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},Re.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Re.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Re.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Re.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Re.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Re.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Re.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Re.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Re.prototype.makeFrustum=function(e,t,n,r,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,n,i,a)},Re.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},di.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},$t.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},$t.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Cn.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Cn.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},Cn.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},ur.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},ur.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},ur.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},ur.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},ur.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},ur.barycoordFromPoint=function(e,t,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),ur.getBarycoord(e,t,n,r,i)},ur.normal=function(e,t,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),ur.getNormal(e,t,n,r)},Xl.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},Xl.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ph(this,e)},Xl.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new xh(this,e)},ne.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},ne.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},ne.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ae.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},Ae.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},Ae.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},Ae.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},Ae.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},Ae.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},Ae.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Ae.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Ae.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Zt.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Zt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},M.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},M.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},M.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},M.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},M.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(M.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Kr.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Kr.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),No.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},ai.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(lc.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(vr.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===vt},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(vt)}}}),vr.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?vt:a),this},vr.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},vr.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},S.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},S.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new vr(t,arguments[2])))},S.prototype.addDrawCall=function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},S.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},S.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},S.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},S.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(S.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),so.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?vt:a),this},so.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},ph.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},ph.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},ph.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},ao.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},du.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(pr.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new _}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(ri.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),to.prototype.clearTarget=function(e,t,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,r)},to.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},to.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},to.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},to.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},to.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},to.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},to.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},to.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},to.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},to.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},to.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},to.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},to.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},to.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},to.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},to.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},to.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},to.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},to.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},to.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},to.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},to.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},to.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},to.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(to.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?mt:pt}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(Ws.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(Jt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Jc.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this,n=new Fc;return n.load(e,function(e){t.setBuffer(e)}),this},tu.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},si.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},si.prototype.clear=function(e,t,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,r)},jt.crossOrigin=void 0,jt.loadTexture=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new oc,a=(i.setCrossOrigin(this.crossOrigin),i.load(e,n,void 0,r));return t&&(a.mapping=t),a},jt.loadTextureCube=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new ac,a=(i.setCrossOrigin(this.crossOrigin),i.load(e,n,void 0,r));return t&&(a.mapping=t),a},jt.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},jt.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};iu={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:t}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=t),e.ACESFilmicToneMapping=4,e.AddEquation=re,e.AddOperation=2,e.AdditiveAnimationBlendMode=2501,e.AdditiveBlending=Q,e.AlphaFormat=p,e.AlwaysDepth=_e,e.AlwaysStencilFunc=519,e.AmbientLight=bc,e.AmbientLightProbe=Hc,e.AnimationClip=Kh,e.AnimationLoader=class extends tc{constructor(e){super(e)}load(t,n,e,r){const i=this,a=new rc(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(e){try{n(i.parse(JSON.parse(e)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}},e,r)}parse(t){const n=[];for(let e=0;e<t.length;e++){var r=Kh.parse(t[e]);n.push(r)}return n}},e.AnimationMixer=uu,e.AnimationObjectGroup=hu,e.AnimationUtils=Bh,e.ArcCurve=Sl,e.ArrayCamera=Ys,e.ArrowHelper=Xu,e.Audio=Jc,e.AudioAnalyser=tu,e.AudioContext=Uc,e.AudioListener=Zc,e.AudioLoader=Fc,e.AxesHelper=qu,e.AxisHelper=function(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new qu(e)},e.BackSide=Ce,e.BasicDepthPacking=3200,e.BasicShadowMap=0,e.BinaryTextureLoader=function(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new sc(e)},e.Bone=Oo,e.BooleanKeyframeTrack=Wh,e.BoundingBoxHelper=function(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new Vu(e,t)},e.Box2=yu,e.Box3=nn,e.Box3Helper=class extends tl{constructor(e,t=16776960){var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const r=new S;r.setIndex(new vr(n,1)),r.setAttribute("position",new V([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new Xo({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}},e.BoxBufferGeometry=$r,e.BoxGeometry=$r,e.BoxHelper=Vu,e.BufferAttribute=vr,e.BufferGeometry=S,e.BufferGeometryLoader=Cc,e.ByteType=s,e.Cache=Qh,e.Camera=ii,e.CameraHelper=class extends tl{constructor(e){const t=new S;var c=new Xo({color:16777215,vertexColors:!0,toneMapped:!1});const n=[],r=[],i={};var a=new _(16755200),s=new _(16711680),o=new _(43775),u=new _(16777215),l=new _(3355443);function h(e,t,n){d(e,n),d(t,n)}function d(e,t){n.push(0,0,0),r.push(t.r,t.g,t.b),void 0===i[e]&&(i[e]=[]),i[e].push(n.length/3-1)}h("n1","n2",a),h("n2","n4",a),h("n4","n3",a),h("n3","n1",a),h("f1","f2",a),h("f2","f4",a),h("f4","f3",a),h("f3","f1",a),h("n1","f1",a),h("n2","f2",a),h("n3","f3",a),h("n4","f4",a),h("p","n1",s),h("p","n2",s),h("p","n3",s),h("p","n4",s),h("u1","u2",o),h("u2","u3",o),h("u3","u1",o),h("c","t",u),h("p","c",l),h("cn1","cn2",l),h("cn3","cn4",l),h("cf1","cf2",l),h("cf3","cf4",l),t.setAttribute("position",new V(n,3)),t.setAttribute("color",new V(r,3)),super(t,c),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=i,this.update()}update(){const e=this.geometry;var t=this.pointMap;Hu.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),zu("c",t,e,Hu,0,0,-1),zu("t",t,e,Hu,0,0,1),zu("n1",t,e,Hu,-1,-1,-1),zu("n2",t,e,Hu,1,-1,-1),zu("n3",t,e,Hu,-1,1,-1),zu("n4",t,e,Hu,1,1,-1),zu("f1",t,e,Hu,-1,-1,1),zu("f2",t,e,Hu,1,-1,1),zu("f3",t,e,Hu,-1,1,1),zu("f4",t,e,Hu,1,1,1),zu("u1",t,e,Hu,.7,1.1,-1),zu("u2",t,e,Hu,-.7,1.1,-1),zu("u3",t,e,Hu,0,2,-1),zu("cf1",t,e,Hu,-1,0,1),zu("cf2",t,e,Hu,1,0,1),zu("cf3",t,e,Hu,0,-1,1),zu("cf4",t,e,Hu,0,1,1),zu("cn1",t,e,Hu,-1,0,-1),zu("cn2",t,e,Hu,1,0,-1),zu("cn3",t,e,Hu,0,-1,-1),zu("cn4",t,e,Hu,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}},e.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been removed")},e.CanvasTexture=pl,e.CatmullRomCurve3=Dl,e.CineonToneMapping=3,e.CircleBufferGeometry=ml,e.CircleGeometry=ml,e.ClampToEdgeWrapping=Ie,e.Clock=kc,e.Color=_,e.ColorKeyframeTrack=jh,e.CompressedTexture=dl,e.CompressedTextureLoader=class extends tc{constructor(e){super(e)}load(n,i,r,a){const s=this,o=[],l=new dl,h=new rc(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(s.withCredentials);let c=0;if(Array.isArray(n))for(let e=0,t=n.length;e<t;++e)!function(t){h.load(n[t],function(e){e=s.parse(e,!0);o[t]={width:e.width,height:e.height,format:e.format,mipmaps:e.mipmaps},c+=1,6===c&&(1===e.mipmapCount&&(l.minFilter=Oe),l.image=o,l.format=e.format,l.needsUpdate=!0,i&&i(l))},r,a)}(e);else h.load(n,function(e){var n=s.parse(e,!0);if(n.isCubemap){var r=n.mipmaps.length/n.mipmapCount;for(let t=0;t<r;t++){o[t]={mipmaps:[]};for(let e=0;e<n.mipmapCount;e++)o[t].mipmaps.push(n.mipmaps[t*n.mipmapCount+e]),o[t].format=n.format,o[t].width=n.width,o[t].height=n.height}l.image=o}else l.image.width=n.width,l.image.height=n.height,l.mipmaps=n.mipmaps;1===n.mipmapCount&&(l.minFilter=Oe),l.format=n.format,l.needsUpdate=!0,i&&i(l)},r,a);return l}},e.ConeBufferGeometry=gl,e.ConeGeometry=gl,e.CubeCamera=si,e.CubeReflectionMapping=b,e.CubeRefractionMapping=w,e.CubeTexture=oi,e.CubeTextureLoader=ac,e.CubeUVReflectionMapping=C,e.CubeUVRefractionMapping=P,e.CubicBezierCurve=Ul,e.CubicBezierCurve3=Fl,e.CubicInterpolant=zh,e.CullFaceBack=Y,e.CullFaceFront=Z,e.CullFaceFrontBack=3,e.CullFaceNone=q,e.Curve=wl,e.CurvePath=Wl,e.CustomBlending=te,e.CustomToneMapping=5,e.CylinderBufferGeometry=fl,e.CylinderGeometry=fl,e.Cylindrical=class{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return(new this.constructor).copy(this)}},e.DataTexture=Uo,e.DataTexture2DArray=Qi,e.DataTexture3D=ia,e.DataTextureLoader=sc,e.DataUtils=class{static toHalfFloat(e){65504<e&&(console.warn("THREE.DataUtils.toHalfFloat(): value exceeds 65504."),e=65504),Yu[0]=e;e=Zu[0];let t=e>>16&32768,n=e>>12&2047;var r=e>>23&255;return r<103||(142<r?(t|=31744,t|=(255==r?0:1)&&8388607&e):r<113?(n|=2048,t|=(n>>114-r)+(n>>113-r&1)):(t|=r-112<<10|n>>1,t+=1&n)),t}},e.DecrementStencilOp=7683,e.DecrementWrapStencilOp=34056,e.DefaultLoadingManager=ec,e.DepthFormat=je,e.DepthStencilFormat=Xe,e.DepthTexture=Qs,e.DirectionalLight=Ec,e.DirectionalLightHelper=Fu,e.DiscreteInterpolant=Vh,e.DodecahedronBufferGeometry=yl,e.DodecahedronGeometry=yl,e.DoubleSide=Pe,e.DstAlphaFactor=me,e.DstColorFactor=ge,e.DynamicBufferAttribute=function(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new vr(e,t).setUsage(vt)},e.DynamicCopyUsage=35050,e.DynamicDrawUsage=vt,e.DynamicReadUsage=35049,e.EdgesGeometry=bl,e.EdgesHelper=function(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new tl(new bl(e.geometry),new Xo({color:void 0!==t?t:16777215}))},e.EllipseCurve=Tl,e.EqualDepth=be,e.EqualStencilFunc=514,e.EquirectangularReflectionMapping=l,e.EquirectangularRefractionMapping=h,e.Euler=zn,e.EventDispatcher=_t,e.ExtrudeBufferGeometry=ph,e.ExtrudeGeometry=ph,e.FaceColors=1,e.FileLoader=rc,e.FlatShading=1,e.Float16BufferAttribute=Tr,e.Float32Attribute=function(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new V(e,t)},e.Float32BufferAttribute=V,e.Float64Attribute=function(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Sr(e,t)},e.Float64BufferAttribute=Sr,e.FloatType=Ge,e.Fog=io,e.FogExp2=ro,e.Font=function(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")},e.FontLoader=function(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")},e.FramebufferTexture=ul,e.FrontSide=Le,e.Frustum=fi,e.GLBufferAttribute=mu,e.GLSL1="100",e.GLSL3=yt,e.GreaterDepth=Te,e.GreaterEqualDepth=we,e.GreaterEqualStencilFunc=518,e.GreaterStencilFunc=516,e.GridHelper=Iu,e.Group=Zs,e.HalfFloatType=Ve,e.HemisphereLight=hc,e.HemisphereLightHelper=Du,e.HemisphereLightProbe=Bc,e.IcosahedronBufferGeometry=fh,e.IcosahedronGeometry=fh,e.ImageBitmapLoader=Nc,e.ImageLoader=ic,e.ImageUtils=jt,e.ImmediateRenderObject=function(){console.error("THREE.ImmediateRenderObject has been removed.")},e.IncrementStencilOp=7682,e.IncrementWrapStencilOp=34055,e.InstancedBufferAttribute=zo,e.InstancedBufferGeometry=Lc,e.InstancedInterleavedBuffer=pu,e.InstancedMesh=jo,e.Int16Attribute=function(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Mr(e,t)},e.Int16BufferAttribute=Mr,e.Int32Attribute=function(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new br(e,t)},e.Int32BufferAttribute=br,e.Int8Attribute=function(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new yr(e,t)},e.Int8BufferAttribute=yr,e.IntType=c,e.InterleavedBuffer=so,e.InterleavedBufferAttribute=lo,e.Interpolant=Hh,e.InterpolateDiscrete=r,e.InterpolateLinear=i,e.InterpolateSmooth=2302,e.InvertStencilOp=5386,e.JSONLoader=function(){console.error("THREE.JSONLoader has been removed.")},e.KeepStencilOp=7680,e.KeyframeTrack=kh,e.LOD=Ro,e.LatheBufferGeometry=gh,e.LatheGeometry=gh,e.Layers=Gn,e.LensFlare=function(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")},e.LessDepth=Me,e.LessEqualDepth=Ee,e.LessEqualStencilFunc=515,e.LessStencilFunc=513,e.Light=lc,e.LightProbe=Sc,e.Line=Qo,e.Line3=Mu,e.LineBasicMaterial=Xo,e.LineCurve=Bl,e.LineCurve3=Hl,e.LineDashedMaterial=Uh,e.LineLoop=nl,e.LinePieces=1,e.LineSegments=tl,e.LineStrip=0,e.LinearEncoding=pt,e.LinearFilter=Oe,e.LinearInterpolant=Gh,e.LinearMipMapLinearFilter=1008,e.LinearMipMapNearestFilter=1007,e.LinearMipmapLinearFilter=Fe,e.LinearMipmapNearestFilter=Ue,e.LinearToneMapping=1,e.Loader=tc,e.LoaderUtils=Rc,e.LoadingManager=$h,e.LoopOnce=2200,e.LoopPingPong=2202,e.LoopRepeat=2201,e.LuminanceAlphaFormat=g,e.LuminanceFormat=f,e.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},e.Material=pr,e.MaterialLoader=Ac,e.Math=Dt,e.MathUtils=Dt,e.Matrix3=It,e.Matrix4=Re,e.MaxEquation=oe,e.Mesh=Kr,e.MeshBasicMaterial=mr,e.MeshDepthMaterial=zs,e.MeshDistanceMaterial=Gs,e.MeshFaceMaterial=function(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e},e.MeshLambertMaterial=Nh,e.MeshMatcapMaterial=Oh,e.MeshNormalMaterial=Ih,e.MeshPhongMaterial=Ph,e.MeshPhysicalMaterial=Ch,e.MeshStandardMaterial=Lh,e.MeshToonMaterial=Dh,e.MinEquation=se,e.MirroredRepeatWrapping=W,e.MixOperation=1,e.MultiMaterial=function(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,(e.materials=e).clone=function(){return e.slice()},e},e.MultiplyBlending=ee,e.MultiplyOperation=0,e.NearestFilter=Ne,e.NearestMipMapLinearFilter=1005,e.NearestMipMapNearestFilter=1004,e.NearestMipmapLinearFilter=X,e.NearestMipmapNearestFilter=j,e.NeverDepth=xe,e.NeverStencilFunc=512,e.NoBlending=J,e.NoColors=0,e.NoToneMapping=De,e.NormalAnimationBlendMode=2500,e.NormalBlending=K,e.NotEqualDepth=Se,e.NotEqualStencilFunc=517,e.NumberKeyframeTrack=Xh,e.Object3D=M,e.ObjectLoader=class extends tc{constructor(e){super(e)}load(r,i,e,a){const s=this;var t=""===this.path?Rc.extractUrlBase(r):this.path;this.resourcePath=this.resourcePath||t;const n=new rc(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(r,function(e){let t=null;try{t=JSON.parse(e)}catch(e){return void 0!==a&&a(e),void console.error("THREE:ObjectLoader: Can't parse "+r+".",e.message)}const n=t.metadata;void 0!==n&&void 0!==n.type&&"geometry"!==n.type.toLowerCase()?s.parse(t,i):console.error("THREE.ObjectLoader: Can't load "+r)},e,a)}async loadAsync(e,t){var n=""===this.path?Rc.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;const r=new rc(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);n=await r.loadAsync(e,t),t=JSON.parse(n);const i=t.metadata;if(void 0===i||void 0===i.type||"geometry"===i.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+e);return this.parseAsync(t)}parse(e,t){var n=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,r),i=this.parseImages(e.images,function(){void 0!==t&&t(o)}),a=this.parseTextures(e.textures,i),s=this.parseMaterials(e.materials,a);const o=this.parseObject(e.object,r,s,a,n);r=this.parseSkeletons(e.skeletons,o);if(this.bindSkeletons(o,r),void 0!==t){let e=!1;for(const l in i)if(i[l]instanceof HTMLImageElement){e=!0;break}!1===e&&t(o)}return o}async parseAsync(e){var t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),n=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),r=this.parseTextures(e.textures,r),i=this.parseMaterials(e.materials,r),n=this.parseObject(e.object,n,i,r,t),i=this.parseSkeletons(e.skeletons,n);return this.bindSkeletons(n,i),n}parseShapes(n){const r={};if(void 0!==n)for(let e=0,t=n.length;e<t;e++){var i=(new Xl).fromJSON(n[e]);r[i.uuid]=i}return r}parseSkeletons(n,e){const r={},i={};if(e.traverse(function(e){e.isBone&&(i[e.uuid]=e)}),void 0!==n)for(let e=0,t=n.length;e<t;e++){var a=(new Ho).fromJSON(n[e],i);r[a.uuid]=a}return r}parseGeometries(n,r){const i={};if(void 0!==n){const s=new Cc;for(let t=0,e=n.length;t<e;t++){let e;var a=n[t];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":e=s.parse(a);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:a.type in Ah?e=Ah[a.type].fromJSON(a,r):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${a.type}"`)}e.uuid=a.uuid,void 0!==a.name&&(e.name=a.name),!0===e.isBufferGeometry&&void 0!==a.userData&&(e.userData=a.userData),i[a.uuid]=e}}return i}parseMaterials(n,e){const r={},i={};if(void 0!==n){const o=new Ac;o.setTextures(e);for(let e=0,t=n.length;e<t;e++){var a=n[e];if("MultiMaterial"===a.type){const l=[];for(let e=0;e<a.materials.length;e++){var s=a.materials[e];void 0===r[s.uuid]&&(r[s.uuid]=o.parse(s)),l.push(r[s.uuid])}i[a.uuid]=l}else void 0===r[a.uuid]&&(r[a.uuid]=o.parse(a)),i[a.uuid]=r[a.uuid]}}return i}parseAnimations(t){const n={};if(void 0!==t)for(let e=0;e<t.length;e++){var r=t[e],r=Kh.parse(r);n[r.uuid]=r}return n}parseImages(n,e){const r=this,i={};let a;function s(e){var t,n;return"string"==typeof e?(t=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t=e)?t:r.resourcePath+t,n=t,r.manager.itemStart(n),a.load(n,function(){r.manager.itemEnd(n)},void 0,function(){r.manager.itemError(n),r.manager.itemEnd(n)})):e.data?{data:Ut(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==n&&0<n.length){e=new $h(e);a=new ic(e),a.setCrossOrigin(this.crossOrigin);for(let e=0,t=n.length;e<t;e++){var o=n[e],l=o.url;if(Array.isArray(l)){i[o.uuid]=[];for(let e=0,t=l.length;e<t;e++){var h=s(l[e]);null!==h&&(h instanceof HTMLImageElement?i[o.uuid].push(h):i[o.uuid].push(new Uo(h.data,h.width,h.height)))}}else{var c=s(o.url);null!==c&&(i[o.uuid]=c)}}}return i}async parseImagesAsync(n){const r=this,i={};let a;async function s(e){var t;return"string"==typeof e?(t=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t=e)?t:r.resourcePath+t,a.loadAsync(t)):e.data?{data:Ut(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==n&&0<n.length){a=new ic(this.manager),a.setCrossOrigin(this.crossOrigin);for(let e=0,t=n.length;e<t;e++){var o=n[e],l=o.url;if(Array.isArray(l)){i[o.uuid]=[];for(let e=0,t=l.length;e<t;e++){var h=await s(l[e]);null!==h&&(h instanceof HTMLImageElement?i[o.uuid].push(h):i[o.uuid].push(new Uo(h.data,h.width,h.height)))}}else{var c=await s(o.url);null!==c&&(i[o.uuid]=c)}}}return i}parseTextures(n,r){function i(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const a={};if(void 0!==n)for(let t=0,e=n.length;t<e;t++){var s=n[t];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===r[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);let e;var o=r[s.image];Array.isArray(o)?(e=new oi(o),6===o.length&&(e.needsUpdate=!0)):(e=o&&o.data?new Uo(o.data,o.width,o.height):new qt(o),o&&(e.needsUpdate=!0)),e.uuid=s.uuid,void 0!==s.name&&(e.name=s.name),void 0!==s.mapping&&(e.mapping=i(s.mapping,Pc)),void 0!==s.offset&&e.offset.fromArray(s.offset),void 0!==s.repeat&&e.repeat.fromArray(s.repeat),void 0!==s.center&&e.center.fromArray(s.center),void 0!==s.rotation&&(e.rotation=s.rotation),void 0!==s.wrap&&(e.wrapS=i(s.wrap[0],Dc),e.wrapT=i(s.wrap[1],Dc)),void 0!==s.format&&(e.format=s.format),void 0!==s.type&&(e.type=s.type),void 0!==s.encoding&&(e.encoding=s.encoding),void 0!==s.minFilter&&(e.minFilter=i(s.minFilter,Ic)),void 0!==s.magFilter&&(e.magFilter=i(s.magFilter,Ic)),void 0!==s.anisotropy&&(e.anisotropy=s.anisotropy),void 0!==s.flipY&&(e.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(e.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(e.unpackAlignment=s.unpackAlignment),void 0!==s.userData&&(e.userData=s.userData),a[s.uuid]=e}return a}parseObject(e,t,a,n,c){let r;function i(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function s(n){if(void 0!==n){if(Array.isArray(n)){const i=[];for(let e=0,t=n.length;e<t;e++){var r=n[e];void 0===a[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),i.push(a[r])}return i}return void 0===a[n]&&console.warn("THREE.ObjectLoader: Undefined material",n),a[n]}}function u(e){return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),n[e]}let o,l;switch(e.type){case"Scene":r=new ao,void 0!==e.background&&(Number.isInteger(e.background)?r.background=new _(e.background):r.background=u(e.background)),void 0!==e.environment&&(r.environment=u(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?r.fog=new io(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(r.fog=new ro(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":r=new ai(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(r.focus=e.focus),void 0!==e.zoom&&(r.zoom=e.zoom),void 0!==e.filmGauge&&(r.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(r.filmOffset=e.filmOffset),void 0!==e.view&&(r.view=Object.assign({},e.view));break;case"OrthographicCamera":r=new Si(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(r.zoom=e.zoom),void 0!==e.view&&(r.view=Object.assign({},e.view));break;case"AmbientLight":r=new bc(e.color,e.intensity);break;case"DirectionalLight":r=new Ec(e.color,e.intensity);break;case"PointLight":r=new _c(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":r=new wc(e.color,e.intensity,e.width,e.height);break;case"SpotLight":r=new fc(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":r=new hc(e.color,e.groundColor,e.intensity);break;case"LightProbe":r=(new Sc).fromJSON(e);break;case"SkinnedMesh":o=i(e.geometry),l=s(e.material),r=new No(o,l),void 0!==e.bindMode&&(r.bindMode=e.bindMode),void 0!==e.bindMatrix&&r.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(r.skeleton=e.skeleton);break;case"Mesh":o=i(e.geometry),l=s(e.material),r=new Kr(o,l);break;case"InstancedMesh":o=i(e.geometry),l=s(e.material);var d=e.count,p=e.instanceMatrix,h=e.instanceColor;r=new jo(o,l,d),r.instanceMatrix=new zo(new Float32Array(p.array),16),void 0!==h&&(r.instanceColor=new zo(new Float32Array(h.array),h.itemSize));break;case"LOD":r=new Ro;break;case"Line":r=new Qo(i(e.geometry),s(e.material));break;case"LineLoop":r=new nl(i(e.geometry),s(e.material));break;case"LineSegments":r=new tl(i(e.geometry),s(e.material));break;case"PointCloud":case"Points":r=new ll(i(e.geometry),s(e.material));break;case"Sprite":r=new wo(s(e.material));break;case"Group":r=new Zs;break;case"Bone":r=new Oo;break;default:r=new M}if(r.uuid=e.uuid,void 0!==e.name&&(r.name=e.name),void 0!==e.matrix?(r.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(r.matrixAutoUpdate=e.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(void 0!==e.position&&r.position.fromArray(e.position),void 0!==e.rotation&&r.rotation.fromArray(e.rotation),void 0!==e.quaternion&&r.quaternion.fromArray(e.quaternion),void 0!==e.scale&&r.scale.fromArray(e.scale)),void 0!==e.castShadow&&(r.castShadow=e.castShadow),void 0!==e.receiveShadow&&(r.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(r.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(r.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(r.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&r.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(r.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.frustumCulled&&(r.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(r.renderOrder=e.renderOrder),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.layers&&(r.layers.mask=e.layers),void 0!==e.children){var m=e.children;for(let e=0;e<m.length;e++)r.add(this.parseObject(m[e],t,a,n,c))}if(void 0!==e.animations){var f=e.animations;for(let e=0;e<f.length;e++){var g=f[e];r.animations.push(c[g])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(r.autoUpdate=e.autoUpdate);var v=e.levels;for(let e=0;e<v.length;e++){var y=v[e],x=r.getObjectByProperty("uuid",y.object);void 0!==x&&r.addLevel(x,y.distance)}}return r}bindSkeletons(e,n){0!==Object.keys(n).length&&e.traverse(function(e){var t;!0===e.isSkinnedMesh&&void 0!==e.skeleton&&(void 0===(t=n[e.skeleton])?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(t,e.bindMatrix))})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}},e.ObjectSpaceNormalMap=gt,e.OctahedronBufferGeometry=vh,e.OctahedronGeometry=vh,e.OneFactor=he,e.OneMinusDstAlphaFactor=fe,e.OneMinusDstColorFactor=ve,e.OneMinusSrcAlphaFactor=pe,e.OneMinusSrcColorFactor=ue,e.OrthographicCamera=Si,e.PCFShadowMap=A,e.PCFSoftShadowMap=2,e.PMREMGenerator=zi,e.ParametricGeometry=function(){return console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),new S},e.Particle=function(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new wo(e)},e.ParticleBasicMaterial=function(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new rl(e)},e.ParticleSystem=function(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new ll(e,t)},e.ParticleSystemMaterial=function(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new rl(e)},e.Path=jl,e.PerspectiveCamera=ai,e.Plane=di,e.PlaneBufferGeometry=yi,e.PlaneGeometry=yi,e.PlaneHelper=class extends Qo{constructor(e,t=1,n=16776960){const r=new S;r.setAttribute("position",new V([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),super(r,new Xo({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const i=new S;i.setAttribute("position",new V([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),i.computeBoundingSphere(),this.add(new Kr(i,new mr({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?Ce:Le,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}},e.PointCloud=function(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new ll(e,t)},e.PointCloudMaterial=function(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new rl(e)},e.PointLight=_c,e.PointLightHelper=Ru,e.Points=ll,e.PointsMaterial=rl,e.PolarGridHelper=class extends tl{constructor(t=10,u=16,d=8,n=64,r=4473924,i=8947848){r=new _(r),i=new _(i);const a=[],s=[];for(let e=0;e<=u;e++){var p=e/u*(2*Math.PI),o=Math.sin(p)*t,p=Math.cos(p)*t,o=(a.push(0,0,0),a.push(o,0,p),1&e?r:i);s.push(o.r,o.g,o.b),s.push(o.r,o.g,o.b)}for(let e=0;e<=d;e++){var l=1&e?r:i,h=t-t/d*e;for(let e=0;e<n;e++){var c=e/n*(2*Math.PI),m=Math.sin(c)*h,f=Math.cos(c)*h;a.push(m,0,f),s.push(l.r,l.g,l.b),c=(e+1)/n*(2*Math.PI),m=Math.sin(c)*h,f=Math.cos(c)*h,a.push(m,0,f),s.push(l.r,l.g,l.b)}}const e=new S;e.setAttribute("position",new V(a,3)),e.setAttribute("color",new V(s,3));var g=new Xo({vertexColors:!0,toneMapped:!1});super(e,g),this.type="PolarGridHelper"}},e.PolyhedronBufferGeometry=vl,e.PolyhedronGeometry=vl,e.PositionalAudio=class extends Jc{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(Kc,Qc,$c),eu.set(0,0,1).applyQuaternion(Qc);const t=this.panner;t.positionX?(e=this.context.currentTime+this.listener.timeDelta,t.positionX.linearRampToValueAtTime(Kc.x,e),t.positionY.linearRampToValueAtTime(Kc.y,e),t.positionZ.linearRampToValueAtTime(Kc.z,e),t.orientationX.linearRampToValueAtTime(eu.x,e),t.orientationY.linearRampToValueAtTime(eu.y,e),t.orientationZ.linearRampToValueAtTime(eu.z,e)):(t.setPosition(Kc.x,Kc.y,Kc.z),t.setOrientation(eu.x,eu.y,eu.z))}}},e.PropertyBinding=lu,e.PropertyMixer=nu,e.QuadraticBezierCurve=zl,e.QuadraticBezierCurve3=Gl,e.Quaternion=$t,e.QuaternionKeyframeTrack=Yh,e.QuaternionLinearInterpolant=qh,e.REVISION=t,e.RGBADepthPacking=n,e.RGBAFormat=We,e.RGBAIntegerFormat=L,e.RGBA_ASTC_10x10_Format=st,e.RGBA_ASTC_10x5_Format=rt,e.RGBA_ASTC_10x6_Format=it,e.RGBA_ASTC_10x8_Format=at,e.RGBA_ASTC_12x10_Format=ot,e.RGBA_ASTC_12x12_Format=lt,e.RGBA_ASTC_4x4_Format=Ze,e.RGBA_ASTC_5x4_Format=Je,e.RGBA_ASTC_5x5_Format=Ke,e.RGBA_ASTC_6x5_Format=Qe,e.RGBA_ASTC_6x6_Format=$e,e.RGBA_ASTC_8x5_Format=et,e.RGBA_ASTC_8x6_Format=tt,e.RGBA_ASTC_8x8_Format=nt,e.RGBA_BPTC_Format=ht,e.RGBA_ETC2_EAC_Format=Ye,e.RGBA_PVRTC_2BPPV1_Format=z,e.RGBA_PVRTC_4BPPV1_Format=H,e.RGBA_S3TC_DXT1_Format=I,e.RGBA_S3TC_DXT3_Format=O,e.RGBA_S3TC_DXT5_Format=U,e.RGBFormat=m,e.RGB_ETC1_Format=G,e.RGB_ETC2_Format=qe,e.RGB_PVRTC_2BPPV1_Format=B,e.RGB_PVRTC_4BPPV1_Format=F,e.RGB_S3TC_DXT1_Format=D,e.RGFormat=x,e.RGIntegerFormat=T,e.RawShaderMaterial=Ai,e.Ray=Cn,e.Raycaster=class{constructor(e,t,n=0,r=1/0){this.ray=new Cn(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new Gn,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return gu(e,this,n,t),n.sort(fu),n}intersectObjects(n,r=!0,i=[]){for(let e=0,t=n.length;e<t;e++)gu(n[e],this,i,r);return i.sort(fu),i}},e.RectAreaLight=wc,e.RedFormat=v,e.RedIntegerFormat=y,e.ReinhardToneMapping=2,e.RepeatWrapping=k,e.ReplaceStencilOp=7681,e.ReverseSubtractEquation=ae,e.RingBufferGeometry=yh,e.RingGeometry=yh,e.Scene=ao,e.SceneUtils=iu,e.ShaderChunk=E,e.ShaderLib=xi,e.ShaderMaterial=ri,e.ShadowMaterial=Rh,e.Shape=Xl,e.ShapeBufferGeometry=xh,e.ShapeGeometry=xh,e.ShapePath=class{constructor(){this.type="ShapePath",this.color=new _,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new jl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this}bezierCurveTo(e,t,n,r,i,a){return this.currentPath.bezierCurveTo(e,t,n,r,i,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(u,e){function d(n){const r=[];for(let e=0,t=n.length;e<t;e++){var i=n[e];const a=new Xl;a.curves=i.curves,r.push(a)}return r}const p=ch.isClockWise,n=this.subPaths;if(0===n.length)return[];if(!0===e)return d(n);let r,i,a;const t=[];if(1===n.length)return i=n[0],a=new Xl,a.curves=i.curves,t.push(a),t;let s=!p(n[0].getPoints());s=u?!s:s;const o=[],l=[];let h=[],c=0;var m,f;l[c]=void 0,h[c]=[];for(let e=0,t=n.length;e<t;e++)i=n[e],m=i.getPoints(),r=p(m),r=u?!r:r,r?(!s&&l[c]&&c++,l[c]={s:new Xl,p:m},l[c].s.curves=i.curves,s&&c++,h[c]=[]):h[c].push({h:i,p:m[0]});if(!l[0])return d(n);if(1<l.length){let i=!1;const y=[];for(let e=0,t=l.length;e<t;e++)o[e]=[];for(let r=0,e=l.length;r<e;r++){var g=h[r];for(let n=0;n<g.length;n++){var v=g[n];let t=!0;for(let e=0;e<l.length;e++)!function(s,o){var e=o.length;let l=!1;for(let i=e-1,a=0;a<e;i=a++){let e=o[i],t=o[a],n=t.x-e.x,r=t.y-e.y;if(Math.abs(r)>Number.EPSILON){if(r<0&&(e=o[a],n=-n,t=o[i],r=-r),!(s.y<e.y||s.y>t.y))if(s.y===e.y){if(s.x===e.x)return 1}else{var h=r*(s.x-e.x)-n*(s.y-e.y);if(0==h)return 1;h<0||(l=!l)}}else if(s.y===e.y&&(t.x<=s.x&&s.x<=e.x||e.x<=s.x&&s.x<=t.x))return 1}return l}(v.p,l[e].p)||(r!==e&&y.push({froms:r,tos:e,hole:n}),t?(t=!1,o[e].push(v)):i=!0);t&&o[r].push(v)}}0<y.length&&(i||(h=o))}for(let n=0,e=l.length;n<e;n++){a=l[n].s,t.push(a);for(let e=0,t=(f=h[n]).length;e<t;e++)a.holes.push(f[e].h)}return t}},e.ShapeUtils=ch,e.ShortType=o,e.Skeleton=Ho,e.SkeletonHelper=Au,e.SkinnedMesh=No,e.SmoothShading=2,e.Sphere=En,e.SphereBufferGeometry=_h,e.SphereGeometry=_h,e.Spherical=class{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(St(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}},e.SphericalHarmonics3=Tc,e.SplineCurve=Vl,e.SpotLight=fc,e.SpotLightHelper=bu,e.Sprite=wo,e.SpriteMaterial=ho,e.SrcAlphaFactor=de,e.SrcAlphaSaturateFactor=ye,e.SrcColorFactor=ce,e.StaticCopyUsage=35046,e.StaticDrawUsage=a,e.StaticReadUsage=35045,e.StereoCamera=class{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ai,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ai,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;var n,r,i,a;t.focus===e.focus&&t.fov===e.fov&&t.aspect===e.aspect*this.aspect&&t.near===e.near&&t.far===e.far&&t.zoom===e.zoom&&t.eyeSep===this.eyeSep||(t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Vc.copy(e.projectionMatrix),n=(i=t.eyeSep/2)*t.near/t.focus,r=t.near*Math.tan(bt*t.fov*.5)/t.zoom,Gc.elements[12]=-i,zc.elements[12]=i,i=-r*t.aspect+n,a=r*t.aspect+n,Vc.elements[0]=2*t.near/(a-i),Vc.elements[8]=(a+i)/(a-i),this.cameraL.projectionMatrix.copy(Vc),i=-r*t.aspect-n,a=r*t.aspect-n,Vc.elements[0]=2*t.near/(a-i),Vc.elements[8]=(a+i)/(a-i),this.cameraR.projectionMatrix.copy(Vc)),this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Gc),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(zc)}},e.StreamCopyUsage=35042,e.StreamDrawUsage=35040,e.StreamReadUsage=35041,e.StringKeyframeTrack=Zh,e.SubtractEquation=ie,e.SubtractiveBlending=$,e.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},e.TangentSpaceNormalMap=ft,e.TetrahedronBufferGeometry=Mh,e.TetrahedronGeometry=Mh,e.TextGeometry=function(){return console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),new S},e.Texture=qt,e.TextureLoader=oc,e.TorusBufferGeometry=Eh,e.TorusGeometry=Eh,e.TorusKnotBufferGeometry=bh,e.TorusKnotGeometry=bh,e.Triangle=ur,e.TriangleFanDrawMode=2,e.TriangleStripDrawMode=1,e.TrianglesDrawMode=0,e.TubeBufferGeometry=wh,e.TubeGeometry=wh,e.UVMapping=300,e.Uint16Attribute=function(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Er(e,t)},e.Uint16BufferAttribute=Er,e.Uint32Attribute=function(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new wr(e,t)},e.Uint32BufferAttribute=wr,e.Uint8Attribute=function(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new xr(e,t)},e.Uint8BufferAttribute=xr,e.Uint8ClampedAttribute=function(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new _r(e,t)},e.Uint8ClampedBufferAttribute=_r,e.Uniform=du,e.UniformsLib=N,e.UniformsUtils=ni,e.UnsignedByteType=Be,e.UnsignedInt248Type=ke,e.UnsignedIntType=ze,e.UnsignedShort4444Type=u,e.UnsignedShort5551Type=d,e.UnsignedShortType=He,e.VSMShadowMap=R,e.Vector2=ne,e.Vector3=Ae,e.Vector4=Zt,e.VectorKeyframeTrack=Jh,e.Vertex=function(e,t,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new Ae(e,t,n)},e.VertexColors=2,e.VideoTexture=cl,e.WebGL1Renderer=no,e.WebGLCubeRenderTarget=li,e.WebGLMultipleRenderTargets=Kt,e.WebGLMultisampleRenderTarget=Qt,e.WebGLRenderTarget=Jt,e.WebGLRenderTargetCube=function(e,t,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new li(e,n)},e.WebGLRenderer=to,e.WebGLUtils=qs,e.WireframeGeometry=Th,e.WireframeHelper=function(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new tl(new Th(e.geometry),new Xo({color:void 0!==t?t:16777215}))},e.WrapAroundEnding=dt,e.XHRLoader=function(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new rc(e)},e.ZeroCurvatureEnding=ct,e.ZeroFactor=le,e.ZeroSlopeEnding=ut,e.ZeroStencilOp=0,e._SRGBAFormat=xt,e.sRGBEncoding=mt,Object.defineProperty(e,"__esModule",{value:!0})}),console.warn("THREE.WebGL: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/index.html#manual/en/introduction/Import-via-modules."),THREE.WEBGL={isWebGLAvailable:function(){try{var e=document.createElement("canvas");return!(!window.WebGLRenderingContext||!e.getContext("webgl")&&!e.getContext("experimental-webgl"))}catch(e){return!1}},isWebGL2Available:function(){try{var e=document.createElement("canvas");return!(!window.WebGL2RenderingContext||!e.getContext("webgl2"))}catch(e){return!1}},getWebGLErrorMessage:function(){return this.getErrorMessage(1)},getWebGL2ErrorMessage:function(){return this.getErrorMessage(2)},getErrorMessage:function(e){var t={1:window.WebGLRenderingContext,2:window.WebGL2RenderingContext},n='Your $0 does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">$1</a>',r=document.createElement("div");return r.id="webglmessage",r.style.fontFamily="monospace",r.style.fontSize="13px",r.style.fontWeight="normal",r.style.textAlign="center",r.style.background="#fff",r.style.color="#000",r.style.padding="1.5em",r.style.width="400px",r.style.margin="5em auto 0",n=(n=t[e]?n.replace("$0","graphics card"):n.replace("$0","browser")).replace("$1",{1:"WebGL",2:"WebGL 2"}[e]),r.innerHTML=n,r}},function(){class u{constructor(){this.id=0,this.object=null,this.z=0,this.renderOrder=0}}class T{constructor(){this.id=0,this.v1=new S,this.v2=new S,this.v3=new S,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=new THREE.Color,this.material=null,this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],this.z=0,this.renderOrder=0}}class S{constructor(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0}copy(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)}}class A{constructor(){this.id=0,this.v1=new S,this.v2=new S,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0,this.renderOrder=0}}class d{constructor(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new THREE.Vector2,this.material=null,this.renderOrder=0}}THREE.Projector=class{constructor(){let t,I,n=0,s,N,o=0,g,O,y=0,i,U,l=0,a,F,h=0,R;const L={objects:[],lights:[],elements:[]},x=new THREE.Vector3,C=new THREE.Vector4,_=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),M=new THREE.Box3,E=new Array(3),B=new THREE.Matrix4,P=new THREE.Matrix4,H=new THREE.Matrix4,z=new THREE.Frustum,r=[],v=[],b=[],w=[],c=[];this.projectVector=function(e,t){console.warn("THREE.Projector: .projectVector() is now vector.project()."),e.project(t)},this.unprojectVector=function(e,t){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),e.unproject(t)},this.pickingRay=function(){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")};const D=new function(){const h=[],c=[],u=[];let d=null;const p=new THREE.Matrix3;function r(e){var t=e.position;const n=e.positionWorld,r=e.positionScreen;n.copy(t).applyMatrix4(R),r.copy(n).applyMatrix4(P);t=1/r.w;r.x*=t,r.y*=t,r.z*=t,e.visible=-1<=r.x&&r.x<=1&&-1<=r.y&&r.y<=1&&-1<=r.z&&r.z<=1}function m(e,t,n){return!0===e.visible||!0===t.visible||!0===n.visible||(E[0]=e.positionScreen,E[1]=t.positionScreen,E[2]=n.positionScreen,_.intersectsBox(M.setFromPoints(E)))}function f(e,t,n){return(n.positionScreen.x-e.positionScreen.x)*(t.positionScreen.y-e.positionScreen.y)-(n.positionScreen.y-e.positionScreen.y)*(t.positionScreen.x-e.positionScreen.x)<0}return{setObject:function(e){d=e,p.getNormalMatrix(d.matrixWorld),h.length=0,c.length=0,u.length=0},projectVertex:r,checkTriangleVisibility:m,checkBackfaceCulling:f,pushVertex:function(e,t,n){s=function(){if(N!==o)return v[N++];{var e=new S;return v.push(e),o++,N++,e}}(),s.position.set(e,t,n),r(s)},pushNormal:function(e,t,n){h.push(e,t,n)},pushColor:function(e,t,n){c.push(e,t,n)},pushUv:function(e,t){u.push(e,t)},pushLine:function(e,t){const n=v[e],r=v[t];n.positionScreen.copy(n.position).applyMatrix4(H),r.positionScreen.copy(r.position).applyMatrix4(H),!0===function(e,t){let n=0,r=1;var i=e.z+e.w,a=t.z+t.w,s=-e.z+e.w,o=-t.z+t.w;return 0<=i&&0<=a&&0<=s&&0<=o||!(i<0&&a<0||s<0&&o<0)&&(i<0?n=Math.max(n,i/(i-a)):a<0&&(r=Math.min(r,i/(i-a))),s<0?n=Math.max(n,s/(s-o)):o<0&&(r=Math.min(r,s/(s-o))),!(r<n)&&(e.lerp(t,n),t.lerp(e,1-r),!0))}(n.positionScreen,r.positionScreen)&&(n.positionScreen.multiplyScalar(1/n.positionScreen.w),r.positionScreen.multiplyScalar(1/r.positionScreen.w),i=function(){if(U!==l)return w[U++];{var e=new A;return w.push(e),l++,U++,e}}(),i.id=d.id,i.v1.copy(n),i.v2.copy(r),i.z=Math.max(n.positionScreen.z,r.positionScreen.z),i.renderOrder=d.renderOrder,i.material=d.material,d.material.vertexColors&&(i.vertexColors[0].fromArray(c,3*e),i.vertexColors[1].fromArray(c,3*t)),L.elements.push(i))},pushTriangle:function(e,t,n,r){var i=v[e],a=v[t],s=v[n];if(!1!==m(i,a,s)&&(r.side===THREE.DoubleSide||!0===f(i,a,s))){g=function(){if(O!==y)return b[O++];{var e=new T;return b.push(e),y++,O++,e}}(),g.id=d.id,g.v1.copy(i),g.v2.copy(a),g.v3.copy(s),g.z=(i.positionScreen.z+a.positionScreen.z+s.positionScreen.z)/3,g.renderOrder=d.renderOrder,x.subVectors(s.position,a.position),C.subVectors(i.position,a.position),x.cross(C),g.normalModel.copy(x),g.normalModel.applyMatrix3(p).normalize();for(let e=0;e<3;e++){const o=g.vertexNormalsModel[e],l=(o.fromArray(h,3*arguments[e]),o.applyMatrix3(p).normalize(),g.uvs[e]);l.fromArray(u,2*arguments[e])}g.vertexNormalsLength=3,(g.material=r).vertexColors&&g.color.fromArray(c,3*e),L.elements.push(g)}}}};function G(e){t=function(){if(I!==n)return r[I++];{var e=new u;return r.push(e),n++,I++,e}}(),t.id=e.id,t.object=e,x.setFromMatrixPosition(e.matrixWorld),x.applyMatrix4(P),t.z=x.z,t.renderOrder=e.renderOrder,L.objects.push(t)}function V(e,t,n){var r=1/e.w;e.z*=r,-1<=e.z&&e.z<=1&&(a=function(){if(F!==h)return c[F++];{var e=new d;return c.push(e),h++,F++,e}}(),a.id=t.id,a.x=e.x*r,a.y=e.y*r,a.z=e.z,a.renderOrder=t.renderOrder,a.object=t,a.rotation=t.rotation,a.scale.x=t.scale.x*Math.abs(a.x-(e.x+n.projectionMatrix.elements[0])/(e.w+n.projectionMatrix.elements[12])),a.scale.y=t.scale.y*Math.abs(a.y-(e.y+n.projectionMatrix.elements[5])/(e.w+n.projectionMatrix.elements[13])),a.material=t.material,L.elements.push(a))}function k(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id!==t.id?e.id-t.id:0}this.projectScene=function(e,n,t,d){O=0,U=0,F=0,!(L.elements.length=0)===e.autoUpdate&&e.updateMatrixWorld(),null===n.parent&&n.updateMatrixWorld(),B.copy(n.matrixWorldInverse),P.multiplyMatrices(n.projectionMatrix,B),z.setFromProjectionMatrix(P),I=0,L.objects.length=0,L.lights.length=0,function n(e){if(!1!==e.visible){if(e.isLight)L.lights.push(e);else if(e.isMesh||e.isLine||e.isPoints){if(!1===e.material.visible)return;if(!0===e.frustumCulled&&!1===z.intersectsObject(e))return;G(e)}else if(e.isSprite){if(!1===e.material.visible)return;if(!0===e.frustumCulled&&!1===z.intersectsSprite(e))return;G(e)}var r=e.children;for(let e=0,t=r.length;e<t;e++)n(r[e])}}(e),!0===t&&L.objects.sort(k);var p=L.objects;for(let e=0,t=p.length;e<t;e++){const c=p[e].object;var s=c.geometry;if(D.setObject(c),R=c.matrixWorld,N=0,c.isMesh){if(s.isBufferGeometry){let n=c.material;var m=Array.isArray(n),r=s.attributes,i=s.groups;if(void 0!==r.position){var o=r.position.array;for(let a=0,e=o.length;a<e;a+=3){let n=o[a],r=o[a+1],i=o[a+2];var f=s.morphAttributes.position;if(void 0!==f){var g=s.morphTargetsRelative,v=c.morphTargetInfluences;for(let e=0,t=f.length;e<t;e++){var l=v[e];if(0!==l){const u=f[e];g?(n+=u.getX(a/3)*l,r+=u.getY(a/3)*l,i+=u.getZ(a/3)*l):(n+=(u.getX(a/3)-o[a])*l,r+=(u.getY(a/3)-o[a+1])*l,i+=(u.getZ(a/3)-o[a+2])*l)}}}D.pushVertex(n,r,i)}if(void 0!==r.normal){var y=r.normal.array;for(let e=0,t=y.length;e<t;e+=3)D.pushNormal(y[e],y[e+1],y[e+2])}if(void 0!==r.color){var x=r.color.array;for(let e=0,t=x.length;e<t;e+=3)D.pushColor(x[e],x[e+1],x[e+2])}if(void 0!==r.uv){var _=r.uv.array;for(let e=0,t=_.length;e<t;e+=2)D.pushUv(_[e],_[e+1])}if(null!==s.index){var a=s.index.array;if(0<i.length)for(let e=0;e<i.length;e++){var M=i[e];if(n=!0===m?c.material[M.materialIndex]:c.material,void 0!==n)for(let e=M.start,t=M.start+M.count;e<t;e+=3)D.pushTriangle(a[e],a[e+1],a[e+2],n)}else for(let e=0,t=a.length;e<t;e+=3)D.pushTriangle(a[e],a[e+1],a[e+2],n)}else if(0<i.length)for(let e=0;e<i.length;e++){var E=i[e];if(n=!0===m?c.material[E.materialIndex]:c.material,void 0!==n)for(let e=E.start,t=E.start+E.count;e<t;e+=3)D.pushTriangle(e,e+1,e+2,n)}else for(let e=0,t=o.length/3;e<t;e+=3)D.pushTriangle(e,e+1,e+2,n)}}else if(s.isGeometry)return void console.error("THREE.Projector no longer supports Geometry. Use THREE.BufferGeometry instead.")}else if(c.isLine){if(H.multiplyMatrices(P,R),s.isBufferGeometry){r=s.attributes;if(void 0!==r.position){var h=r.position.array;for(let e=0,t=h.length;e<t;e+=3)D.pushVertex(h[e],h[e+1],h[e+2]);if(void 0!==r.color){var b=r.color.array;for(let e=0,t=b.length;e<t;e+=3)D.pushColor(b[e],b[e+1],b[e+2])}if(null!==s.index){var w=s.index.array;for(let e=0,t=w.length;e<t;e+=2)D.pushLine(w[e],w[e+1])}else{var T=c.isLineSegments?2:1;for(let e=0,t=h.length/3-1;e<t;e+=T)D.pushLine(e,e+1)}}}else if(s.isGeometry)return void console.error("THREE.Projector no longer supports Geometry. Use THREE.BufferGeometry instead.")}else if(c.isPoints){if(H.multiplyMatrices(P,R),s.isGeometry)return void console.error("THREE.Projector no longer supports Geometry. Use THREE.BufferGeometry instead.");if(s.isBufferGeometry){var S=s.attributes;if(void 0!==S.position){var A=S.position.array;for(let e=0,t=A.length;e<t;e+=3)C.set(A[e],A[e+1],A[e+2],1),C.applyMatrix4(H),V(C,c,n)}}}else c.isSprite&&(c.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,c.matrixWorld),C.set(R.elements[12],R.elements[13],R.elements[14],1),C.applyMatrix4(P),V(C,c,n))}return!0===d&&L.elements.sort(k),L}}},THREE.RenderableFace=T,THREE.RenderableLine=A,THREE.RenderableObject=u,THREE.RenderableSprite=d,THREE.RenderableVertex=S}(),function(){class e extends THREE.Object3D{constructor(e){super(),this.node=e}}e.prototype.isSVGObject=!0;THREE.SVGObject=e,THREE.SVGRenderer=class{constructor(){let A,R,L,n,r,v,y,x,_,M,e,t=0,i=null,a=1,E,C;const P=this,D=new THREE.Box2,I=new THREE.Box2,b=new THREE.Color,N=new THREE.Color,O=new THREE.Color,U=new THREE.Color,F=new THREE.Color,s=new THREE.Color,w=new THREE.Vector3,B=new THREE.Vector3,H=new THREE.Vector3,z=new THREE.Matrix3,G=new THREE.Matrix4,V=new THREE.Matrix4,o=[],k=new THREE.Projector,T=document.createElementNS("http://www.w3.org/2000/svg","svg");function W(){for(t=0;0<T.childNodes.length;)T.removeChild(T.childNodes[0])}function S(e){return null!==i?e.toFixed(i):e}function j(e,t,n){var r=t.x-e.x,i=t.y-e.y,a=r*r+i*i;0!=a&&(i*=n=n/Math.sqrt(a),t.x+=r*=n,t.y+=i,e.x-=r,e.y-=i)}function X(e,t){C===e?E+=t:(q(),C=e,E=t)}function q(){E&&(e=function(e){if(null!=o[e])return o[e];o[e]=document.createElementNS("http://www.w3.org/2000/svg","path"),0==a&&o[e].setAttribute("shape-rendering","crispEdges");return o[e]}(t++),e.setAttribute("d",E),e.setAttribute("style",C),T.appendChild(e)),E="",C=""}this.domElement=T,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.overdraw=.5,this.info={render:{vertices:0,faces:0}},this.setQuality=function(e){switch(e){case"high":a=1;break;case"low":a=0}},this.setClearColor=function(e){s.set(e)},this.setPixelRatio=function(){},this.setSize=function(e,t){n=e,r=t,v=n/2,y=r/2,T.setAttribute("viewBox",-v+" "+-y+" "+n+" "+r),T.setAttribute("width",n),T.setAttribute("height",r),D.min.set(-v,-y),D.max.set(v,y)},this.getSize=function(){return{width:n,height:r}},this.setPrecision=function(e){i=e},this.clear=function(){W(),T.style.backgroundColor=s.getStyle()},this.render=function(t,e){if(e instanceof THREE.Camera!=!1){const g=t.background;g&&g.isColor?(W(),T.style.backgroundColor=g.getStyle()):!0===this.autoClear&&this.clear(),P.info.render.vertices=0,P.info.render.faces=0,G.copy(e.matrixWorldInverse),V.multiplyMatrices(e.projectionMatrix,G),A=k.projectScene(t,e,this.sortObjects,this.sortElements),R=A.elements,L=A.lights,z.getNormalMatrix(e.matrixWorldInverse);var u=L;O.setRGB(0,0,0),U.setRGB(0,0,0),F.setRGB(0,0,0);for(let e=0,t=u.length;e<t;e++){var n=u[e],r=n.color;n.isAmbientLight?(O.r+=r.r,O.g+=r.g,O.b+=r.b):n.isDirectionalLight?(U.r+=r.r,U.g+=r.g,U.b+=r.b):n.isPointLight&&(F.r+=r.r,F.g+=r.g,F.b+=r.b)}E="",C="";for(let e=0,t=R.length;e<t;e++){var i=R[e],a=i.material;if(void 0!==a&&0!==a.opacity)if(I.makeEmpty(),i instanceof THREE.RenderableSprite){x=i,x.x*=v,x.y*=-y;{s=void 0;o=void 0;l=void 0;o=void 0;var s=x;var o=i;var l=a;let e=o.scale.x*v,t=o.scale.y*y;l.isPointsMaterial&&(e*=l.size,t*=l.size);o="M"+S(s.x-.5*e)+","+S(s.y-.5*t)+"h"+S(e)+"v"+S(t)+"h"+S(-e)+"z";let n="";(l.isSpriteMaterial||l.isPointsMaterial)&&(n="fill:"+l.color.getStyle()+";fill-opacity:"+l.opacity);X(n,o)}}else if(i instanceof THREE.RenderableLine){if(x=i.v1,_=i.v2,x.positionScreen.x*=v,x.positionScreen.y*=-y,_.positionScreen.x*=v,_.positionScreen.y*=-y,I.setFromPoints([x.positionScreen,_.positionScreen]),!0===D.intersectsBox(I)){s=o=l=s=void 0;s=x,l=_,o=a;if(s="M"+S(s.positionScreen.x)+","+S(s.positionScreen.y)+"L"+S(l.positionScreen.x)+","+S(l.positionScreen.y),o.isLineBasicMaterial){let e="fill:none;stroke:"+o.color.getStyle()+";stroke-opacity:"+o.opacity+";stroke-width:"+o.linewidth+";stroke-linecap:"+o.linecap;o.isLineDashedMaterial&&(e=e+";stroke-dasharray:"+o.dashSize+","+o.gapSize),X(e,s)}}}else if(i instanceof THREE.RenderableFace&&(x=i.v1,_=i.v2,M=i.v3,!(x.positionScreen.z<-1||1<x.positionScreen.z||_.positionScreen.z<-1||1<_.positionScreen.z||M.positionScreen.z<-1||1<M.positionScreen.z||(x.positionScreen.x*=v,x.positionScreen.y*=-y,_.positionScreen.x*=v,_.positionScreen.y*=-y,M.positionScreen.x*=v,M.positionScreen.y*=-y,0<this.overdraw&&(j(x.positionScreen,_.positionScreen,this.overdraw),j(_.positionScreen,M.positionScreen,this.overdraw),j(M.positionScreen,x.positionScreen,this.overdraw)),I.setFromPoints([x.positionScreen,_.positionScreen,M.positionScreen]),!0!==D.intersectsBox(I))))){d=void 0;p=void 0;m=void 0;h=void 0;c=void 0;f=void 0;var d=x;var p=_;var m=M;var h=i;var c=a;P.info.render.vertices+=3,P.info.render.faces++;var f="M"+S(d.positionScreen.x)+","+S(d.positionScreen.y)+"L"+S(p.positionScreen.x)+","+S(p.positionScreen.y)+"L"+S(m.positionScreen.x)+","+S(m.positionScreen.y)+"z";let e="";c.isMeshBasicMaterial?(b.copy(c.color),c.vertexColors&&b.multiply(h.color)):c.isMeshLambertMaterial||c.isMeshPhongMaterial||c.isMeshStandardMaterial?(N.copy(c.color),c.vertexColors&&N.multiply(h.color),b.copy(O),B.copy(d.positionWorld).add(p.positionWorld).add(m.positionWorld).divideScalar(3),function(n,r,i,a){for(let e=0,t=n.length;e<t;e++){var s,o,l=n[e],h=l.color;l.isDirectionalLight?(s=w.setFromMatrixPosition(l.matrixWorld).normalize(),(s=i.dot(s))<=0||(s*=l.intensity,a.r+=h.r*s,a.g+=h.g*s,a.b+=h.b*s)):l.isPointLight&&(s=w.setFromMatrixPosition(l.matrixWorld),(o=i.dot(w.subVectors(s,r).normalize()))<=0||0!=(o*=0==l.distance?1:1-Math.min(r.distanceTo(s)/l.distance,1))&&(o*=l.intensity,a.r+=h.r*o,a.g+=h.g*o,a.b+=h.b*o))}}(L,B,h.normalModel,b),b.multiply(N).add(c.emissive)):c.isMeshNormalMaterial&&(H.copy(h.normalModel).applyMatrix3(z).normalize(),b.setRGB(H.x,H.y,H.z).multiplyScalar(.5).addScalar(.5));e=c.wireframe?"fill:none;stroke:"+b.getStyle()+";stroke-opacity:"+c.opacity+";stroke-width:"+c.wireframeLinewidth+";stroke-linecap:"+c.wireframeLinecap+";stroke-linejoin:"+c.wireframeLinejoin:"fill:"+b.getStyle()+";fill-opacity:"+c.opacity;X(e,f)}}q(),t.traverseVisible(function(e){if(e.isSVGObject&&(w.setFromMatrixPosition(e.matrixWorld),w.applyMatrix4(V),!(w.z<-1||1<w.z))){var t=w.x*v,n=-w.y*y;const r=e.node;r.setAttribute("transform","translate("+t+","+n+")"),T.appendChild(r)}})}else console.error("THREE.SVGRenderer.render: camera is not an instance of THREE.Camera.")}}}}(),function(){const Y={type:"change"},Z={type:"start"},J={type:"end"};class e extends THREE.EventDispatcher{constructor(e,t){super(),void 0===t&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new THREE.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:THREE.MOUSE.ROTATE,MIDDLE:THREE.MOUSE.DOLLY,RIGHT:THREE.MOUSE.PAN},this.touches={ONE:THREE.TOUCH.ROTATE,TWO:THREE.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return d.phi},this.getAzimuthalAngle=function(){return d.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(e){e.addEventListener("keydown",k),this._domElementKeyEvents=e},this.saveState=function(){h.target0.copy(h.target),h.position0.copy(h.object.position),h.zoom0=h.object.zoom},this.reset=function(){h.target.copy(h.target0),h.object.position.copy(h.position0),h.object.zoom=h.zoom0,h.object.updateProjectionMatrix(),h.dispatchEvent(Y),h.update(),u=c.NONE},this.update=function(){const r=new THREE.Vector3,i=(new THREE.Quaternion).setFromUnitVectors(e.up,new THREE.Vector3(0,1,0)),a=i.clone().invert(),s=new THREE.Vector3,o=new THREE.Quaternion,l=2*Math.PI;return function(){const e=h.object.position;r.copy(e).sub(h.target),r.applyQuaternion(i),d.setFromVector3(r),h.autoRotate&&u===c.NONE&&b(2*Math.PI/60/60*h.autoRotateSpeed),h.enableDamping?(d.theta+=p.theta*h.dampingFactor,d.phi+=p.phi*h.dampingFactor):(d.theta+=p.theta,d.phi+=p.phi);let t=h.minAzimuthAngle,n=h.maxAzimuthAngle;return isFinite(t)&&isFinite(n)&&(t<-Math.PI?t+=l:t>Math.PI&&(t-=l),n<-Math.PI?n+=l:n>Math.PI&&(n-=l),t<=n?d.theta=Math.max(t,Math.min(n,d.theta)):d.theta=d.theta>(t+n)/2?Math.max(t,d.theta):Math.min(n,d.theta)),d.phi=Math.max(h.minPolarAngle,Math.min(h.maxPolarAngle,d.phi)),d.makeSafe(),d.radius*=f,d.radius=Math.max(h.minDistance,Math.min(h.maxDistance,d.radius)),!0===h.enableDamping?h.target.addScaledVector(g,h.dampingFactor):h.target.add(g),r.setFromSpherical(d),r.applyQuaternion(a),e.copy(h.target).add(r),h.object.lookAt(h.target),!0===h.enableDamping?(p.theta*=1-h.dampingFactor,p.phi*=1-h.dampingFactor,g.multiplyScalar(1-h.dampingFactor)):(p.set(0,0,0),g.set(0,0,0)),f=1,!!(v||s.distanceToSquared(h.object.position)>m||8*(1-o.dot(h.object.quaternion))>m)&&(h.dispatchEvent(Y),s.copy(h.object.position),o.copy(h.object.quaternion),!(v=!1))}}(),this.dispose=function(){h.domElement.removeEventListener("contextmenu",W),h.domElement.removeEventListener("pointerdown",B),h.domElement.removeEventListener("pointercancel",G),h.domElement.removeEventListener("wheel",V),h.domElement.removeEventListener("pointermove",H),h.domElement.removeEventListener("pointerup",z),null!==h._domElementKeyEvents&&h._domElementKeyEvents.removeEventListener("keydown",k)};const h=this,c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let u=c.NONE;const m=1e-6,d=new THREE.Spherical,p=new THREE.Spherical;let f=1;const g=new THREE.Vector3;let v=!1;const r=new THREE.Vector2,i=new THREE.Vector2,l=new THREE.Vector2,a=new THREE.Vector2,s=new THREE.Vector2,y=new THREE.Vector2,x=new THREE.Vector2,_=new THREE.Vector2,M=new THREE.Vector2,o=[],n={};function E(){return Math.pow(.95,h.zoomSpeed)}function b(e){p.theta-=e}function w(e){p.phi-=e}const T=function(){const n=new THREE.Vector3;return function(e,t){n.setFromMatrixColumn(t,0),n.multiplyScalar(-e),g.add(n)}}(),S=function(){const n=new THREE.Vector3;return function(e,t){!0===h.screenSpacePanning?n.setFromMatrixColumn(t,1):(n.setFromMatrixColumn(t,0),n.crossVectors(h.object.up,n)),n.multiplyScalar(e),g.add(n)}}(),A=function(){const i=new THREE.Vector3;return function(e,t){var n,r=h.domElement;h.object.isPerspectiveCamera?(n=h.object.position,i.copy(n).sub(h.target),n=i.length(),n*=Math.tan(h.object.fov/2*Math.PI/180),T(2*e*n/r.clientHeight,h.object.matrix),S(2*t*n/r.clientHeight,h.object.matrix)):h.object.isOrthographicCamera?(T(e*(h.object.right-h.object.left)/h.object.zoom/r.clientWidth,h.object.matrix),S(t*(h.object.top-h.object.bottom)/h.object.zoom/r.clientHeight,h.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),h.enablePan=!1)}}();function R(e){h.object.isPerspectiveCamera?f/=e:h.object.isOrthographicCamera?(h.object.zoom=Math.max(h.minZoom,Math.min(h.maxZoom,h.object.zoom*e)),h.object.updateProjectionMatrix(),v=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),h.enableZoom=!1)}function L(e){h.object.isPerspectiveCamera?f*=e:h.object.isOrthographicCamera?(h.object.zoom=Math.max(h.minZoom,Math.min(h.maxZoom,h.object.zoom/e)),h.object.updateProjectionMatrix(),v=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),h.enableZoom=!1)}function C(e){r.set(e.clientX,e.clientY)}function P(e){a.set(e.clientX,e.clientY)}function D(){var e,t;1===o.length?r.set(o[0].pageX,o[0].pageY):(e=.5*(o[0].pageX+o[1].pageX),t=.5*(o[0].pageY+o[1].pageY),r.set(e,t))}function I(){var e,t;1===o.length?a.set(o[0].pageX,o[0].pageY):(e=.5*(o[0].pageX+o[1].pageX),t=.5*(o[0].pageY+o[1].pageY),a.set(e,t))}function N(){var e=o[0].pageX-o[1].pageX,t=o[0].pageY-o[1].pageY,e=Math.sqrt(e*e+t*t);x.set(0,e)}function O(e){1==o.length?i.set(e.pageX,e.pageY):(n=q(e),t=.5*(e.pageX+n.x),e=.5*(e.pageY+n.y),i.set(t,e)),l.subVectors(i,r).multiplyScalar(h.rotateSpeed);var t,n=h.domElement;b(2*Math.PI*l.x/n.clientHeight),w(2*Math.PI*l.y/n.clientHeight),r.copy(i)}function U(e){var t,n;1===o.length?s.set(e.pageX,e.pageY):(t=q(e),n=.5*(e.pageX+t.x),e=.5*(e.pageY+t.y),s.set(n,e)),y.subVectors(s,a).multiplyScalar(h.panSpeed),A(y.x,y.y),a.copy(s)}function F(e){var t=q(e),n=e.pageX-t.x,e=e.pageY-t.y,t=Math.sqrt(n*n+e*e);_.set(0,t),M.set(0,Math.pow(_.y/x.y,h.zoomSpeed)),R(M.y),x.copy(_)}function B(t){var e;if(!1!==h.enabled)if(0===o.length&&(h.domElement.setPointerCapture(t.pointerId),h.domElement.addEventListener("pointermove",H),h.domElement.addEventListener("pointerup",z)),e=t,o.push(e),"touch"===t.pointerType){switch(X(t),o.length){case 1:switch(h.touches.ONE){case THREE.TOUCH.ROTATE:if(!1===h.enableRotate)return;D(),u=c.TOUCH_ROTATE;break;case THREE.TOUCH.PAN:if(!1===h.enablePan)return;I(),u=c.TOUCH_PAN;break;default:u=c.NONE}break;case 2:switch(h.touches.TWO){case THREE.TOUCH.DOLLY_PAN:if(!1===h.enableZoom&&!1===h.enablePan)return;h.enableZoom&&N(),h.enablePan&&I(),u=c.TOUCH_DOLLY_PAN;break;case THREE.TOUCH.DOLLY_ROTATE:if(!1===h.enableZoom&&!1===h.enableRotate)return;h.enableZoom&&N(),h.enableRotate&&D(),u=c.TOUCH_DOLLY_ROTATE;break;default:u=c.NONE}break;default:u=c.NONE}u!==c.NONE&&h.dispatchEvent(Z)}else{var n=t;let e;switch(n.button){case 0:e=h.mouseButtons.LEFT;break;case 1:e=h.mouseButtons.MIDDLE;break;case 2:e=h.mouseButtons.RIGHT;break;default:e=-1}switch(e){case THREE.MOUSE.DOLLY:if(!1===h.enableZoom)return;!function(e){x.set(e.clientX,e.clientY)}(n),u=c.DOLLY;break;case THREE.MOUSE.ROTATE:if(n.ctrlKey||n.metaKey||n.shiftKey){if(!1===h.enablePan)return;P(n),u=c.PAN}else{if(!1===h.enableRotate)return;C(n),u=c.ROTATE}break;case THREE.MOUSE.PAN:if(n.ctrlKey||n.metaKey||n.shiftKey){if(!1===h.enableRotate)return;C(n),u=c.ROTATE}else{if(!1===h.enablePan)return;P(n),u=c.PAN}break;default:u=c.NONE}u!==c.NONE&&h.dispatchEvent(Z)}}function H(e){if(!1!==h.enabled)if("touch"===e.pointerType){var t=e;switch(X(t),u){case c.TOUCH_ROTATE:if(!1===h.enableRotate)return;O(t),h.update();break;case c.TOUCH_PAN:if(!1===h.enablePan)return;U(t),h.update();break;case c.TOUCH_DOLLY_PAN:if(!1===h.enableZoom&&!1===h.enablePan)return;!function(e){h.enableZoom&&F(e),h.enablePan&&U(e)}(t),h.update();break;case c.TOUCH_DOLLY_ROTATE:if(!1===h.enableZoom&&!1===h.enableRotate)return;!function(e){h.enableZoom&&F(e),h.enableRotate&&O(e)}(t),h.update();break;default:u=c.NONE}}else{var n=e;if(!1!==h.enabled)switch(u){case c.ROTATE:if(!1===h.enableRotate)return;!function(e){i.set(e.clientX,e.clientY),l.subVectors(i,r).multiplyScalar(h.rotateSpeed),e=h.domElement,b(2*Math.PI*l.x/e.clientHeight),w(2*Math.PI*l.y/e.clientHeight),r.copy(i),h.update()}(n);break;case c.DOLLY:if(!1===h.enableZoom)return;!function(e){_.set(e.clientX,e.clientY),M.subVectors(_,x),0<M.y?R(E()):M.y<0&&L(E()),x.copy(_),h.update()}(n);break;case c.PAN:if(!1===h.enablePan)return;!function(e){s.set(e.clientX,e.clientY),y.subVectors(s,a).multiplyScalar(h.panSpeed),A(y.x,y.y),a.copy(s),h.update()}(n)}}}function z(e){j(e),0===o.length&&(h.domElement.releasePointerCapture(e.pointerId),h.domElement.removeEventListener("pointermove",H),h.domElement.removeEventListener("pointerup",z)),h.dispatchEvent(J),u=c.NONE}function G(e){j(e)}function V(e){!1!==h.enabled&&!1!==h.enableZoom&&u===c.NONE&&(e.preventDefault(),h.dispatchEvent(Z),(e=e).deltaY<0?L(E()):0<e.deltaY&&R(E()),h.update(),h.dispatchEvent(J))}function k(t){if(!1!==h.enabled&&!1!==h.enablePan){let e=!1;switch(t.code){case h.keys.UP:A(0,h.keyPanSpeed),e=!0;break;case h.keys.BOTTOM:A(0,-h.keyPanSpeed),e=!0;break;case h.keys.LEFT:A(h.keyPanSpeed,0),e=!0;break;case h.keys.RIGHT:A(-h.keyPanSpeed,0),e=!0}e&&(t.preventDefault(),h.update())}}function W(e){!1!==h.enabled&&e.preventDefault()}function j(t){delete n[t.pointerId];for(let e=0;e<o.length;e++)if(o[e].pointerId==t.pointerId)return void o.splice(e,1)}function X(e){let t=n[e.pointerId];void 0===t&&(t=new THREE.Vector2,n[e.pointerId]=t),t.set(e.pageX,e.pageY)}function q(e){e=e.pointerId===o[0].pointerId?o[1]:o[0];return n[e.pointerId]}h.domElement.addEventListener("contextmenu",W),h.domElement.addEventListener("pointerdown",B),h.domElement.addEventListener("pointercancel",G),h.domElement.addEventListener("wheel",V,{passive:!1}),this.update()}}THREE.MapControls=class extends e{constructor(e,t){super(e,t),this.screenSpacePanning=!1,this.mouseButtons.LEFT=THREE.MOUSE.PAN,this.mouseButtons.RIGHT=THREE.MOUSE.ROTATE,this.touches.ONE=THREE.TOUCH.PAN,this.touches.TWO=THREE.TOUCH.DOLLY_ROTATE}},THREE.OrbitControls=e}(),function(){const I={type:"change"},N={type:"start"},O={type:"end"};class e extends THREE.EventDispatcher{constructor(e,t){super(),void 0===t&&console.warn('THREE.TrackballControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.TrackballControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.');const o=this,a={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},n=(this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:THREE.MOUSE.ROTATE,MIDDLE:THREE.MOUSE.DOLLY,RIGHT:THREE.MOUSE.PAN},this.target=new THREE.Vector3,new THREE.Vector3);let i=1,s=a.NONE,l=a.NONE,m=0,f=0,g=0;const h=new THREE.Vector3,c=new THREE.Vector2,u=new THREE.Vector2,v=new THREE.Vector3,r=new THREE.Vector2,y=new THREE.Vector2,d=new THREE.Vector2,x=new THREE.Vector2,p=[],_={},M=(this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.up0=this.object.up.clone(),this.zoom0=this.object.zoom,this.handleResize=function(){var e=o.domElement.getBoundingClientRect(),t=o.domElement.ownerDocument.documentElement;o.screen.left=e.left+window.pageXOffset-t.clientLeft,o.screen.top=e.top+window.pageYOffset-t.clientTop,o.screen.width=e.width,o.screen.height=e.height},function(){const n=new THREE.Vector2;return function(e,t){return n.set((e-o.screen.left)/o.screen.width,(t-o.screen.top)/o.screen.height),n}}()),E=function(){const n=new THREE.Vector2;return function(e,t){return n.set((e-.5*o.screen.width-o.screen.left)/(.5*o.screen.width),(o.screen.height+2*(o.screen.top-t))/o.screen.width),n}}();function b(e){if(!1!==o.enabled)if(0===p.length&&(o.domElement.setPointerCapture(e.pointerId),o.domElement.addEventListener("pointermove",w),o.domElement.addEventListener("pointerup",T)),t=e,p.push(t),"touch"===e.pointerType){var t=e;1===(D(t),p.length)?(s=a.TOUCH_ROTATE,u.copy(E(p[0].pageX,p[0].pageY)),c.copy(u)):(s=a.TOUCH_ZOOM_PAN,t=p[0].pageX-p[1].pageX,n=p[0].pageY-p[1].pageY,f=m=Math.sqrt(t*t+n*n),t=(p[0].pageX+p[1].pageX)/2,n=(p[0].pageY+p[1].pageY)/2,d.copy(M(t,n)),x.copy(d)),o.dispatchEvent(N)}else{t=e;if(s===a.NONE)switch(t.button){case o.mouseButtons.LEFT:s=a.ROTATE;break;case o.mouseButtons.MIDDLE:s=a.ZOOM;break;case o.mouseButtons.RIGHT:s=a.PAN;break;default:s=a.NONE}var n=l!==a.NONE?l:s;n!==a.ROTATE||o.noRotate?n!==a.ZOOM||o.noZoom?n!==a.PAN||o.noPan||(d.copy(M(t.pageX,t.pageY)),x.copy(d)):(r.copy(M(t.pageX,t.pageY)),y.copy(r)):(u.copy(E(t.pageX,t.pageY)),c.copy(u)),o.dispatchEvent(N)}}function w(e){var t,n,r,i;!1!==o.enabled&&("touch"===e.pointerType?1===(D(r=e),p.length)?(c.copy(u),u.copy(E(r.pageX,r.pageY))):(i=function(e){e=e.pointerId===p[0].pointerId?p[1]:p[0];return _[e.pointerId]}(r),t=r.pageX-i.x,n=r.pageY-i.y,f=Math.sqrt(t*t+n*n),t=(r.pageX+i.x)/2,n=(r.pageY+i.y)/2,x.copy(M(t,n))):(r=e,(i=l!==a.NONE?l:s)!==a.ROTATE||o.noRotate?i!==a.ZOOM||o.noZoom?i!==a.PAN||o.noPan||x.copy(M(r.pageX,r.pageY)):y.copy(M(r.pageX,r.pageY)):(c.copy(u),u.copy(E(r.pageX,r.pageY)))))}function T(e){if(!1!==o.enabled){if("touch"===e.pointerType){var t=e;switch(p.length){case 0:s=a.NONE;break;case 1:s=a.TOUCH_ROTATE,u.copy(E(t.pageX,t.pageY)),c.copy(u);break;case 2:s=a.TOUCH_ZOOM_PAN,u.copy(E(t.pageX-c.pageX,t.pageY-c.pageY)),c.copy(u)}o.dispatchEvent(O)}else s=a.NONE,o.dispatchEvent(O);P(e),0===p.length&&(o.domElement.releasePointerCapture(e.pointerId),o.domElement.removeEventListener("pointermove",w),o.domElement.removeEventListener("pointerup",T))}}function S(e){P(e)}function A(e){!1!==o.enabled&&(window.removeEventListener("keydown",A),l!==a.NONE||(e.code!==o.keys[a.ROTATE]||o.noRotate?e.code!==o.keys[a.ZOOM]||o.noZoom?e.code!==o.keys[a.PAN]||o.noPan||(l=a.PAN):l=a.ZOOM:l=a.ROTATE))}function R(){!1!==o.enabled&&(l=a.NONE,window.addEventListener("keydown",A))}function L(e){if(!1!==o.enabled&&!0!==o.noZoom){switch(e.preventDefault(),e.deltaMode){case 2:r.y-=.025*e.deltaY;break;case 1:r.y-=.01*e.deltaY;break;default:r.y-=25e-5*e.deltaY}o.dispatchEvent(N),o.dispatchEvent(O)}}function C(e){!1!==o.enabled&&e.preventDefault()}function P(t){delete _[t.pointerId];for(let e=0;e<p.length;e++)if(p[e].pointerId==t.pointerId)return void p.splice(e,1)}function D(e){let t=_[e.pointerId];void 0===t&&(t=new THREE.Vector2,_[e.pointerId]=t),t.set(e.pageX,e.pageY)}this.rotateCamera=function(){const t=new THREE.Vector3,n=new THREE.Quaternion,r=new THREE.Vector3,i=new THREE.Vector3,a=new THREE.Vector3,s=new THREE.Vector3;return function(){s.set(u.x-c.x,u.y-c.y,0);var e=s.length();e?(h.copy(o.object.position).sub(o.target),r.copy(h).normalize(),i.copy(o.object.up).normalize(),a.crossVectors(i,r).normalize(),i.setLength(u.y-c.y),a.setLength(u.x-c.x),s.copy(i.add(a)),t.crossVectors(s,h).normalize(),e*=o.rotateSpeed,n.setFromAxisAngle(t,e),h.applyQuaternion(n),o.object.up.applyQuaternion(n),v.copy(t),g=e):!o.staticMoving&&g&&(g*=Math.sqrt(1-o.dynamicDampingFactor),h.copy(o.object.position).sub(o.target),n.setFromAxisAngle(v,g),h.applyQuaternion(n),o.object.up.applyQuaternion(n)),c.copy(u)}}(),this.zoomCamera=function(){let e;s===a.TOUCH_ZOOM_PAN?(e=m/f,m=f,o.object.isPerspectiveCamera?h.multiplyScalar(e):o.object.isOrthographicCamera?(o.object.zoom/=e,o.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(e=1+(y.y-r.y)*o.zoomSpeed,1!==e&&0<e&&(o.object.isPerspectiveCamera?h.multiplyScalar(e):o.object.isOrthographicCamera?(o.object.zoom/=e,o.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),o.staticMoving?r.copy(y):r.y+=(y.y-r.y)*this.dynamicDampingFactor)},this.panCamera=function(){const n=new THREE.Vector2,r=new THREE.Vector3,i=new THREE.Vector3;return function(){var e,t;n.copy(x).sub(d),n.lengthSq()&&(o.object.isOrthographicCamera&&(e=(o.object.right-o.object.left)/o.object.zoom/o.domElement.clientWidth,t=(o.object.top-o.object.bottom)/o.object.zoom/o.domElement.clientWidth,n.x*=e,n.y*=t),n.multiplyScalar(h.length()*o.panSpeed),i.copy(h).cross(o.object.up).setLength(n.x),i.add(r.copy(o.object.up).setLength(n.y)),o.object.position.add(i),o.target.add(i),o.staticMoving?d.copy(x):d.add(n.subVectors(x,d).multiplyScalar(o.dynamicDampingFactor)))}}(),this.checkDistances=function(){o.noZoom&&o.noPan||(h.lengthSq()>o.maxDistance*o.maxDistance&&(o.object.position.addVectors(o.target,h.setLength(o.maxDistance)),r.copy(y)),h.lengthSq()<o.minDistance*o.minDistance&&(o.object.position.addVectors(o.target,h.setLength(o.minDistance)),r.copy(y)))},this.update=function(){h.subVectors(o.object.position,o.target),o.noRotate||o.rotateCamera(),o.noZoom||o.zoomCamera(),o.noPan||o.panCamera(),o.object.position.addVectors(o.target,h),o.object.isPerspectiveCamera?(o.checkDistances(),o.object.lookAt(o.target),1e-6<n.distanceToSquared(o.object.position)&&(o.dispatchEvent(I),n.copy(o.object.position))):o.object.isOrthographicCamera?(o.object.lookAt(o.target),(1e-6<n.distanceToSquared(o.object.position)||i!==o.object.zoom)&&(o.dispatchEvent(I),n.copy(o.object.position),i=o.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type")},this.reset=function(){s=a.NONE,l=a.NONE,o.target.copy(o.target0),o.object.position.copy(o.position0),o.object.up.copy(o.up0),o.object.zoom=o.zoom0,o.object.updateProjectionMatrix(),h.subVectors(o.object.position,o.target),o.object.lookAt(o.target),o.dispatchEvent(I),n.copy(o.object.position),i=o.object.zoom},this.dispose=function(){o.domElement.removeEventListener("contextmenu",C),o.domElement.removeEventListener("pointerdown",b),o.domElement.removeEventListener("pointercancel",S),o.domElement.removeEventListener("wheel",L),o.domElement.removeEventListener("pointermove",w),o.domElement.removeEventListener("pointerup",T),window.removeEventListener("keydown",A),window.removeEventListener("keyup",R)},this.domElement.addEventListener("contextmenu",C),this.domElement.addEventListener("pointerdown",b),this.domElement.addEventListener("pointercancel",S),this.domElement.addEventListener("wheel",L,{passive:!1}),window.addEventListener("keydown",A),window.addEventListener("keyup",R),this.handleResize(),this.update()}}THREE.TrackballControls=e}();