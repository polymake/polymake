
#  Copyright (c) 1997-2022
#  Ewgenij Gawrilow, Michael Joswig, and the polymake team
#  Technische Universit√§t Berlin, Germany
#  https://polymake.org
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by the
#  Free Software Foundation; either version 2, or (at your option) any
#  later version: http://www.gnu.org/licenses/gpl.txt.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#-------------------------------------------------------------------------------

# @category Linear Algebra
# Compute the __Smith normal form__ of a given matrix //M// via flint.
# @param Matrix M must be of integer type
# @return SparseMatrix<Integer>
# @example
# > $M = new Matrix<Integer>([1,2],[23,24]);
# > $SNF = smith_normal_form_flint($M);
# > print $SNF;
# | 1 0
# | 0 22

user_function smith_normal_form_flint(Matrix) : c++ (include => "polymake/common/FlintSNF.h");

# @category Linear Algebra
# Computes the rank of a given matrix //M// in GF(p), where //p// is a prime number.
# @param Matrix M must be of integer type
# @param Integer p must be a prime, the modulus.
# @return Integer
# @example
# > $M = new Matrix<Integer>([0,1,1],[1,0,1],[1,1,0]);
# > $RK = rank_mod_p($M, 2);
# > print $RK;
# | 2

user_function rank_mod_p(Matrix, Int) :  c++ (include => "polymake/common/finiteFieldLA.h");

# Local Variables:
# mode: perl
# cperl-indent-level: 3
# indent-tabs-mode:nil
# End:
